   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LED3.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	LED3_currPWM,2,2
  18              		.section	.text.LED3_Deinit,"ax",%progbits
  19              		.align	2
  20              		.global	LED3_Deinit
  21              		.code	16
  22              		.thumb_func
  24              	LED3_Deinit:
  25              	.LFB0:
  26              		.file 1 "../Generated_Code/LED3.c"
   1:../Generated_Code/LED3.c **** /** ###################################################################
   2:../Generated_Code/LED3.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/LED3.c **** **     Filename    : LED3.c
   4:../Generated_Code/LED3.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/LED3.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/LED3.c **** **     Component   : LED
   7:../Generated_Code/LED3.c **** **     Version     : Component 01.061, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/LED3.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/LED3.c **** **     Date/Time   : 2013-09-09, 14:34, # CodeGen: 47
  10:../Generated_Code/LED3.c **** **     Abstract    :
  11:../Generated_Code/LED3.c **** **          This component implements a universal driver for a single LED.
  12:../Generated_Code/LED3.c **** **     Settings    :
  13:../Generated_Code/LED3.c **** **          Component name                                 : LED3
  14:../Generated_Code/LED3.c **** **          Turned On with initialization                  : no
  15:../Generated_Code/LED3.c **** **          HW Interface                                   : 
  16:../Generated_Code/LED3.c **** **            On/Off                                       : Enabled
  17:../Generated_Code/LED3.c **** **              Pin                                        : LEDpin
  18:../Generated_Code/LED3.c **** **            PWM                                          : Enabled
  19:../Generated_Code/LED3.c **** **              PWM                                        : PWM
  20:../Generated_Code/LED3.c **** **            High Value means ON                          : no
  21:../Generated_Code/LED3.c **** **          Shell                                          : Disabled
  22:../Generated_Code/LED3.c **** **     Contents    :
  23:../Generated_Code/LED3.c **** **         Init       - void LED3_Init(void);
  24:../Generated_Code/LED3.c **** **         Deinit     - void LED3_Deinit(void);
  25:../Generated_Code/LED3.c **** **         On         - void LED3_On(void);
  26:../Generated_Code/LED3.c **** **         Off        - void LED3_Off(void);
  27:../Generated_Code/LED3.c **** **         Neg        - void LED3_Neg(void);
  28:../Generated_Code/LED3.c **** **         Get        - byte LED3_Get(void);
  29:../Generated_Code/LED3.c **** **         Put        - void LED3_Put(byte val);
  30:../Generated_Code/LED3.c **** **         SetRatio16 - void LED3_SetRatio16(word ratio);
  31:../Generated_Code/LED3.c **** **
  32:../Generated_Code/LED3.c **** **     License   : Open Source (LGPL)
  33:../Generated_Code/LED3.c **** **     Copyright : Erich Styger, 2013, all rights reserved.
  34:../Generated_Code/LED3.c **** **     Web       : www.mcuoneclipse.com
  35:../Generated_Code/LED3.c **** **     This an open source software implementing a driver using Processor Expert.
  36:../Generated_Code/LED3.c **** **     This is a free software and is opened for education, research and commercial developments un
  37:../Generated_Code/LED3.c **** **     * This is a free software and there is NO WARRANTY.
  38:../Generated_Code/LED3.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  39:../Generated_Code/LED3.c **** **     * Redistributions of source code must retain the above copyright notice.
  40:../Generated_Code/LED3.c **** ** ###################################################################*/
  41:../Generated_Code/LED3.c **** 
  42:../Generated_Code/LED3.c **** /* MODULE LED3. */
  43:../Generated_Code/LED3.c **** 
  44:../Generated_Code/LED3.c **** #include "LED3.h"
  45:../Generated_Code/LED3.c **** 
  46:../Generated_Code/LED3.c **** uint16_t LED3_currPWM; /* current 16bit PWM value */
  47:../Generated_Code/LED3.c **** 
  48:../Generated_Code/LED3.c **** /*
  49:../Generated_Code/LED3.c **** ** ===================================================================
  50:../Generated_Code/LED3.c **** **     Method      :  LED3_On (component LED)
  51:../Generated_Code/LED3.c **** **
  52:../Generated_Code/LED3.c **** **     Description :
  53:../Generated_Code/LED3.c **** **         This turns the LED on.
  54:../Generated_Code/LED3.c **** **     Parameters  : None
  55:../Generated_Code/LED3.c **** **     Returns     : Nothing
  56:../Generated_Code/LED3.c **** ** ===================================================================
  57:../Generated_Code/LED3.c **** */
  58:../Generated_Code/LED3.c **** /*
  59:../Generated_Code/LED3.c **** ** ===================================================================
  60:../Generated_Code/LED3.c **** **     Method      :  LED3_Off (component LED)
  61:../Generated_Code/LED3.c **** **
  62:../Generated_Code/LED3.c **** **     Description :
  63:../Generated_Code/LED3.c **** **         This turns the LED off.
  64:../Generated_Code/LED3.c **** **     Parameters  : None
  65:../Generated_Code/LED3.c **** **     Returns     : Nothing
  66:../Generated_Code/LED3.c **** ** ===================================================================
  67:../Generated_Code/LED3.c **** */
  68:../Generated_Code/LED3.c **** /*
  69:../Generated_Code/LED3.c **** void LED3_Off(void)
  70:../Generated_Code/LED3.c **** {
  71:../Generated_Code/LED3.c ****   *** This method is implemented as macro in the header file
  72:../Generated_Code/LED3.c **** }
  73:../Generated_Code/LED3.c **** */
  74:../Generated_Code/LED3.c **** 
  75:../Generated_Code/LED3.c **** /*
  76:../Generated_Code/LED3.c **** ** ===================================================================
  77:../Generated_Code/LED3.c **** **     Method      :  LED3_Neg (component LED)
  78:../Generated_Code/LED3.c **** **
  79:../Generated_Code/LED3.c **** **     Description :
  80:../Generated_Code/LED3.c **** **         This negates/toggles the LED
  81:../Generated_Code/LED3.c **** **     Parameters  : None
  82:../Generated_Code/LED3.c **** **     Returns     : Nothing
  83:../Generated_Code/LED3.c **** ** ===================================================================
  84:../Generated_Code/LED3.c **** */
  85:../Generated_Code/LED3.c **** /*
  86:../Generated_Code/LED3.c **** void LED3_Neg(void)
  87:../Generated_Code/LED3.c **** {
  88:../Generated_Code/LED3.c ****   *** This method is implemented as macro in the header file
  89:../Generated_Code/LED3.c **** }
  90:../Generated_Code/LED3.c **** */
  91:../Generated_Code/LED3.c **** 
  92:../Generated_Code/LED3.c **** /*
  93:../Generated_Code/LED3.c **** ** ===================================================================
  94:../Generated_Code/LED3.c **** **     Method      :  LED3_Get (component LED)
  95:../Generated_Code/LED3.c **** **
  96:../Generated_Code/LED3.c **** **     Description :
  97:../Generated_Code/LED3.c **** **         This returns logical 1 in case the LED is on, 0 otherwise.
  98:../Generated_Code/LED3.c **** **     Parameters  : None
  99:../Generated_Code/LED3.c **** **     Returns     :
 100:../Generated_Code/LED3.c **** **         ---             - Status of the LED (on or off)
 101:../Generated_Code/LED3.c **** ** ===================================================================
 102:../Generated_Code/LED3.c **** */
 103:../Generated_Code/LED3.c **** /*
 104:../Generated_Code/LED3.c **** byte LED3_Get(void)
 105:../Generated_Code/LED3.c **** {
 106:../Generated_Code/LED3.c ****   *** This method is implemented as macro in the header file
 107:../Generated_Code/LED3.c **** }
 108:../Generated_Code/LED3.c **** */
 109:../Generated_Code/LED3.c **** 
 110:../Generated_Code/LED3.c **** /*
 111:../Generated_Code/LED3.c **** ** ===================================================================
 112:../Generated_Code/LED3.c **** **     Method      :  LED3_Init (component LED)
 113:../Generated_Code/LED3.c **** **
 114:../Generated_Code/LED3.c **** **     Description :
 115:../Generated_Code/LED3.c **** **         Performs the LED driver initialization.
 116:../Generated_Code/LED3.c **** **     Parameters  : None
 117:../Generated_Code/LED3.c **** **     Returns     : Nothing
 118:../Generated_Code/LED3.c **** ** ===================================================================
 119:../Generated_Code/LED3.c **** */
 120:../Generated_Code/LED3.c **** /*
 121:../Generated_Code/LED3.c **** void LED3_Init(void)
 122:../Generated_Code/LED3.c **** {
 123:../Generated_Code/LED3.c ****   *** This method is implemented as macro in the header file
 124:../Generated_Code/LED3.c **** }
 125:../Generated_Code/LED3.c **** */
 126:../Generated_Code/LED3.c **** 
 127:../Generated_Code/LED3.c **** /*
 128:../Generated_Code/LED3.c **** ** ===================================================================
 129:../Generated_Code/LED3.c **** **     Method      :  LED3_Put (component LED)
 130:../Generated_Code/LED3.c **** **
 131:../Generated_Code/LED3.c **** **     Description :
 132:../Generated_Code/LED3.c **** **         Turns the LED on or off.
 133:../Generated_Code/LED3.c **** **     Parameters  :
 134:../Generated_Code/LED3.c **** **         NAME            - DESCRIPTION
 135:../Generated_Code/LED3.c **** **         val             - value to define if the LED has to be on or
 136:../Generated_Code/LED3.c **** **                           off.
 137:../Generated_Code/LED3.c **** **     Returns     : Nothing
 138:../Generated_Code/LED3.c **** ** ===================================================================
 139:../Generated_Code/LED3.c **** */
 140:../Generated_Code/LED3.c **** /*
 141:../Generated_Code/LED3.c **** void LED3_Put(byte val)
 142:../Generated_Code/LED3.c **** {
 143:../Generated_Code/LED3.c ****   *** This method is implemented as macro in the header file
 144:../Generated_Code/LED3.c **** }
 145:../Generated_Code/LED3.c **** */
 146:../Generated_Code/LED3.c **** 
 147:../Generated_Code/LED3.c **** /*
 148:../Generated_Code/LED3.c **** ** ===================================================================
 149:../Generated_Code/LED3.c **** **     Method      :  LED3_Deinit (component LED)
 150:../Generated_Code/LED3.c **** **
 151:../Generated_Code/LED3.c **** **     Description :
 152:../Generated_Code/LED3.c **** **         Deinitializes the driver
 153:../Generated_Code/LED3.c **** **     Parameters  : None
 154:../Generated_Code/LED3.c **** **     Returns     : Nothing
 155:../Generated_Code/LED3.c **** ** ===================================================================
 156:../Generated_Code/LED3.c **** */
 157:../Generated_Code/LED3.c **** void LED3_Deinit(void)
 158:../Generated_Code/LED3.c **** {
  27              		.loc 1 158 0
  28              		.cfi_startproc
  29 0000 80B5     		push	{r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              	.LCFI1:
  36              		.cfi_def_cfa_register 7
 159:../Generated_Code/LED3.c **** }
  37              		.loc 1 159 0
  38 0004 BD46     		mov	sp, r7
  39              		@ sp needed for prologue
  40 0006 80BD     		pop	{r7, pc}
  41              		.cfi_endproc
  42              	.LFE0:
  44              		.section	.text.LED3_SetRatio16,"ax",%progbits
  45              		.align	2
  46              		.global	LED3_SetRatio16
  47              		.code	16
  48              		.thumb_func
  50              	LED3_SetRatio16:
  51              	.LFB1:
 160:../Generated_Code/LED3.c **** 
 161:../Generated_Code/LED3.c **** /*
 162:../Generated_Code/LED3.c **** ** ===================================================================
 163:../Generated_Code/LED3.c **** **     Method      :  LED3_SetRatio16 (component LED)
 164:../Generated_Code/LED3.c **** **
 165:../Generated_Code/LED3.c **** **     Description :
 166:../Generated_Code/LED3.c **** **         Method to specify the duty cycle. If using a PWM pin, this
 167:../Generated_Code/LED3.c **** **         means the duty cycle is set. For On/off pins, values smaller
 168:../Generated_Code/LED3.c **** **         0x7FFF means off, while values greater means on.
 169:../Generated_Code/LED3.c **** **     Parameters  :
 170:../Generated_Code/LED3.c **** **         NAME            - DESCRIPTION
 171:../Generated_Code/LED3.c **** **         ratio           - Ratio value, where 0 means 'off' and
 172:../Generated_Code/LED3.c **** **                           0xffff means 'on'
 173:../Generated_Code/LED3.c **** **     Returns     : Nothing
 174:../Generated_Code/LED3.c **** ** ===================================================================
 175:../Generated_Code/LED3.c **** */
 176:../Generated_Code/LED3.c **** void LED3_SetRatio16(word ratio)
 177:../Generated_Code/LED3.c **** {
  52              		.loc 1 177 0
  53              		.cfi_startproc
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI2:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 82B0     		sub	sp, sp, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 16
  62 0004 00AF     		add	r7, sp, #0
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 7
  65 0006 021C     		mov	r2, r0
  66 0008 BB1D     		add	r3, r7, #6
  67 000a 1A80     		strh	r2, [r3]
 178:../Generated_Code/LED3.c ****   /* on/off LED: binary on or off */
 179:../Generated_Code/LED3.c ****   if (ratio<(0xffff/2)) {
  68              		.loc 1 179 0
  69 000c BB1D     		add	r3, r7, #6
  70 000e 1A88     		ldrh	r2, [r3]
  71 0010 084B     		ldr	r3, .L5
  72 0012 9A42     		cmp	r2, r3
  73 0014 05D8     		bhi	.L3
 180:../Generated_Code/LED3.c ****     LED3_Off();
  74              		.loc 1 180 0
  75 0016 084B     		ldr	r3, .L5+4
  76 0018 1B6A     		ldr	r3, [r3, #32]
  77 001a 181C     		mov	r0, r3
  78 001c FFF7FEFF 		bl	BitIoLdd4_SetVal
  79 0020 04E0     		b	.L2
  80              	.L3:
 181:../Generated_Code/LED3.c ****   } else {
 182:../Generated_Code/LED3.c ****     LED3_On();
  81              		.loc 1 182 0
  82 0022 054B     		ldr	r3, .L5+4
  83 0024 1B6A     		ldr	r3, [r3, #32]
  84 0026 181C     		mov	r0, r3
  85 0028 FFF7FEFF 		bl	BitIoLdd4_ClrVal
  86              	.L2:
 183:../Generated_Code/LED3.c ****   }
 184:../Generated_Code/LED3.c **** }
  87              		.loc 1 184 0
  88 002c BD46     		mov	sp, r7
  89 002e 02B0     		add	sp, sp, #8
  90              		@ sp needed for prologue
  91 0030 80BD     		pop	{r7, pc}
  92              	.L6:
  93 0032 C046     		.align	2
  94              	.L5:
  95 0034 FE7F0000 		.word	32766
  96 0038 00000000 		.word	PE_LDD_DeviceDataList
  97              		.cfi_endproc
  98              	.LFE1:
 100              		.text
 101              	.Letext0:
 102              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 103              		.file 3 "../Generated_Code/PE_Types.h"
 104              		.file 4 "../Generated_Code/PE_LDD.h"
 105              		.file 5 "../Generated_Code/IO_Map.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LED3.c
                            *COM*:00000002 LED3_currPWM
C:\Users\LARM\AppData\Local\Temp\ccpITJ9u.s:19     .text.LED3_Deinit:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccpITJ9u.s:24     .text.LED3_Deinit:00000000 LED3_Deinit
C:\Users\LARM\AppData\Local\Temp\ccpITJ9u.s:45     .text.LED3_SetRatio16:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccpITJ9u.s:50     .text.LED3_SetRatio16:00000000 LED3_SetRatio16
C:\Users\LARM\AppData\Local\Temp\ccpITJ9u.s:95     .text.LED3_SetRatio16:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BitIoLdd4_SetVal
BitIoLdd4_ClrVal
PE_LDD_DeviceDataList
