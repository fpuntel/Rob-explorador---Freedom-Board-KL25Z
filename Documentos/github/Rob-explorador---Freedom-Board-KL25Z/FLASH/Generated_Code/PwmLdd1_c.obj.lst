   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PwmLdd1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	12
  22      00000000 
  22      00000000 
  23              		.section	.text.PwmLdd1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PwmLdd1_Init
  26              		.code	16
  27              		.thumb_func
  29              	PwmLdd1_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/PwmLdd1.c"
   1:../Generated_Code/PwmLdd1.c **** /** ###################################################################
   2:../Generated_Code/PwmLdd1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/PwmLdd1.c **** **     Filename    : PwmLdd1.c
   4:../Generated_Code/PwmLdd1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/PwmLdd1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/PwmLdd1.c **** **     Component   : PWM_LDD
   7:../Generated_Code/PwmLdd1.c **** **     Version     : Component 01.000, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/PwmLdd1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/PwmLdd1.c **** **     Date/Time   : 2013-09-09, 14:34, # CodeGen: 47
  10:../Generated_Code/PwmLdd1.c **** **     Abstract    :
  11:../Generated_Code/PwmLdd1.c **** **          This component implements a pulse-width modulation generator
  12:../Generated_Code/PwmLdd1.c **** **          that generates signal with variable duty and fixed cycle.
  13:../Generated_Code/PwmLdd1.c **** **          This PWM component provides a high level API for unified
  14:../Generated_Code/PwmLdd1.c **** **          hardware access to various timer devices using the TimerUnit
  15:../Generated_Code/PwmLdd1.c **** **          component.
  16:../Generated_Code/PwmLdd1.c **** **     Settings    :
  17:../Generated_Code/PwmLdd1.c **** **          Component name                                 : PwmLdd1
  18:../Generated_Code/PwmLdd1.c **** **          Period device                                  : TPM1_MOD
  19:../Generated_Code/PwmLdd1.c **** **          Duty device                                    : TPM1_C0V
  20:../Generated_Code/PwmLdd1.c **** **          Output pin                                     : ADC0_DP0/ADC0_SE0/PTE20/TPM1_CH0/UART0
  21:../Generated_Code/PwmLdd1.c **** **          Output pin signal                              : 
  22:../Generated_Code/PwmLdd1.c **** **          Counter                                        : TPM1_CNT
  23:../Generated_Code/PwmLdd1.c **** **          Linked TimerUnit                               : TU2
  24:../Generated_Code/PwmLdd1.c **** **          Interrupt service/event                        : Disabled
  25:../Generated_Code/PwmLdd1.c **** **          Period                                         : 5 ms
  26:../Generated_Code/PwmLdd1.c **** **          Starting pulse width                           : 2.5 ms
  27:../Generated_Code/PwmLdd1.c **** **          Initial polarity                               : low
  28:../Generated_Code/PwmLdd1.c **** **          Initialization                                 : 
  29:../Generated_Code/PwmLdd1.c **** **            Enabled in init. code                        : yes
  30:../Generated_Code/PwmLdd1.c **** **            Auto initialization                          : yes
  31:../Generated_Code/PwmLdd1.c **** **            Event mask                                   : 
  32:../Generated_Code/PwmLdd1.c **** **              OnEnd                                      : Disabled
  33:../Generated_Code/PwmLdd1.c **** **          CPU clock/configuration selection              : 
  34:../Generated_Code/PwmLdd1.c **** **            Clock configuration 0                        : This component enabled
  35:../Generated_Code/PwmLdd1.c **** **            Clock configuration 1                        : This component enabled
  36:../Generated_Code/PwmLdd1.c **** **            Clock configuration 2                        : This component enabled
  37:../Generated_Code/PwmLdd1.c **** **            Clock configuration 3                        : This component enabled
  38:../Generated_Code/PwmLdd1.c **** **            Clock configuration 4                        : This component enabled
  39:../Generated_Code/PwmLdd1.c **** **            Clock configuration 5                        : This component enabled
  40:../Generated_Code/PwmLdd1.c **** **            Clock configuration 6                        : This component enabled
  41:../Generated_Code/PwmLdd1.c **** **            Clock configuration 7                        : This component enabled
  42:../Generated_Code/PwmLdd1.c **** **     Contents    :
  43:../Generated_Code/PwmLdd1.c **** **         Init       - LDD_TDeviceData* PwmLdd1_Init(LDD_TUserData *UserDataPtr);
  44:../Generated_Code/PwmLdd1.c **** **         Deinit     - void PwmLdd1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  45:../Generated_Code/PwmLdd1.c **** **         Enable     - LDD_TError PwmLdd1_Enable(LDD_TDeviceData *DeviceDataPtr);
  46:../Generated_Code/PwmLdd1.c **** **         Disable    - LDD_TError PwmLdd1_Disable(LDD_TDeviceData *DeviceDataPtr);
  47:../Generated_Code/PwmLdd1.c **** **         SetRatio8  - LDD_TError PwmLdd1_SetRatio8(LDD_TDeviceData *DeviceDataPtr, uint8_t Ratio)
  48:../Generated_Code/PwmLdd1.c **** **         SetRatio16 - LDD_TError PwmLdd1_SetRatio16(LDD_TDeviceData *DeviceDataPtr, uint16_t Rati
  49:../Generated_Code/PwmLdd1.c **** **         SetDutyUS  - LDD_TError PwmLdd1_SetDutyUS(LDD_TDeviceData *DeviceDataPtr, uint16_t Time)
  50:../Generated_Code/PwmLdd1.c **** **         SetDutyMS  - LDD_TError PwmLdd1_SetDutyMS(LDD_TDeviceData *DeviceDataPtr, uint16_t Time)
  51:../Generated_Code/PwmLdd1.c **** **
  52:../Generated_Code/PwmLdd1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  53:../Generated_Code/PwmLdd1.c **** **     
  54:../Generated_Code/PwmLdd1.c **** **     http      : www.freescale.com
  55:../Generated_Code/PwmLdd1.c **** **     mail      : support@freescale.com
  56:../Generated_Code/PwmLdd1.c **** ** ###################################################################*/
  57:../Generated_Code/PwmLdd1.c **** 
  58:../Generated_Code/PwmLdd1.c **** /* MODULE PwmLdd1. */
  59:../Generated_Code/PwmLdd1.c **** 
  60:../Generated_Code/PwmLdd1.c **** #include "PwmLdd1.h"
  61:../Generated_Code/PwmLdd1.c **** /* MQX Lite include files */
  62:../Generated_Code/PwmLdd1.c **** #include "mqxlite.h"
  63:../Generated_Code/PwmLdd1.c **** #include "mqxlite_prv.h"
  64:../Generated_Code/PwmLdd1.c **** 
  65:../Generated_Code/PwmLdd1.c **** typedef struct {
  66:../Generated_Code/PwmLdd1.c ****   LDD_TDeviceData *LinkedDeviceDataPtr;
  67:../Generated_Code/PwmLdd1.c ****   bool EnUser;                         /* Enable/Disable device */
  68:../Generated_Code/PwmLdd1.c ****   uint16_t RatioStore;                 /* Ratio of L-level to H-level */
  69:../Generated_Code/PwmLdd1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  70:../Generated_Code/PwmLdd1.c **** } PwmLdd1_TDeviceData;
  71:../Generated_Code/PwmLdd1.c **** 
  72:../Generated_Code/PwmLdd1.c **** typedef PwmLdd1_TDeviceData *PwmLdd1_TDeviceDataPtr; /* Pointer to the device data structure. */
  73:../Generated_Code/PwmLdd1.c **** 
  74:../Generated_Code/PwmLdd1.c **** /* {MQXLite RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  75:../Generated_Code/PwmLdd1.c **** static PwmLdd1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  76:../Generated_Code/PwmLdd1.c **** 
  77:../Generated_Code/PwmLdd1.c **** #define CHANNEL 0x00U
  78:../Generated_Code/PwmLdd1.c **** /* Internal method prototypes */
  79:../Generated_Code/PwmLdd1.c **** static void SetRatio(LDD_TDeviceData *DeviceDataPtr);
  80:../Generated_Code/PwmLdd1.c **** /*
  81:../Generated_Code/PwmLdd1.c **** ** ===================================================================
  82:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_Init (component PWM_LDD)
  83:../Generated_Code/PwmLdd1.c **** **
  84:../Generated_Code/PwmLdd1.c **** **     Description :
  85:../Generated_Code/PwmLdd1.c **** **         Initializes the device. Allocates memory for the device data
  86:../Generated_Code/PwmLdd1.c **** **         structure, allocates interrupt vectors and sets interrupt
  87:../Generated_Code/PwmLdd1.c **** **         priority, sets pin routing, sets timing, etc. If the
  88:../Generated_Code/PwmLdd1.c **** **         property <"Enable in init. code"> is set to "yes" value then
  89:../Generated_Code/PwmLdd1.c **** **         the device is also enabled (see the description of the
  90:../Generated_Code/PwmLdd1.c **** **         <Enable> method). In this case the <Enable> method is not
  91:../Generated_Code/PwmLdd1.c **** **         necessary and needn't to be generated. This method can be
  92:../Generated_Code/PwmLdd1.c **** **         called only once. Before the second call of Init the <Deinit>
  93:../Generated_Code/PwmLdd1.c **** **         must be called first.
  94:../Generated_Code/PwmLdd1.c **** **     Parameters  :
  95:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
  96:../Generated_Code/PwmLdd1.c **** **       * UserDataPtr     - Pointer to the user or
  97:../Generated_Code/PwmLdd1.c **** **                           RTOS specific data. This pointer will be
  98:../Generated_Code/PwmLdd1.c **** **                           passed as an event or callback parameter.
  99:../Generated_Code/PwmLdd1.c **** **     Returns     :
 100:../Generated_Code/PwmLdd1.c **** **         ---             - Pointer to the dynamically allocated
 101:../Generated_Code/PwmLdd1.c **** **                           private structure or NULL if there was an
 102:../Generated_Code/PwmLdd1.c **** **                           error.
 103:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 104:../Generated_Code/PwmLdd1.c **** */
 105:../Generated_Code/PwmLdd1.c **** LDD_TDeviceData* PwmLdd1_Init(LDD_TUserData *UserDataPtr)
 106:../Generated_Code/PwmLdd1.c **** {
  32              		.loc 1 106 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 107:../Generated_Code/PwmLdd1.c ****   /* Allocate device structure */
 108:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv;
 109:../Generated_Code/PwmLdd1.c ****   /* {MQXLite RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 110:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 110 0
  47 0008 0F4B     		ldr	r3, .L4
  48 000a FB60     		str	r3, [r7, #12]
 111:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  49              		.loc 1 111 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 7A68     		ldr	r2, [r7, #4]
  52 0010 9A60     		str	r2, [r3, #8]
 112:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv->EnUser = TRUE;        /* Set the flag "device enabled" */
  53              		.loc 1 112 0
  54 0012 FB68     		ldr	r3, [r7, #12]
  55 0014 0122     		mov	r2, #1
  56 0016 1A71     		strb	r2, [r3, #4]
 113:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv->RatioStore = 0x7FFFU; /* Ratio after initialization */
  57              		.loc 1 113 0
  58 0018 FB68     		ldr	r3, [r7, #12]
  59 001a 0C4A     		ldr	r2, .L4+4
  60 001c DA80     		strh	r2, [r3, #6]
 114:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv->LinkedDeviceDataPtr = TU2_Init((LDD_TUserData *)NULL);
  61              		.loc 1 114 0
  62 001e 0020     		mov	r0, #0
  63 0020 FFF7FEFF 		bl	TU2_Init
  64 0024 021C     		mov	r2, r0
  65 0026 FB68     		ldr	r3, [r7, #12]
  66 0028 1A60     		str	r2, [r3]
 115:../Generated_Code/PwmLdd1.c ****   if (DeviceDataPrv->LinkedDeviceDataPtr == NULL) { /* Is initialization of TimerUnit unsuccessful?
  67              		.loc 1 115 0
  68 002a FB68     		ldr	r3, [r7, #12]
  69 002c 1B68     		ldr	r3, [r3]
  70 002e 002B     		cmp	r3, #0
  71 0030 01D1     		bne	.L2
 116:../Generated_Code/PwmLdd1.c ****     /* Deallocation of the device structure */
 117:../Generated_Code/PwmLdd1.c ****     /* {MQXLite RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no deall
 118:../Generated_Code/PwmLdd1.c ****     return NULL;                       /* If so, then the PWM initialization is also unsuccessful *
  72              		.loc 1 118 0
  73 0032 0023     		mov	r3, #0
  74 0034 03E0     		b	.L3
  75              	.L2:
 119:../Generated_Code/PwmLdd1.c ****   }
 120:../Generated_Code/PwmLdd1.c ****   /* Registration of the device structure */
 121:../Generated_Code/PwmLdd1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd1_ID,DeviceDataPrv);
  76              		.loc 1 121 0
  77 0036 064B     		ldr	r3, .L4+8
  78 0038 FA68     		ldr	r2, [r7, #12]
  79 003a 9A61     		str	r2, [r3, #24]
 122:../Generated_Code/PwmLdd1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  80              		.loc 1 122 0
  81 003c FB68     		ldr	r3, [r7, #12]
  82              	.L3:
 123:../Generated_Code/PwmLdd1.c **** }
  83              		.loc 1 123 0
  84 003e 181C     		mov	r0, r3
  85 0040 BD46     		mov	sp, r7
  86 0042 04B0     		add	sp, sp, #16
  87              		@ sp needed for prologue
  88 0044 80BD     		pop	{r7, pc}
  89              	.L5:
  90 0046 C046     		.align	2
  91              	.L4:
  92 0048 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
  93 004c FF7F0000 		.word	32767
  94 0050 00000000 		.word	PE_LDD_DeviceDataList
  95              		.cfi_endproc
  96              	.LFE0:
  98              		.section	.text.PwmLdd1_Deinit,"ax",%progbits
  99              		.align	2
 100              		.global	PwmLdd1_Deinit
 101              		.code	16
 102              		.thumb_func
 104              	PwmLdd1_Deinit:
 105              	.LFB1:
 124:../Generated_Code/PwmLdd1.c **** 
 125:../Generated_Code/PwmLdd1.c **** /*
 126:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 127:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_Deinit (component PWM_LDD)
 128:../Generated_Code/PwmLdd1.c **** **
 129:../Generated_Code/PwmLdd1.c **** **     Description :
 130:../Generated_Code/PwmLdd1.c **** **         Deinitializes the device. Switches off the device, frees the
 131:../Generated_Code/PwmLdd1.c **** **         device data structure memory, interrupts vectors, etc.
 132:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 133:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 134:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 135:../Generated_Code/PwmLdd1.c **** **                           pointer returned by Init method
 136:../Generated_Code/PwmLdd1.c **** **     Returns     : Nothing
 137:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 138:../Generated_Code/PwmLdd1.c **** */
 139:../Generated_Code/PwmLdd1.c **** void PwmLdd1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 140:../Generated_Code/PwmLdd1.c **** {
 106              		.loc 1 140 0
 107              		.cfi_startproc
 108 0000 80B5     		push	{r7, lr}
 109              	.LCFI3:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 84B0     		sub	sp, sp, #16
 114              	.LCFI4:
 115              		.cfi_def_cfa_offset 24
 116 0004 00AF     		add	r7, sp, #0
 117              	.LCFI5:
 118              		.cfi_def_cfa_register 7
 119 0006 7860     		str	r0, [r7, #4]
 141:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 120              		.loc 1 141 0
 121 0008 7B68     		ldr	r3, [r7, #4]
 122 000a FB60     		str	r3, [r7, #12]
 142:../Generated_Code/PwmLdd1.c **** 
 143:../Generated_Code/PwmLdd1.c ****   TU2_Deinit(DeviceDataPrv->LinkedDeviceDataPtr);
 123              		.loc 1 143 0
 124 000c FB68     		ldr	r3, [r7, #12]
 125 000e 1B68     		ldr	r3, [r3]
 126 0010 181C     		mov	r0, r3
 127 0012 FFF7FEFF 		bl	TU2_Deinit
 144:../Generated_Code/PwmLdd1.c ****   /* Unregistration of the device structure */
 145:../Generated_Code/PwmLdd1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_PwmLdd1_ID);
 128              		.loc 1 145 0
 129 0016 034B     		ldr	r3, .L7
 130 0018 0022     		mov	r2, #0
 131 001a 9A61     		str	r2, [r3, #24]
 146:../Generated_Code/PwmLdd1.c ****   /* Deallocation of the device structure */
 147:../Generated_Code/PwmLdd1.c ****   /* {MQXLite RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 148:../Generated_Code/PwmLdd1.c **** }
 132              		.loc 1 148 0
 133 001c BD46     		mov	sp, r7
 134 001e 04B0     		add	sp, sp, #16
 135              		@ sp needed for prologue
 136 0020 80BD     		pop	{r7, pc}
 137              	.L8:
 138 0022 C046     		.align	2
 139              	.L7:
 140 0024 00000000 		.word	PE_LDD_DeviceDataList
 141              		.cfi_endproc
 142              	.LFE1:
 144              		.section	.text.PwmLdd1_Enable,"ax",%progbits
 145              		.align	2
 146              		.global	PwmLdd1_Enable
 147              		.code	16
 148              		.thumb_func
 150              	PwmLdd1_Enable:
 151              	.LFB2:
 149:../Generated_Code/PwmLdd1.c **** 
 150:../Generated_Code/PwmLdd1.c **** /*
 151:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 152:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_Enable (component PWM_LDD)
 153:../Generated_Code/PwmLdd1.c **** **
 154:../Generated_Code/PwmLdd1.c **** **     Description :
 155:../Generated_Code/PwmLdd1.c **** **         Enables the component - it starts the signal generation.
 156:../Generated_Code/PwmLdd1.c **** **         Events may be generated (see SetEventMask).
 157:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 158:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 159:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 160:../Generated_Code/PwmLdd1.c **** **                           pointer returned by <Init> method.
 161:../Generated_Code/PwmLdd1.c **** **     Returns     :
 162:../Generated_Code/PwmLdd1.c **** **         ---             - Error code, possible codes:
 163:../Generated_Code/PwmLdd1.c **** **                           ERR_OK - OK
 164:../Generated_Code/PwmLdd1.c **** **                           ERR_SPEED - The component does not work in
 165:../Generated_Code/PwmLdd1.c **** **                           the active clock configuration
 166:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 167:../Generated_Code/PwmLdd1.c **** */
 168:../Generated_Code/PwmLdd1.c **** LDD_TError PwmLdd1_Enable(LDD_TDeviceData *DeviceDataPtr)
 169:../Generated_Code/PwmLdd1.c **** {
 152              		.loc 1 169 0
 153              		.cfi_startproc
 154 0000 80B5     		push	{r7, lr}
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 7, -8
 158              		.cfi_offset 14, -4
 159 0002 84B0     		sub	sp, sp, #16
 160              	.LCFI7:
 161              		.cfi_def_cfa_offset 24
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI8:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 170:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 166              		.loc 1 170 0
 167 0008 7B68     		ldr	r3, [r7, #4]
 168 000a FB60     		str	r3, [r7, #12]
 171:../Generated_Code/PwmLdd1.c **** 
 172:../Generated_Code/PwmLdd1.c ****   if (!DeviceDataPrv->EnUser) {        /* Is the device disabled by user? */
 169              		.loc 1 172 0
 170 000c FB68     		ldr	r3, [r7, #12]
 171 000e 1B79     		ldrb	r3, [r3, #4]
 172 0010 002B     		cmp	r3, #0
 173 0012 07D1     		bne	.L10
 173:../Generated_Code/PwmLdd1.c ****     DeviceDataPrv->EnUser = TRUE;      /* If yes then set the flag "device enabled" */
 174              		.loc 1 173 0
 175 0014 FB68     		ldr	r3, [r7, #12]
 176 0016 0122     		mov	r2, #1
 177 0018 1A71     		strb	r2, [r3, #4]
 174:../Generated_Code/PwmLdd1.c ****     (void)TU2_Enable(DeviceDataPrv->LinkedDeviceDataPtr); /* Enable TimerUnit */
 178              		.loc 1 174 0
 179 001a FB68     		ldr	r3, [r7, #12]
 180 001c 1B68     		ldr	r3, [r3]
 181 001e 181C     		mov	r0, r3
 182 0020 FFF7FEFF 		bl	TU2_Enable
 183              	.L10:
 175:../Generated_Code/PwmLdd1.c ****   }
 176:../Generated_Code/PwmLdd1.c ****   return ERR_OK;
 184              		.loc 1 176 0
 185 0024 0023     		mov	r3, #0
 177:../Generated_Code/PwmLdd1.c **** }
 186              		.loc 1 177 0
 187 0026 181C     		mov	r0, r3
 188 0028 BD46     		mov	sp, r7
 189 002a 04B0     		add	sp, sp, #16
 190              		@ sp needed for prologue
 191 002c 80BD     		pop	{r7, pc}
 192              		.cfi_endproc
 193              	.LFE2:
 195 002e C046     		.section	.text.PwmLdd1_Disable,"ax",%progbits
 196              		.align	2
 197              		.global	PwmLdd1_Disable
 198              		.code	16
 199              		.thumb_func
 201              	PwmLdd1_Disable:
 202              	.LFB3:
 178:../Generated_Code/PwmLdd1.c **** 
 179:../Generated_Code/PwmLdd1.c **** /*
 180:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 181:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_Disable (component PWM_LDD)
 182:../Generated_Code/PwmLdd1.c **** **
 183:../Generated_Code/PwmLdd1.c **** **     Description :
 184:../Generated_Code/PwmLdd1.c **** **         Disables the component - it stops signal generation and
 185:../Generated_Code/PwmLdd1.c **** **         events calling.
 186:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 187:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 188:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 189:../Generated_Code/PwmLdd1.c **** **                           pointer returned by <Init> method.
 190:../Generated_Code/PwmLdd1.c **** **     Returns     :
 191:../Generated_Code/PwmLdd1.c **** **         ---             - Error code, possible codes:
 192:../Generated_Code/PwmLdd1.c **** **                           ERR_OK - OK
 193:../Generated_Code/PwmLdd1.c **** **                           ERR_SPEED - The component does not work in
 194:../Generated_Code/PwmLdd1.c **** **                           the active clock configuration
 195:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 196:../Generated_Code/PwmLdd1.c **** */
 197:../Generated_Code/PwmLdd1.c **** LDD_TError PwmLdd1_Disable(LDD_TDeviceData *DeviceDataPtr)
 198:../Generated_Code/PwmLdd1.c **** {
 203              		.loc 1 198 0
 204              		.cfi_startproc
 205 0000 80B5     		push	{r7, lr}
 206              	.LCFI9:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 84B0     		sub	sp, sp, #16
 211              	.LCFI10:
 212              		.cfi_def_cfa_offset 24
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI11:
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 199:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 217              		.loc 1 199 0
 218 0008 7B68     		ldr	r3, [r7, #4]
 219 000a FB60     		str	r3, [r7, #12]
 200:../Generated_Code/PwmLdd1.c **** 
 201:../Generated_Code/PwmLdd1.c ****   if (DeviceDataPrv->EnUser) {         /* Is the device enabled by user? */
 220              		.loc 1 201 0
 221 000c FB68     		ldr	r3, [r7, #12]
 222 000e 1B79     		ldrb	r3, [r3, #4]
 223 0010 002B     		cmp	r3, #0
 224 0012 0CD0     		beq	.L12
 202:../Generated_Code/PwmLdd1.c ****     DeviceDataPrv->EnUser = FALSE;     /* If yes then set the flag "device enabled" */
 225              		.loc 1 202 0
 226 0014 FB68     		ldr	r3, [r7, #12]
 227 0016 0022     		mov	r2, #0
 228 0018 1A71     		strb	r2, [r3, #4]
 203:../Generated_Code/PwmLdd1.c ****    (void)TU2_Disable(DeviceDataPrv->LinkedDeviceDataPtr); /* Disable TimerUnit component */
 229              		.loc 1 203 0
 230 001a FB68     		ldr	r3, [r7, #12]
 231 001c 1B68     		ldr	r3, [r3]
 232 001e 181C     		mov	r0, r3
 233 0020 FFF7FEFF 		bl	TU2_Disable
 204:../Generated_Code/PwmLdd1.c ****    (void)TU2_ResetCounter(DeviceDataPrv->LinkedDeviceDataPtr); /* Reset counter */
 234              		.loc 1 204 0
 235 0024 FB68     		ldr	r3, [r7, #12]
 236 0026 1B68     		ldr	r3, [r3]
 237 0028 181C     		mov	r0, r3
 238 002a FFF7FEFF 		bl	TU2_ResetCounter
 239              	.L12:
 205:../Generated_Code/PwmLdd1.c ****   }
 206:../Generated_Code/PwmLdd1.c ****   return ERR_OK;
 240              		.loc 1 206 0
 241 002e 0023     		mov	r3, #0
 207:../Generated_Code/PwmLdd1.c **** }
 242              		.loc 1 207 0
 243 0030 181C     		mov	r0, r3
 244 0032 BD46     		mov	sp, r7
 245 0034 04B0     		add	sp, sp, #16
 246              		@ sp needed for prologue
 247 0036 80BD     		pop	{r7, pc}
 248              		.cfi_endproc
 249              	.LFE3:
 251              		.section	.text.PwmLdd1_SetRatio8,"ax",%progbits
 252              		.align	2
 253              		.global	PwmLdd1_SetRatio8
 254              		.code	16
 255              		.thumb_func
 257              	PwmLdd1_SetRatio8:
 258              	.LFB4:
 208:../Generated_Code/PwmLdd1.c **** 
 209:../Generated_Code/PwmLdd1.c **** /*
 210:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 211:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_SetRatio8 (component PWM_LDD)
 212:../Generated_Code/PwmLdd1.c **** **
 213:../Generated_Code/PwmLdd1.c **** **     Description :
 214:../Generated_Code/PwmLdd1.c **** **         This method sets a new duty-cycle ratio. Ratio is expressed
 215:../Generated_Code/PwmLdd1.c **** **         as an 8-bit unsigned integer number. 0 - FF value is
 216:../Generated_Code/PwmLdd1.c **** **         proportional to ratio 0 - 100%. The method is available
 217:../Generated_Code/PwmLdd1.c **** **         only if it is not selected list of predefined values in
 218:../Generated_Code/PwmLdd1.c **** **         <Starting pulse width> property. 
 219:../Generated_Code/PwmLdd1.c **** **         Note: Calculated duty depends on the timer capabilities and
 220:../Generated_Code/PwmLdd1.c **** **         on the selected period.
 221:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 222:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 223:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 224:../Generated_Code/PwmLdd1.c **** **                           pointer returned by <Init> method.
 225:../Generated_Code/PwmLdd1.c **** **         Ratio           - Ratio to set. 0 - 255 value is
 226:../Generated_Code/PwmLdd1.c **** **                           proportional to ratio 0 - 100%
 227:../Generated_Code/PwmLdd1.c **** **     Returns     :
 228:../Generated_Code/PwmLdd1.c **** **         ---             - Error code, possible codes:
 229:../Generated_Code/PwmLdd1.c **** **                           ERR_OK - OK
 230:../Generated_Code/PwmLdd1.c **** **                           ERR_SPEED - The component does not work in
 231:../Generated_Code/PwmLdd1.c **** **                           the active clock configuration
 232:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 233:../Generated_Code/PwmLdd1.c **** */
 234:../Generated_Code/PwmLdd1.c **** LDD_TError PwmLdd1_SetRatio8(LDD_TDeviceData *DeviceDataPtr, uint8_t Ratio)
 235:../Generated_Code/PwmLdd1.c **** {
 259              		.loc 1 235 0
 260              		.cfi_startproc
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI12:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 84B0     		sub	sp, sp, #16
 267              	.LCFI13:
 268              		.cfi_def_cfa_offset 24
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI14:
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 273 0008 0A1C     		mov	r2, r1
 274 000a FB1C     		add	r3, r7, #3
 275 000c 1A70     		strb	r2, [r3]
 236:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 276              		.loc 1 236 0
 277 000e 7B68     		ldr	r3, [r7, #4]
 278 0010 FB60     		str	r3, [r7, #12]
 237:../Generated_Code/PwmLdd1.c **** 
 238:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv->RatioStore = (uint16_t)Ratio << 8U; /* Store new value of the ratio */
 279              		.loc 1 238 0
 280 0012 FB1C     		add	r3, r7, #3
 281 0014 1B78     		ldrb	r3, [r3]
 282 0016 9BB2     		uxth	r3, r3
 283 0018 1B02     		lsl	r3, r3, #8
 284 001a 9AB2     		uxth	r2, r3
 285 001c FB68     		ldr	r3, [r7, #12]
 286 001e DA80     		strh	r2, [r3, #6]
 239:../Generated_Code/PwmLdd1.c ****   SetRatio(DeviceDataPrv);
 287              		.loc 1 239 0
 288 0020 FB68     		ldr	r3, [r7, #12]
 289 0022 181C     		mov	r0, r3
 290 0024 FFF7FEFF 		bl	SetRatio
 240:../Generated_Code/PwmLdd1.c ****   return ERR_OK;
 291              		.loc 1 240 0
 292 0028 0023     		mov	r3, #0
 241:../Generated_Code/PwmLdd1.c **** }
 293              		.loc 1 241 0
 294 002a 181C     		mov	r0, r3
 295 002c BD46     		mov	sp, r7
 296 002e 04B0     		add	sp, sp, #16
 297              		@ sp needed for prologue
 298 0030 80BD     		pop	{r7, pc}
 299              		.cfi_endproc
 300              	.LFE4:
 302              		.section	.text.PwmLdd1_SetRatio16,"ax",%progbits
 303              		.align	2
 304              		.global	PwmLdd1_SetRatio16
 305              		.code	16
 306              		.thumb_func
 308              	PwmLdd1_SetRatio16:
 309              	.LFB5:
 242:../Generated_Code/PwmLdd1.c **** 
 243:../Generated_Code/PwmLdd1.c **** /*
 244:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 245:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_SetRatio16 (component PWM_LDD)
 246:../Generated_Code/PwmLdd1.c **** **
 247:../Generated_Code/PwmLdd1.c **** **     Description :
 248:../Generated_Code/PwmLdd1.c **** **         This method sets a new duty-cycle ratio. Ratio is expressed
 249:../Generated_Code/PwmLdd1.c **** **         as a 16-bit unsigned integer number. 0 - FFFF value is
 250:../Generated_Code/PwmLdd1.c **** **         proportional to ratio 0 - 100%. The method is available
 251:../Generated_Code/PwmLdd1.c **** **         only if it is not selected list of predefined values in
 252:../Generated_Code/PwmLdd1.c **** **         <Starting pulse width> property. 
 253:../Generated_Code/PwmLdd1.c **** **         Note: Calculated duty depends on the timer possibilities and
 254:../Generated_Code/PwmLdd1.c **** **         on the selected period.
 255:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 256:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 257:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 258:../Generated_Code/PwmLdd1.c **** **                           pointer returned by <Init> method.
 259:../Generated_Code/PwmLdd1.c **** **         Ratio           - Ratio to set. 0 - 65535 value is
 260:../Generated_Code/PwmLdd1.c **** **                           proportional to ratio 0 - 100%
 261:../Generated_Code/PwmLdd1.c **** **     Returns     :
 262:../Generated_Code/PwmLdd1.c **** **         ---             - Error code, possible codes:
 263:../Generated_Code/PwmLdd1.c **** **                           ERR_OK - OK
 264:../Generated_Code/PwmLdd1.c **** **                           ERR_SPEED - The component does not work in
 265:../Generated_Code/PwmLdd1.c **** **                           the active clock configuration
 266:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 267:../Generated_Code/PwmLdd1.c **** */
 268:../Generated_Code/PwmLdd1.c **** LDD_TError PwmLdd1_SetRatio16(LDD_TDeviceData *DeviceDataPtr, uint16_t Ratio)
 269:../Generated_Code/PwmLdd1.c **** {
 310              		.loc 1 269 0
 311              		.cfi_startproc
 312 0000 80B5     		push	{r7, lr}
 313              	.LCFI15:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 84B0     		sub	sp, sp, #16
 318              	.LCFI16:
 319              		.cfi_def_cfa_offset 24
 320 0004 00AF     		add	r7, sp, #0
 321              	.LCFI17:
 322              		.cfi_def_cfa_register 7
 323 0006 7860     		str	r0, [r7, #4]
 324 0008 0A1C     		mov	r2, r1
 325 000a BB1C     		add	r3, r7, #2
 326 000c 1A80     		strh	r2, [r3]
 270:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 327              		.loc 1 270 0
 328 000e 7B68     		ldr	r3, [r7, #4]
 329 0010 FB60     		str	r3, [r7, #12]
 271:../Generated_Code/PwmLdd1.c **** 
 272:../Generated_Code/PwmLdd1.c ****   DeviceDataPrv->RatioStore = Ratio;   /* Store new value of the ratio */
 330              		.loc 1 272 0
 331 0012 FB68     		ldr	r3, [r7, #12]
 332 0014 BA1C     		add	r2, r7, #2
 333 0016 1288     		ldrh	r2, [r2]
 334 0018 DA80     		strh	r2, [r3, #6]
 273:../Generated_Code/PwmLdd1.c ****   SetRatio(DeviceDataPrv);
 335              		.loc 1 273 0
 336 001a FB68     		ldr	r3, [r7, #12]
 337 001c 181C     		mov	r0, r3
 338 001e FFF7FEFF 		bl	SetRatio
 274:../Generated_Code/PwmLdd1.c ****   return ERR_OK;
 339              		.loc 1 274 0
 340 0022 0023     		mov	r3, #0
 275:../Generated_Code/PwmLdd1.c **** }
 341              		.loc 1 275 0
 342 0024 181C     		mov	r0, r3
 343 0026 BD46     		mov	sp, r7
 344 0028 04B0     		add	sp, sp, #16
 345              		@ sp needed for prologue
 346 002a 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE5:
 350              		.global	__aeabi_i2f
 351              		.global	__aeabi_fmul
 352              		.global	__aeabi_fcmpgt
 353              		.global	__aeabi_f2uiz
 354              		.section	.text.PwmLdd1_SetDutyUS,"ax",%progbits
 355              		.align	2
 356              		.global	PwmLdd1_SetDutyUS
 357              		.code	16
 358              		.thumb_func
 360              	PwmLdd1_SetDutyUS:
 361              	.LFB6:
 276:../Generated_Code/PwmLdd1.c **** 
 277:../Generated_Code/PwmLdd1.c **** /*
 278:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 279:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_SetDutyUS (component PWM_LDD)
 280:../Generated_Code/PwmLdd1.c **** **
 281:../Generated_Code/PwmLdd1.c **** **     Description :
 282:../Generated_Code/PwmLdd1.c **** **         This method sets the new duty value of the output signal.
 283:../Generated_Code/PwmLdd1.c **** **         The duty is expressed in microseconds as a 16-bit unsigned
 284:../Generated_Code/PwmLdd1.c **** **         integer number. The method is available only if it is not
 285:../Generated_Code/PwmLdd1.c **** **         selected list of predefined values in <Starting pulse width>
 286:../Generated_Code/PwmLdd1.c **** **         property.
 287:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 288:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 289:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 290:../Generated_Code/PwmLdd1.c **** **                           pointer returned by <Init> method.
 291:../Generated_Code/PwmLdd1.c **** **         Time            - Duty to set [in microseconds]
 292:../Generated_Code/PwmLdd1.c **** **     Returns     :
 293:../Generated_Code/PwmLdd1.c **** **         ---             - Error code, possible codes:
 294:../Generated_Code/PwmLdd1.c **** **                           ERR_OK - OK
 295:../Generated_Code/PwmLdd1.c **** **                           ERR_SPEED - The component does not work in
 296:../Generated_Code/PwmLdd1.c **** **                           the active clock configuration
 297:../Generated_Code/PwmLdd1.c **** **                           ERR_MATH - Overflow during evaluation
 298:../Generated_Code/PwmLdd1.c **** **                           ERR_RANGE - Parameter out of range
 299:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 300:../Generated_Code/PwmLdd1.c **** */
 301:../Generated_Code/PwmLdd1.c **** LDD_TError PwmLdd1_SetDutyUS(LDD_TDeviceData *DeviceDataPtr, uint16_t Time)
 302:../Generated_Code/PwmLdd1.c **** {
 362              		.loc 1 302 0
 363              		.cfi_startproc
 364 0000 90B5     		push	{r4, r7, lr}
 365              	.LCFI18:
 366              		.cfi_def_cfa_offset 12
 367              		.cfi_offset 4, -12
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 85B0     		sub	sp, sp, #20
 371              	.LCFI19:
 372              		.cfi_def_cfa_offset 32
 373 0004 00AF     		add	r7, sp, #0
 374              	.LCFI20:
 375              		.cfi_def_cfa_register 7
 376 0006 7860     		str	r0, [r7, #4]
 377 0008 0A1C     		mov	r2, r1
 378 000a BB1C     		add	r3, r7, #2
 379 000c 1A80     		strh	r2, [r3]
 303:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 380              		.loc 1 303 0
 381 000e 7B68     		ldr	r3, [r7, #4]
 382 0010 FB60     		str	r3, [r7, #12]
 304:../Generated_Code/PwmLdd1.c ****   LDD_TimerUnit_Tfloat rtval;          /* Result of multiplication */
 305:../Generated_Code/PwmLdd1.c **** 
 306:../Generated_Code/PwmLdd1.c ****   /* Time test - this test can be disabled by setting the "Ignore range checking"
 307:../Generated_Code/PwmLdd1.c ****      property to the "yes" value in the "Configuration inspector" */
 308:../Generated_Code/PwmLdd1.c ****   if (Time > 0x1388U) {                /* Is the given value out of range? */
 383              		.loc 1 308 0
 384 0012 BB1C     		add	r3, r7, #2
 385 0014 1A88     		ldrh	r2, [r3]
 386 0016 194B     		ldr	r3, .L21
 387 0018 9A42     		cmp	r2, r3
 388 001a 01D9     		bls	.L16
 309:../Generated_Code/PwmLdd1.c ****     return ERR_RANGE;                  /* If yes then error */
 389              		.loc 1 309 0
 390 001c 0223     		mov	r3, #2
 391 001e 29E0     		b	.L17
 392              	.L16:
 310:../Generated_Code/PwmLdd1.c ****   }
 311:../Generated_Code/PwmLdd1.c ****   rtval = Time * 13.107150000191F;     /* Multiply given value and actual clock configuration coeff
 393              		.loc 1 311 0
 394 0020 BB1C     		add	r3, r7, #2
 395 0022 1B88     		ldrh	r3, [r3]
 396 0024 181C     		mov	r0, r3
 397 0026 FFF7FEFF 		bl	__aeabi_i2f
 398 002a 031C     		add	r3, r0, #0
 399 002c 181C     		add	r0, r3, #0
 400 002e 1449     		ldr	r1, .L21+4
 401 0030 FFF7FEFF 		bl	__aeabi_fmul
 402 0034 031C     		add	r3, r0, #0
 403 0036 BB60     		str	r3, [r7, #8]
 312:../Generated_Code/PwmLdd1.c ****   if (rtval > 0xFFFFUL) {              /* Is the result greater than 65535 ? */
 404              		.loc 1 312 0
 405 0038 0123     		mov	r3, #1
 406 003a 1C1C     		add	r4, r3, #0
 407 003c B868     		ldr	r0, [r7, #8]
 408 003e 1149     		ldr	r1, .L21+8
 409 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 410 0044 031C     		mov	r3, r0
 411 0046 01D1     		bne	.L18
 412 0048 0023     		mov	r3, #0
 413 004a 1C1C     		add	r4, r3, #0
 414              	.L18:
 415 004c E3B2     		uxtb	r3, r4
 416 004e 002B     		cmp	r3, #0
 417 0050 04D0     		beq	.L19
 313:../Generated_Code/PwmLdd1.c ****     DeviceDataPrv->RatioStore = 0xFFFFU; /* If yes then use maximal possible value */
 418              		.loc 1 313 0
 419 0052 FB68     		ldr	r3, [r7, #12]
 420 0054 0122     		mov	r2, #1
 421 0056 5242     		neg	r2, r2
 422 0058 DA80     		strh	r2, [r3, #6]
 423 005a 06E0     		b	.L20
 424              	.L19:
 314:../Generated_Code/PwmLdd1.c ****   }
 315:../Generated_Code/PwmLdd1.c ****   else {
 316:../Generated_Code/PwmLdd1.c ****     DeviceDataPrv->RatioStore = (uint16_t)rtval;
 425              		.loc 1 316 0
 426 005c B868     		ldr	r0, [r7, #8]
 427 005e FFF7FEFF 		bl	__aeabi_f2uiz
 428 0062 031C     		mov	r3, r0
 429 0064 9AB2     		uxth	r2, r3
 430 0066 FB68     		ldr	r3, [r7, #12]
 431 0068 DA80     		strh	r2, [r3, #6]
 432              	.L20:
 317:../Generated_Code/PwmLdd1.c ****   }
 318:../Generated_Code/PwmLdd1.c ****   SetRatio(DeviceDataPrv);             /* Calculate and set up new appropriate values of the duty r
 433              		.loc 1 318 0
 434 006a FB68     		ldr	r3, [r7, #12]
 435 006c 181C     		mov	r0, r3
 436 006e FFF7FEFF 		bl	SetRatio
 319:../Generated_Code/PwmLdd1.c ****   return ERR_OK;                       /* OK */
 437              		.loc 1 319 0
 438 0072 0023     		mov	r3, #0
 439              	.L17:
 320:../Generated_Code/PwmLdd1.c **** }
 440              		.loc 1 320 0
 441 0074 181C     		mov	r0, r3
 442 0076 BD46     		mov	sp, r7
 443 0078 05B0     		add	sp, sp, #20
 444              		@ sp needed for prologue
 445 007a 90BD     		pop	{r4, r7, pc}
 446              	.L22:
 447              		.align	2
 448              	.L21:
 449 007c 88130000 		.word	5000
 450 0080 E3B65141 		.word	1095874275
 451 0084 00FF7F47 		.word	1199570688
 452              		.cfi_endproc
 453              	.LFE6:
 455              		.section	.text.PwmLdd1_SetDutyMS,"ax",%progbits
 456              		.align	2
 457              		.global	PwmLdd1_SetDutyMS
 458              		.code	16
 459              		.thumb_func
 461              	PwmLdd1_SetDutyMS:
 462              	.LFB7:
 321:../Generated_Code/PwmLdd1.c **** 
 322:../Generated_Code/PwmLdd1.c **** /*
 323:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 324:../Generated_Code/PwmLdd1.c **** **     Method      :  PwmLdd1_SetDutyMS (component PWM_LDD)
 325:../Generated_Code/PwmLdd1.c **** **
 326:../Generated_Code/PwmLdd1.c **** **     Description :
 327:../Generated_Code/PwmLdd1.c **** **         This method sets the new duty value of the output signal.
 328:../Generated_Code/PwmLdd1.c **** **         The duty is expressed in milliseconds as a 16-bit unsigned
 329:../Generated_Code/PwmLdd1.c **** **         integer number. The method is available only if it is not
 330:../Generated_Code/PwmLdd1.c **** **         selected list of predefined values in <Starting pulse width>
 331:../Generated_Code/PwmLdd1.c **** **         property.
 332:../Generated_Code/PwmLdd1.c **** **     Parameters  :
 333:../Generated_Code/PwmLdd1.c **** **         NAME            - DESCRIPTION
 334:../Generated_Code/PwmLdd1.c **** **       * DeviceDataPtr   - Device data structure
 335:../Generated_Code/PwmLdd1.c **** **                           pointer returned by <Init> method.
 336:../Generated_Code/PwmLdd1.c **** **         Time            - Duty to set [in milliseconds]
 337:../Generated_Code/PwmLdd1.c **** **     Returns     :
 338:../Generated_Code/PwmLdd1.c **** **         ---             - Error code, possible codes:
 339:../Generated_Code/PwmLdd1.c **** **                           ERR_OK - OK
 340:../Generated_Code/PwmLdd1.c **** **                           ERR_SPEED - The component does not work in
 341:../Generated_Code/PwmLdd1.c **** **                           the active clock configuration
 342:../Generated_Code/PwmLdd1.c **** **                           ERR_MATH - Overflow during evaluation
 343:../Generated_Code/PwmLdd1.c **** **                           ERR_RANGE - Parameter out of range
 344:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 345:../Generated_Code/PwmLdd1.c **** */
 346:../Generated_Code/PwmLdd1.c **** LDD_TError PwmLdd1_SetDutyMS(LDD_TDeviceData *DeviceDataPtr, uint16_t Time)
 347:../Generated_Code/PwmLdd1.c **** {
 463              		.loc 1 347 0
 464              		.cfi_startproc
 465 0000 90B5     		push	{r4, r7, lr}
 466              	.LCFI21:
 467              		.cfi_def_cfa_offset 12
 468              		.cfi_offset 4, -12
 469              		.cfi_offset 7, -8
 470              		.cfi_offset 14, -4
 471 0002 85B0     		sub	sp, sp, #20
 472              	.LCFI22:
 473              		.cfi_def_cfa_offset 32
 474 0004 00AF     		add	r7, sp, #0
 475              	.LCFI23:
 476              		.cfi_def_cfa_register 7
 477 0006 7860     		str	r0, [r7, #4]
 478 0008 0A1C     		mov	r2, r1
 479 000a BB1C     		add	r3, r7, #2
 480 000c 1A80     		strh	r2, [r3]
 348:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData *)DeviceDataPtr;
 481              		.loc 1 348 0
 482 000e 7B68     		ldr	r3, [r7, #4]
 483 0010 FB60     		str	r3, [r7, #12]
 349:../Generated_Code/PwmLdd1.c ****   LDD_TimerUnit_Tfloat rtval;          /* Result of multiplication */
 350:../Generated_Code/PwmLdd1.c **** 
 351:../Generated_Code/PwmLdd1.c ****   /* Time test - this test can be disabled by setting the "Ignore range checking"
 352:../Generated_Code/PwmLdd1.c ****      property to the "yes" value in the "Configuration inspector" */
 353:../Generated_Code/PwmLdd1.c ****   if (Time > 0x05U) {                  /* Is the given value out of range? */
 484              		.loc 1 353 0
 485 0012 BB1C     		add	r3, r7, #2
 486 0014 1B88     		ldrh	r3, [r3]
 487 0016 052B     		cmp	r3, #5
 488 0018 01D9     		bls	.L24
 354:../Generated_Code/PwmLdd1.c ****     return ERR_RANGE;                  /* If yes then error */
 489              		.loc 1 354 0
 490 001a 0223     		mov	r3, #2
 491 001c 29E0     		b	.L25
 492              	.L24:
 355:../Generated_Code/PwmLdd1.c ****   }
 356:../Generated_Code/PwmLdd1.c ****   rtval = Time * 13107.150001465605F;  /* Multiply given value and actual clock configuration coeff
 493              		.loc 1 356 0
 494 001e BB1C     		add	r3, r7, #2
 495 0020 1B88     		ldrh	r3, [r3]
 496 0022 181C     		mov	r0, r3
 497 0024 FFF7FEFF 		bl	__aeabi_i2f
 498 0028 031C     		add	r3, r0, #0
 499 002a 181C     		add	r0, r3, #0
 500 002c 1349     		ldr	r1, .L29
 501 002e FFF7FEFF 		bl	__aeabi_fmul
 502 0032 031C     		add	r3, r0, #0
 503 0034 BB60     		str	r3, [r7, #8]
 357:../Generated_Code/PwmLdd1.c ****   if (rtval > 0xFFFFUL) {              /* Is the result greater than 65535 ? */
 504              		.loc 1 357 0
 505 0036 0123     		mov	r3, #1
 506 0038 1C1C     		add	r4, r3, #0
 507 003a B868     		ldr	r0, [r7, #8]
 508 003c 1049     		ldr	r1, .L29+4
 509 003e FFF7FEFF 		bl	__aeabi_fcmpgt
 510 0042 031C     		mov	r3, r0
 511 0044 01D1     		bne	.L26
 512 0046 0023     		mov	r3, #0
 513 0048 1C1C     		add	r4, r3, #0
 514              	.L26:
 515 004a E3B2     		uxtb	r3, r4
 516 004c 002B     		cmp	r3, #0
 517 004e 04D0     		beq	.L27
 358:../Generated_Code/PwmLdd1.c ****     DeviceDataPrv->RatioStore = 0xFFFFU; /* If yes then use maximal possible value */
 518              		.loc 1 358 0
 519 0050 FB68     		ldr	r3, [r7, #12]
 520 0052 0122     		mov	r2, #1
 521 0054 5242     		neg	r2, r2
 522 0056 DA80     		strh	r2, [r3, #6]
 523 0058 06E0     		b	.L28
 524              	.L27:
 359:../Generated_Code/PwmLdd1.c ****   }
 360:../Generated_Code/PwmLdd1.c ****   else {
 361:../Generated_Code/PwmLdd1.c ****     DeviceDataPrv->RatioStore = (uint16_t)rtval;
 525              		.loc 1 361 0
 526 005a B868     		ldr	r0, [r7, #8]
 527 005c FFF7FEFF 		bl	__aeabi_f2uiz
 528 0060 031C     		mov	r3, r0
 529 0062 9AB2     		uxth	r2, r3
 530 0064 FB68     		ldr	r3, [r7, #12]
 531 0066 DA80     		strh	r2, [r3, #6]
 532              	.L28:
 362:../Generated_Code/PwmLdd1.c ****   }
 363:../Generated_Code/PwmLdd1.c ****   SetRatio(DeviceDataPrv);             /* Calculate and set up new appropriate values of the duty r
 533              		.loc 1 363 0
 534 0068 FB68     		ldr	r3, [r7, #12]
 535 006a 181C     		mov	r0, r3
 536 006c FFF7FEFF 		bl	SetRatio
 364:../Generated_Code/PwmLdd1.c ****   return ERR_OK;                       /* OK */
 537              		.loc 1 364 0
 538 0070 0023     		mov	r3, #0
 539              	.L25:
 365:../Generated_Code/PwmLdd1.c **** }
 540              		.loc 1 365 0
 541 0072 181C     		mov	r0, r3
 542 0074 BD46     		mov	sp, r7
 543 0076 05B0     		add	sp, sp, #20
 544              		@ sp needed for prologue
 545 0078 90BD     		pop	{r4, r7, pc}
 546              	.L30:
 547 007a C046     		.align	2
 548              	.L29:
 549 007c 9ACC4C46 		.word	1179438234
 550 0080 00FF7F47 		.word	1199570688
 551              		.cfi_endproc
 552              	.LFE7:
 554              		.section	.text.SetRatio,"ax",%progbits
 555              		.align	2
 556              		.code	16
 557              		.thumb_func
 559              	SetRatio:
 560              	.LFB8:
 366:../Generated_Code/PwmLdd1.c **** 
 367:../Generated_Code/PwmLdd1.c **** /*
 368:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 369:../Generated_Code/PwmLdd1.c **** **     Method      :  SetRatio (component PWM_LDD)
 370:../Generated_Code/PwmLdd1.c **** **
 371:../Generated_Code/PwmLdd1.c **** **     Description :
 372:../Generated_Code/PwmLdd1.c **** **         This method calculates new value of duty compare register from 
 373:../Generated_Code/PwmLdd1.c **** **         variable RatioStore.
 374:../Generated_Code/PwmLdd1.c **** **         This method is internal. It is used by Processor Expert only.
 375:../Generated_Code/PwmLdd1.c **** ** ===================================================================
 376:../Generated_Code/PwmLdd1.c **** */
 377:../Generated_Code/PwmLdd1.c **** static void SetRatio(LDD_TDeviceData *DeviceDataPtr)
 378:../Generated_Code/PwmLdd1.c **** {
 561              		.loc 1 378 0
 562              		.cfi_startproc
 563 0000 80B5     		push	{r7, lr}
 564              	.LCFI24:
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 7, -8
 567              		.cfi_offset 14, -4
 568 0002 86B0     		sub	sp, sp, #24
 569              	.LCFI25:
 570              		.cfi_def_cfa_offset 32
 571 0004 00AF     		add	r7, sp, #0
 572              	.LCFI26:
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 379:../Generated_Code/PwmLdd1.c ****   PwmLdd1_TDeviceData *DeviceDataPrv = (PwmLdd1_TDeviceData*)DeviceDataPtr;
 575              		.loc 1 379 0
 576 0008 7B68     		ldr	r3, [r7, #4]
 577 000a 3B61     		str	r3, [r7, #16]
 380:../Generated_Code/PwmLdd1.c ****   uint16_t Period;
 381:../Generated_Code/PwmLdd1.c ****   uint16_t Duty;
 382:../Generated_Code/PwmLdd1.c **** 
 383:../Generated_Code/PwmLdd1.c ****   (void)TU2_GetPeriodTicks(DeviceDataPrv->LinkedDeviceDataPtr, &Period);
 578              		.loc 1 383 0
 579 000c 3B69     		ldr	r3, [r7, #16]
 580 000e 1A68     		ldr	r2, [r3]
 581 0010 3B1C     		mov	r3, r7
 582 0012 0E33     		add	r3, r3, #14
 583 0014 101C     		mov	r0, r2
 584 0016 191C     		mov	r1, r3
 585 0018 FFF7FEFF 		bl	TU2_GetPeriodTicks
 384:../Generated_Code/PwmLdd1.c ****   if (Period == 0U) {
 586              		.loc 1 384 0
 587 001c 3B1C     		mov	r3, r7
 588 001e 0E33     		add	r3, r3, #14
 589 0020 1B88     		ldrh	r3, [r3]
 590 0022 002B     		cmp	r3, #0
 591 0024 05D1     		bne	.L32
 385:../Generated_Code/PwmLdd1.c ****     Duty = DeviceDataPrv->RatioStore;
 592              		.loc 1 385 0
 593 0026 3B1C     		mov	r3, r7
 594 0028 1633     		add	r3, r3, #22
 595 002a 3A69     		ldr	r2, [r7, #16]
 596 002c D288     		ldrh	r2, [r2, #6]
 597 002e 1A80     		strh	r2, [r3]
 598 0030 11E0     		b	.L33
 599              	.L32:
 386:../Generated_Code/PwmLdd1.c ****   }
 387:../Generated_Code/PwmLdd1.c ****   else {
 388:../Generated_Code/PwmLdd1.c ****     Duty = (uint16_t)((((uint32_t)Period * DeviceDataPrv->RatioStore) + ((Period - 1U) & 0x8000)) >
 600              		.loc 1 388 0
 601 0032 3B1C     		mov	r3, r7
 602 0034 0E33     		add	r3, r3, #14
 603 0036 1B88     		ldrh	r3, [r3]
 604 0038 3A69     		ldr	r2, [r7, #16]
 605 003a D288     		ldrh	r2, [r2, #6]
 606 003c 5A43     		mul	r2, r3
 607 003e 3B1C     		mov	r3, r7
 608 0040 0E33     		add	r3, r3, #14
 609 0042 1B88     		ldrh	r3, [r3]
 610 0044 591E     		sub	r1, r3, #1
 611 0046 8023     		mov	r3, #128
 612 0048 1B02     		lsl	r3, r3, #8
 613 004a 0B40     		and	r3, r1
 614 004c D318     		add	r3, r2, r3
 615 004e 1A0C     		lsr	r2, r3, #16
 616 0050 3B1C     		mov	r3, r7
 617 0052 1633     		add	r3, r3, #22
 618 0054 1A80     		strh	r2, [r3]
 619              	.L33:
 389:../Generated_Code/PwmLdd1.c ****   }
 390:../Generated_Code/PwmLdd1.c ****   (void)TU2_SetOffsetTicks(DeviceDataPrv->LinkedDeviceDataPtr, CHANNEL, Duty);
 620              		.loc 1 390 0
 621 0056 3B69     		ldr	r3, [r7, #16]
 622 0058 1A68     		ldr	r2, [r3]
 623 005a 3B1C     		mov	r3, r7
 624 005c 1633     		add	r3, r3, #22
 625 005e 1B88     		ldrh	r3, [r3]
 626 0060 101C     		mov	r0, r2
 627 0062 0021     		mov	r1, #0
 628 0064 1A1C     		mov	r2, r3
 629 0066 FFF7FEFF 		bl	TU2_SetOffsetTicks
 391:../Generated_Code/PwmLdd1.c **** }
 630              		.loc 1 391 0
 631 006a BD46     		mov	sp, r7
 632 006c 06B0     		add	sp, sp, #24
 633              		@ sp needed for prologue
 634 006e 80BD     		pop	{r7, pc}
 635              		.cfi_endproc
 636              	.LFE8:
 638              		.text
 639              	.Letext0:
 640              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 641              		.file 3 "../Generated_Code/PE_Types.h"
 642              		.file 4 "../Generated_Code/PE_LDD.h"
 643              		.file 5 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/MQXLITE/psp/cortex_m/psptypes.
 644              		.file 6 "../Generated_Code/IO_Map.h"
DEFINED SYMBOLS
                            *ABS*:00000000 PwmLdd1.c
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:24     .text.PwmLdd1_Init:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:29     .text.PwmLdd1_Init:00000000 PwmLdd1_Init
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:92     .text.PwmLdd1_Init:00000048 $d
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:99     .text.PwmLdd1_Deinit:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:104    .text.PwmLdd1_Deinit:00000000 PwmLdd1_Deinit
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:140    .text.PwmLdd1_Deinit:00000024 $d
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:145    .text.PwmLdd1_Enable:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:150    .text.PwmLdd1_Enable:00000000 PwmLdd1_Enable
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:196    .text.PwmLdd1_Disable:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:201    .text.PwmLdd1_Disable:00000000 PwmLdd1_Disable
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:252    .text.PwmLdd1_SetRatio8:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:257    .text.PwmLdd1_SetRatio8:00000000 PwmLdd1_SetRatio8
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:559    .text.SetRatio:00000000 SetRatio
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:303    .text.PwmLdd1_SetRatio16:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:308    .text.PwmLdd1_SetRatio16:00000000 PwmLdd1_SetRatio16
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:355    .text.PwmLdd1_SetDutyUS:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:360    .text.PwmLdd1_SetDutyUS:00000000 PwmLdd1_SetDutyUS
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:449    .text.PwmLdd1_SetDutyUS:0000007c $d
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:456    .text.PwmLdd1_SetDutyMS:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:461    .text.PwmLdd1_SetDutyMS:00000000 PwmLdd1_SetDutyMS
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:549    .text.PwmLdd1_SetDutyMS:0000007c $d
C:\Users\LARM\AppData\Local\Temp\ccSKCZam.s:555    .text.SetRatio:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TU2_Init
PE_LDD_DeviceDataList
TU2_Deinit
TU2_Enable
TU2_Disable
TU2_ResetCounter
__aeabi_i2f
__aeabi_fmul
__aeabi_fcmpgt
__aeabi_f2uiz
TU2_GetPeriodTicks
TU2_SetOffsetTicks
