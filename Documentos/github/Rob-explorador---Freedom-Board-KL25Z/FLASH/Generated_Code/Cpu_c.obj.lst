   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Cpu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SR_reg,1,1
  18              		.global	SR_lock
  19              		.section	.bss.SR_lock,"aw",%nobits
  22              	SR_lock:
  23 0000 00       		.space	1
  24              		.section	.text.Cpu_INT_NMIInterrupt,"ax",%progbits
  25              		.align	2
  26              		.global	Cpu_INT_NMIInterrupt
  27              		.code	16
  28              		.thumb_func
  30              	Cpu_INT_NMIInterrupt:
  31              	.LFB0:
  32              		.file 1 "../Generated_Code/Cpu.c"
   1:../Generated_Code/Cpu.c **** /** ###################################################################
   2:../Generated_Code/Cpu.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/Cpu.c **** **     Filename    : Cpu.c
   4:../Generated_Code/Cpu.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/Cpu.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/Cpu.c **** **     Component   : MKL25Z128LK4
   7:../Generated_Code/Cpu.c **** **     Version     : Component 01.025, Driver 01.04, CPU db: 3.00.000
   8:../Generated_Code/Cpu.c **** **     Datasheet   : KL25P80M48SF0RM, Rev.3, Sep 2012
   9:../Generated_Code/Cpu.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/Cpu.c **** **     Date/Time   : 2013-09-09, 15:40, # CodeGen: 48
  11:../Generated_Code/Cpu.c **** **     Abstract    :
  12:../Generated_Code/Cpu.c **** **
  13:../Generated_Code/Cpu.c **** **     Settings    :
  14:../Generated_Code/Cpu.c **** **
  15:../Generated_Code/Cpu.c **** **     Contents    :
  16:../Generated_Code/Cpu.c **** **         No public methods
  17:../Generated_Code/Cpu.c **** **
  18:../Generated_Code/Cpu.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  19:../Generated_Code/Cpu.c **** **     
  20:../Generated_Code/Cpu.c **** **     http      : www.freescale.com
  21:../Generated_Code/Cpu.c **** **     mail      : support@freescale.com
  22:../Generated_Code/Cpu.c **** ** ###################################################################*/
  23:../Generated_Code/Cpu.c **** 
  24:../Generated_Code/Cpu.c **** /* MODULE Cpu. */
  25:../Generated_Code/Cpu.c **** #include "AS1.h"
  26:../Generated_Code/Cpu.c **** #include "RxBuf.h"
  27:../Generated_Code/Cpu.c **** #include "Bit1.h"
  28:../Generated_Code/Cpu.c **** #include "BitIoLdd1.h"
  29:../Generated_Code/Cpu.c **** #include "TRIG.h"
  30:../Generated_Code/Cpu.c **** #include "TU1.h"
  31:../Generated_Code/Cpu.c **** #include "WAIT1.h"
  32:../Generated_Code/Cpu.c **** #include "UTIL1.h"
  33:../Generated_Code/Cpu.c **** #include "LED1.h"
  34:../Generated_Code/Cpu.c **** #include "LEDpin1.h"
  35:../Generated_Code/Cpu.c **** #include "BitIoLdd2.h"
  36:../Generated_Code/Cpu.c **** #include "TU2.h"
  37:../Generated_Code/Cpu.c **** #include "LED2.h"
  38:../Generated_Code/Cpu.c **** #include "Inhr1.h"
  39:../Generated_Code/Cpu.c **** #include "PwmLdd1.h"
  40:../Generated_Code/Cpu.c **** #include "TU3.h"
  41:../Generated_Code/Cpu.c **** #include "LED3.h"
  42:../Generated_Code/Cpu.c **** #include "LEDpin3.h"
  43:../Generated_Code/Cpu.c **** #include "BitIoLdd4.h"
  44:../Generated_Code/Cpu.c **** #include "Inhr2.h"
  45:../Generated_Code/Cpu.c **** #include "PwmLdd2.h"
  46:../Generated_Code/Cpu.c **** #include "MF01.h"
  47:../Generated_Code/Cpu.c **** #include "LEDpin4.h"
  48:../Generated_Code/Cpu.c **** #include "BitIoLdd5.h"
  49:../Generated_Code/Cpu.c **** #include "MF02.h"
  50:../Generated_Code/Cpu.c **** #include "LEDpin5.h"
  51:../Generated_Code/Cpu.c **** #include "BitIoLdd6.h"
  52:../Generated_Code/Cpu.c **** #include "MQX1.h"
  53:../Generated_Code/Cpu.c **** #include "SystemTimer1.h"
  54:../Generated_Code/Cpu.c **** #include "P1.h"
  55:../Generated_Code/Cpu.c **** #include "BitIoLdd7.h"
  56:../Generated_Code/Cpu.c **** #include "P2.h"
  57:../Generated_Code/Cpu.c **** #include "BitIoLdd8.h"
  58:../Generated_Code/Cpu.c **** #include "P3.h"
  59:../Generated_Code/Cpu.c **** #include "BitIoLdd9.h"
  60:../Generated_Code/Cpu.c **** #include "P4.h"
  61:../Generated_Code/Cpu.c **** #include "BitIoLdd10.h"
  62:../Generated_Code/Cpu.c **** #include "SS1.h"
  63:../Generated_Code/Cpu.c **** #include "TRIG2.h"
  64:../Generated_Code/Cpu.c **** #include "PE_Types.h"
  65:../Generated_Code/Cpu.c **** #include "PE_Error.h"
  66:../Generated_Code/Cpu.c **** #include "PE_Const.h"
  67:../Generated_Code/Cpu.c **** #include "IO_Map.h"
  68:../Generated_Code/Cpu.c **** #include "Events.h"
  69:../Generated_Code/Cpu.c **** #include "mqx_tasks.h"
  70:../Generated_Code/Cpu.c **** #include "Cpu.h"
  71:../Generated_Code/Cpu.c **** 
  72:../Generated_Code/Cpu.c **** /* Global variables */
  73:../Generated_Code/Cpu.c **** volatile uint8_t SR_reg;               /* Current value of the FAULTMASK register */
  74:../Generated_Code/Cpu.c **** volatile uint8_t SR_lock = 0x00U;      /* Lock */
  75:../Generated_Code/Cpu.c **** 
  76:../Generated_Code/Cpu.c **** 
  77:../Generated_Code/Cpu.c **** /*
  78:../Generated_Code/Cpu.c **** ** ===================================================================
  79:../Generated_Code/Cpu.c **** **     Method      :  Cpu_INT_NMIInterrupt (component MKL25Z128LK4)
  80:../Generated_Code/Cpu.c **** **
  81:../Generated_Code/Cpu.c **** **     Description :
  82:../Generated_Code/Cpu.c **** **         This ISR services the Non Maskable Interrupt interrupt.
  83:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
  84:../Generated_Code/Cpu.c **** ** ===================================================================
  85:../Generated_Code/Cpu.c **** */
  86:../Generated_Code/Cpu.c **** void Cpu_INT_NMIInterrupt(void)
  87:../Generated_Code/Cpu.c **** {
  33              		.loc 1 87 0
  34              		.cfi_startproc
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              	.LCFI1:
  42              		.cfi_def_cfa_register 7
  88:../Generated_Code/Cpu.c ****   Cpu_OnNMIINT();
  43              		.loc 1 88 0
  44 0004 FFF7FEFF 		bl	Cpu_OnNMIINT
  89:../Generated_Code/Cpu.c **** }
  45              		.loc 1 89 0
  46 0008 BD46     		mov	sp, r7
  47              		@ sp needed for prologue
  48 000a 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE0:
  52              		.section	.text.Cpu_Interrupt,"ax",%progbits
  53              		.align	2
  54              		.global	Cpu_Interrupt
  55              		.code	16
  56              		.thumb_func
  58              	Cpu_Interrupt:
  59              	.LFB1:
  90:../Generated_Code/Cpu.c **** 
  91:../Generated_Code/Cpu.c **** /*
  92:../Generated_Code/Cpu.c **** ** ===================================================================
  93:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_Interrupt (component MKL25Z128LK4)
  94:../Generated_Code/Cpu.c **** **
  95:../Generated_Code/Cpu.c **** **     Description :
  96:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
  97:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
  98:../Generated_Code/Cpu.c **** ** ===================================================================
  99:../Generated_Code/Cpu.c **** */
 100:../Generated_Code/Cpu.c **** PE_ISR(Cpu_Interrupt)
 101:../Generated_Code/Cpu.c **** {
  60              		.loc 1 101 0
  61              		.cfi_startproc
  62 0000 80B5     		push	{r7, lr}
  63              	.LCFI2:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              	.LCFI3:
  69              		.cfi_def_cfa_register 7
 102:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 103:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
  70              		.loc 1 103 0
  71              	@ 103 "../Generated_Code/Cpu.c" 1
  72 0004 FFBE     		BKPT 255
  73              	@ 0 "" 2
 104:../Generated_Code/Cpu.c **** }
  74              		.loc 1 104 0
  75              		.code	16
  76 0006 BD46     		mov	sp, r7
  77              		@ sp needed for prologue
  78 0008 80BD     		pop	{r7, pc}
  79              		.cfi_endproc
  80              	.LFE1:
  82 000a C046     		.section	.text.__init_hardware,"ax",%progbits
  83              		.align	2
  84              		.global	__init_hardware
  85              		.code	16
  86              		.thumb_func
  88              	__init_hardware:
  89              	.LFB2:
 105:../Generated_Code/Cpu.c **** 
 106:../Generated_Code/Cpu.c **** 
 107:../Generated_Code/Cpu.c **** /*** !!! Here you can place your own code using property "User data declarations" on the build opti
 108:../Generated_Code/Cpu.c **** 
 109:../Generated_Code/Cpu.c **** /*lint -esym(765,__init_hardware) Disable MISRA rule (8.10) checking for symbols (__init_hardware).
 110:../Generated_Code/Cpu.c **** /*lint -esym(765,Cpu_Interrupt) Disable MISRA rule (8.10) checking for symbols (Cpu_Interrupt). */
 111:../Generated_Code/Cpu.c **** void __init_hardware(void)
 112:../Generated_Code/Cpu.c **** {
  90              		.loc 1 112 0
  91              		.cfi_startproc
  92 0000 80B5     		push	{r7, lr}
  93              	.LCFI4:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 00AF     		add	r7, sp, #0
  98              	.LCFI5:
  99              		.cfi_def_cfa_register 7
 113:../Generated_Code/Cpu.c **** 
 114:../Generated_Code/Cpu.c ****   /*** !!! Here you can place your own code before PE initialization using property "User code befo
 115:../Generated_Code/Cpu.c **** 
 116:../Generated_Code/Cpu.c ****   /*** ### MKL25Z128VLK4 "Cpu" init code ... ***/
 117:../Generated_Code/Cpu.c ****   /*** PE initialization code after reset ***/
 118:../Generated_Code/Cpu.c ****   SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
 100              		.loc 1 118 0
 101 0004 2D4A     		ldr	r2, .L6
 102 0006 2E49     		ldr	r1, .L6+4
 103 0008 2E4B     		ldr	r3, .L6+8
 104 000a D150     		str	r1, [r2, r3]
 119:../Generated_Code/Cpu.c ****   /* Disable the WDOG module */
 120:../Generated_Code/Cpu.c ****   /* SIM_COPC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0
 121:../Generated_Code/Cpu.c ****   SIM_COPC = 0x00U;                                                   
 105              		.loc 1 121 0
 106 000c 2E4A     		ldr	r2, .L6+12
 107 000e 8823     		mov	r3, #136
 108 0010 5B01     		lsl	r3, r3, #5
 109 0012 0021     		mov	r1, #0
 110 0014 D150     		str	r1, [r2, r3]
 122:../Generated_Code/Cpu.c ****   /* System clock initialization */
 123:../Generated_Code/Cpu.c ****   /* SIM_SCGC5: PORTE=1,PORTD=1,PORTC=1,PORTB=1,PORTA=1 */
 124:../Generated_Code/Cpu.c ****   SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK |
 111              		.loc 1 124 0
 112 0016 2C4A     		ldr	r2, .L6+12
 113 0018 2B49     		ldr	r1, .L6+12
 114 001a 2C4B     		ldr	r3, .L6+16
 115 001c CB58     		ldr	r3, [r1, r3]
 116 001e F821     		mov	r1, #248
 117 0020 8901     		lsl	r1, r1, #6
 118 0022 1943     		orr	r1, r3
 119 0024 294B     		ldr	r3, .L6+16
 120 0026 D150     		str	r1, [r2, r3]
 125:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTD_MASK |
 126:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTC_MASK |
 127:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTB_MASK |
 128:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
 129:../Generated_Code/Cpu.c ****   /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=0,??=0,??=0,??=0,?
 130:../Generated_Code/Cpu.c ****   SIM_CLKDIV1 = 0x00U;                 /* Update system prescalers */
 121              		.loc 1 130 0
 122 0028 274A     		ldr	r2, .L6+12
 123 002a 294B     		ldr	r3, .L6+20
 124 002c 0021     		mov	r1, #0
 125 002e D150     		str	r1, [r2, r3]
 131:../Generated_Code/Cpu.c ****   /* SIM_SOPT2: PLLFLLSEL=0 */
 132:../Generated_Code/Cpu.c ****   SIM_SOPT2 &= (uint32_t)~(uint32_t)(SIM_SOPT2_PLLFLLSEL_MASK); /* Select FLL as a clock source for
 126              		.loc 1 132 0
 127 0030 254A     		ldr	r2, .L6+12
 128 0032 2549     		ldr	r1, .L6+12
 129 0034 274B     		ldr	r3, .L6+24
 130 0036 CB58     		ldr	r3, [r1, r3]
 131 0038 191C     		mov	r1, r3
 132 003a 274B     		ldr	r3, .L6+28
 133 003c 1940     		and	r1, r3
 134 003e 254B     		ldr	r3, .L6+24
 135 0040 D150     		str	r1, [r2, r3]
 133:../Generated_Code/Cpu.c ****   /* SIM_SOPT1: OSC32KSEL=3 */
 134:../Generated_Code/Cpu.c ****   SIM_SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* LPO 1kHz oscillator drives 32 kHz clock for various pe
 136              		.loc 1 134 0
 137 0042 214B     		ldr	r3, .L6+12
 138 0044 204A     		ldr	r2, .L6+12
 139 0046 1268     		ldr	r2, [r2]
 140 0048 C021     		mov	r1, #192
 141 004a 0903     		lsl	r1, r1, #12
 142 004c 0A43     		orr	r2, r1
 143 004e 1A60     		str	r2, [r3]
 135:../Generated_Code/Cpu.c ****   /* SIM_SOPT2: TPMSRC=1 */
 136:../Generated_Code/Cpu.c ****   SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
 144              		.loc 1 136 0
 145 0050 1D4A     		ldr	r2, .L6+12
 146 0052 1D49     		ldr	r1, .L6+12
 147 0054 1F4B     		ldr	r3, .L6+24
 148 0056 CB58     		ldr	r3, [r1, r3]
 149 0058 191C     		mov	r1, r3
 150 005a 204B     		ldr	r3, .L6+32
 151 005c 0B40     		and	r3, r1
 152 005e 8021     		mov	r1, #128
 153 0060 4904     		lsl	r1, r1, #17
 154 0062 1943     		orr	r1, r3
 155 0064 1B4B     		ldr	r3, .L6+24
 156 0066 D150     		str	r1, [r2, r3]
 137:../Generated_Code/Cpu.c ****                SIM_SOPT2_TPMSRC(0x02)
 138:../Generated_Code/Cpu.c ****               )) | (uint32_t)(
 139:../Generated_Code/Cpu.c ****                SIM_SOPT2_TPMSRC(0x01)
 140:../Generated_Code/Cpu.c ****               ));                      /* Set the TPM clock */
 141:../Generated_Code/Cpu.c ****   /* Switch to FEI Mode */
 142:../Generated_Code/Cpu.c ****   /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
 143:../Generated_Code/Cpu.c ****   MCG_C1 = (MCG_C1_IREFS_MASK | MCG_C1_IRCLKEN_MASK);                                              
 157              		.loc 1 143 0
 158 0068 1D4B     		ldr	r3, .L6+36
 159 006a 0622     		mov	r2, #6
 160 006c 1A70     		strb	r2, [r3]
 144:../Generated_Code/Cpu.c ****   /* MCG_C2: LOCRE0=0,??=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
 145:../Generated_Code/Cpu.c ****   MCG_C2 = 0x00U;                                                   
 161              		.loc 1 145 0
 162 006e 1C4B     		ldr	r3, .L6+36
 163 0070 0022     		mov	r2, #0
 164 0072 5A70     		strb	r2, [r3, #1]
 146:../Generated_Code/Cpu.c ****   /* MCG_C4: DMX32=0,DRST_DRS=0 */
 147:../Generated_Code/Cpu.c ****   MCG_C4 &= (uint8_t)~(uint8_t)((MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS(0x03)));                      
 165              		.loc 1 147 0
 166 0074 1A4B     		ldr	r3, .L6+36
 167 0076 1A4A     		ldr	r2, .L6+36
 168 0078 D278     		ldrb	r2, [r2, #3]
 169 007a D1B2     		uxtb	r1, r2
 170 007c 1F22     		mov	r2, #31
 171 007e 0A40     		and	r2, r1
 172 0080 D2B2     		uxtb	r2, r2
 173 0082 DA70     		strb	r2, [r3, #3]
 148:../Generated_Code/Cpu.c ****   /* OSC0_CR: ERCLKEN=1,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
 149:../Generated_Code/Cpu.c ****   OSC0_CR = OSC_CR_ERCLKEN_MASK;                                                   
 174              		.loc 1 149 0
 175 0084 174B     		ldr	r3, .L6+40
 176 0086 8022     		mov	r2, #128
 177 0088 1A70     		strb	r2, [r3]
 150:../Generated_Code/Cpu.c ****   /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
 151:../Generated_Code/Cpu.c ****   MCG_C5 = 0x00U;                                                   
 178              		.loc 1 151 0
 179 008a 154B     		ldr	r3, .L6+36
 180 008c 0022     		mov	r2, #0
 181 008e 1A71     		strb	r2, [r3, #4]
 152:../Generated_Code/Cpu.c ****   /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
 153:../Generated_Code/Cpu.c ****   MCG_C6 = 0x00U;                                                   
 182              		.loc 1 153 0
 183 0090 134B     		ldr	r3, .L6+36
 184 0092 0022     		mov	r2, #0
 185 0094 5A71     		strb	r2, [r3, #5]
 154:../Generated_Code/Cpu.c ****   while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock
 186              		.loc 1 154 0
 187 0096 C046     		mov	r8, r8
 188              	.L4:
 189              		.loc 1 154 0 is_stmt 0 discriminator 1
 190 0098 114B     		ldr	r3, .L6+36
 191 009a 9B79     		ldrb	r3, [r3, #6]
 192 009c DBB2     		uxtb	r3, r3
 193 009e 1A1C     		mov	r2, r3
 194 00a0 1023     		mov	r3, #16
 195 00a2 1340     		and	r3, r2
 196 00a4 F8D0     		beq	.L4
 155:../Generated_Code/Cpu.c ****   }
 156:../Generated_Code/Cpu.c ****   while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
 197              		.loc 1 156 0 is_stmt 1
 198 00a6 C046     		mov	r8, r8
 199              	.L5:
 200              		.loc 1 156 0 is_stmt 0 discriminator 1
 201 00a8 0D4B     		ldr	r3, .L6+36
 202 00aa 9B79     		ldrb	r3, [r3, #6]
 203 00ac DBB2     		uxtb	r3, r3
 204 00ae 1A1C     		mov	r2, r3
 205 00b0 0C23     		mov	r3, #12
 206 00b2 1340     		and	r3, r2
 207 00b4 F8D1     		bne	.L5
 157:../Generated_Code/Cpu.c ****   }
 158:../Generated_Code/Cpu.c ****   /*** End of PE initialization code after reset ***/
 159:../Generated_Code/Cpu.c **** 
 160:../Generated_Code/Cpu.c ****   /*** !!! Here you can place your own code after PE initialization using property "User code after
 161:../Generated_Code/Cpu.c **** 
 162:../Generated_Code/Cpu.c **** }
 208              		.loc 1 162 0 is_stmt 1
 209 00b6 BD46     		mov	sp, r7
 210              		@ sp needed for prologue
 211 00b8 80BD     		pop	{r7, pc}
 212              	.L7:
 213 00ba C046     		.align	2
 214              	.L6:
 215 00bc 00E000E0 		.word	-536813568
 216 00c0 00000000 		.word	__vect_table
 217 00c4 080D0000 		.word	3336
 218 00c8 00700440 		.word	1074032640
 219 00cc 38100000 		.word	4152
 220 00d0 44100000 		.word	4164
 221 00d4 04100000 		.word	4100
 222 00d8 FFFFFEFF 		.word	-65537
 223 00dc FFFFFFFC 		.word	-50331649
 224 00e0 00400640 		.word	1074151424
 225 00e4 00500640 		.word	1074155520
 226              		.cfi_endproc
 227              	.LFE2:
 229              		.section	.text.PE_low_level_init,"ax",%progbits
 230              		.align	2
 231              		.global	PE_low_level_init
 232              		.code	16
 233              		.thumb_func
 235              	PE_low_level_init:
 236              	.LFB3:
 163:../Generated_Code/Cpu.c **** 
 164:../Generated_Code/Cpu.c **** 
 165:../Generated_Code/Cpu.c **** 
 166:../Generated_Code/Cpu.c **** /*
 167:../Generated_Code/Cpu.c **** ** ===================================================================
 168:../Generated_Code/Cpu.c **** **     Method      :  PE_low_level_init (component MKL25Z128LK4)
 169:../Generated_Code/Cpu.c **** **
 170:../Generated_Code/Cpu.c **** **     Description :
 171:../Generated_Code/Cpu.c **** **         Initializes beans and provides common register initialization. 
 172:../Generated_Code/Cpu.c **** **         The method is called automatically as a part of the 
 173:../Generated_Code/Cpu.c **** **         application initialization code.
 174:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 175:../Generated_Code/Cpu.c **** ** ===================================================================
 176:../Generated_Code/Cpu.c **** */
 177:../Generated_Code/Cpu.c **** void PE_low_level_init(void)
 178:../Generated_Code/Cpu.c **** {
 237              		.loc 1 178 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              	.LCFI6:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 00AF     		add	r7, sp, #0
 245              	.LCFI7:
 246              		.cfi_def_cfa_register 7
 179:../Generated_Code/Cpu.c ****   #ifdef PEX_RTOS_INIT
 180:../Generated_Code/Cpu.c ****     PEX_RTOS_INIT();                   /* Initialization of the selected RTOS. Macro is defined by 
 247              		.loc 1 180 0
 248 0004 4B4B     		ldr	r3, .L11
 249 0006 181C     		mov	r0, r3
 250 0008 FFF7FEFF 		bl	_mqxlite_init
 251 000c 031C     		mov	r3, r0
 252 000e 00D0     		beq	.L9
 253              	.L10:
 254              		.loc 1 180 0 is_stmt 0 discriminator 1
 255 0010 FEE7     		b	.L10
 256              	.L9:
 181:../Generated_Code/Cpu.c ****   #endif
 182:../Generated_Code/Cpu.c ****   /* {MQXLite RTOS Adapter} Set new interrupt vector (function handler and ISR parameter) */
 183:../Generated_Code/Cpu.c ****       /* Initialization of the SIM module */
 184:../Generated_Code/Cpu.c ****   /* PORTA_PCR4: ISF=0,MUX=7 */
 185:../Generated_Code/Cpu.c ****   PORTA_PCR4 = (uint32_t)((PORTA_PCR4 & (uint32_t)~(uint32_t)(
 257              		.loc 1 185 0 is_stmt 1
 258 0012 494B     		ldr	r3, .L11+4
 259 0014 484A     		ldr	r2, .L11+4
 260 0016 1269     		ldr	r2, [r2, #16]
 261 0018 111C     		mov	r1, r2
 262 001a 484A     		ldr	r2, .L11+8
 263 001c 0A40     		and	r2, r1
 264 001e E021     		mov	r1, #224
 265 0020 C900     		lsl	r1, r1, #3
 266 0022 0A43     		orr	r2, r1
 267 0024 1A61     		str	r2, [r3, #16]
 186:../Generated_Code/Cpu.c ****                 PORT_PCR_ISF_MASK
 187:../Generated_Code/Cpu.c ****                )) | (uint32_t)(
 188:../Generated_Code/Cpu.c ****                 PORT_PCR_MUX(0x07)
 189:../Generated_Code/Cpu.c ****                ));                                                  
 190:../Generated_Code/Cpu.c ****         /* Initialization of the RCM module */
 191:../Generated_Code/Cpu.c ****   /* RCM_RPFW: RSTFLTSEL=0 */
 192:../Generated_Code/Cpu.c ****   RCM_RPFW &= (uint8_t)~(uint8_t)(RCM_RPFW_RSTFLTSEL(0x1F));                                       
 268              		.loc 1 192 0
 269 0026 464B     		ldr	r3, .L11+12
 270 0028 454A     		ldr	r2, .L11+12
 271 002a 5279     		ldrb	r2, [r2, #5]
 272 002c D2B2     		uxtb	r2, r2
 273 002e 1F21     		mov	r1, #31
 274 0030 8A43     		bic	r2, r1
 275 0032 D2B2     		uxtb	r2, r2
 276 0034 5A71     		strb	r2, [r3, #5]
 193:../Generated_Code/Cpu.c ****   /* RCM_RPFC: RSTFLTSS=0,RSTFLTSRW=0 */
 194:../Generated_Code/Cpu.c ****   RCM_RPFC &= (uint8_t)~(uint8_t)(
 277              		.loc 1 194 0
 278 0036 424B     		ldr	r3, .L11+12
 279 0038 414A     		ldr	r2, .L11+12
 280 003a 1279     		ldrb	r2, [r2, #4]
 281 003c D2B2     		uxtb	r2, r2
 282 003e 0721     		mov	r1, #7
 283 0040 8A43     		bic	r2, r1
 284 0042 D2B2     		uxtb	r2, r2
 285 0044 1A71     		strb	r2, [r3, #4]
 195:../Generated_Code/Cpu.c ****                RCM_RPFC_RSTFLTSS_MASK |
 196:../Generated_Code/Cpu.c ****                RCM_RPFC_RSTFLTSRW(0x03)
 197:../Generated_Code/Cpu.c ****               );                                                   
 198:../Generated_Code/Cpu.c ****         /* Initialization of the FTFL_FlashConfig module */
 199:../Generated_Code/Cpu.c ****       /* Initialization of the PMC module */
 200:../Generated_Code/Cpu.c ****   /* PMC_LVDSC1: LVDACK=1,LVDIE=0,LVDRE=1,LVDV=0 */
 201:../Generated_Code/Cpu.c ****   PMC_LVDSC1 = (uint8_t)((PMC_LVDSC1 & (uint8_t)~(uint8_t)(
 286              		.loc 1 201 0
 287 0046 3F4B     		ldr	r3, .L11+16
 288 0048 3E4A     		ldr	r2, .L11+16
 289 004a 1278     		ldrb	r2, [r2]
 290 004c D2B2     		uxtb	r2, r2
 291 004e D2B2     		uxtb	r2, r2
 292 0050 7321     		mov	r1, #115
 293 0052 8A43     		bic	r2, r1
 294 0054 D2B2     		uxtb	r2, r2
 295 0056 5021     		mov	r1, #80
 296 0058 0A43     		orr	r2, r1
 297 005a D2B2     		uxtb	r2, r2
 298 005c D2B2     		uxtb	r2, r2
 299 005e 1A70     		strb	r2, [r3]
 202:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDIE_MASK |
 203:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDV(0x03)
 204:../Generated_Code/Cpu.c ****                )) | (uint8_t)(
 205:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDACK_MASK |
 206:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDRE_MASK
 207:../Generated_Code/Cpu.c ****                ));                                                  
 208:../Generated_Code/Cpu.c ****   /* PMC_LVDSC2: LVWACK=1,LVWIE=0,LVWV=0 */
 209:../Generated_Code/Cpu.c ****   PMC_LVDSC2 = (uint8_t)((PMC_LVDSC2 & (uint8_t)~(uint8_t)(
 300              		.loc 1 209 0
 301 0060 384B     		ldr	r3, .L11+16
 302 0062 384A     		ldr	r2, .L11+16
 303 0064 5278     		ldrb	r2, [r2, #1]
 304 0066 D2B2     		uxtb	r2, r2
 305 0068 D2B2     		uxtb	r2, r2
 306 006a 6321     		mov	r1, #99
 307 006c 8A43     		bic	r2, r1
 308 006e D2B2     		uxtb	r2, r2
 309 0070 4021     		mov	r1, #64
 310 0072 0A43     		orr	r2, r1
 311 0074 D2B2     		uxtb	r2, r2
 312 0076 D2B2     		uxtb	r2, r2
 313 0078 5A70     		strb	r2, [r3, #1]
 210:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWIE_MASK |
 211:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWV(0x03)
 212:../Generated_Code/Cpu.c ****                )) | (uint8_t)(
 213:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWACK_MASK
 214:../Generated_Code/Cpu.c ****                ));                                                  
 215:../Generated_Code/Cpu.c ****   /* PMC_REGSC: BGEN=0,ACKISO=0,BGBE=0 */
 216:../Generated_Code/Cpu.c ****   PMC_REGSC &= (uint8_t)~(uint8_t)(
 314              		.loc 1 216 0
 315 007a 324B     		ldr	r3, .L11+16
 316 007c 314A     		ldr	r2, .L11+16
 317 007e 9278     		ldrb	r2, [r2, #2]
 318 0080 D2B2     		uxtb	r2, r2
 319 0082 1921     		mov	r1, #25
 320 0084 8A43     		bic	r2, r1
 321 0086 D2B2     		uxtb	r2, r2
 322 0088 9A70     		strb	r2, [r3, #2]
 217:../Generated_Code/Cpu.c ****                 PMC_REGSC_BGEN_MASK |
 218:../Generated_Code/Cpu.c ****                 PMC_REGSC_ACKISO_MASK |
 219:../Generated_Code/Cpu.c ****                 PMC_REGSC_BGBE_MASK
 220:../Generated_Code/Cpu.c ****                );                                                   
 221:../Generated_Code/Cpu.c ****   /* SMC_PMPROT: ??=0,??=0,AVLP=0,??=0,ALLS=0,??=0,AVLLS=0,??=0 */
 222:../Generated_Code/Cpu.c ****   SMC_PMPROT = 0x00U;                  /* Setup Power mode protection register */
 323              		.loc 1 222 0
 324 008a 2F4B     		ldr	r3, .L11+20
 325 008c 0022     		mov	r2, #0
 326 008e 1A70     		strb	r2, [r3]
 223:../Generated_Code/Cpu.c ****   /* Common initialization of the CPU registers */
 224:../Generated_Code/Cpu.c ****   /* PORTA_PCR20: ISF=0,MUX=7 */
 225:../Generated_Code/Cpu.c ****   PORTA_PCR20 = (uint32_t)((PORTA_PCR20 & (uint32_t)~(uint32_t)(
 327              		.loc 1 225 0
 328 0090 294B     		ldr	r3, .L11+4
 329 0092 294A     		ldr	r2, .L11+4
 330 0094 126D     		ldr	r2, [r2, #80]
 331 0096 111C     		mov	r1, r2
 332 0098 284A     		ldr	r2, .L11+8
 333 009a 0A40     		and	r2, r1
 334 009c E021     		mov	r1, #224
 335 009e C900     		lsl	r1, r1, #3
 336 00a0 0A43     		orr	r2, r1
 337 00a2 1A65     		str	r2, [r3, #80]
 226:../Generated_Code/Cpu.c ****                  PORT_PCR_ISF_MASK
 227:../Generated_Code/Cpu.c ****                 )) | (uint32_t)(
 228:../Generated_Code/Cpu.c ****                  PORT_PCR_MUX(0x07)
 229:../Generated_Code/Cpu.c ****                 ));                                                  
 230:../Generated_Code/Cpu.c ****   /* NVIC_IPR1: PRI_6=0 */
 231:../Generated_Code/Cpu.c ****   NVIC_IPR1 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_6(0xFF));                                         
 338              		.loc 1 231 0
 339 00a4 294A     		ldr	r2, .L11+24
 340 00a6 2949     		ldr	r1, .L11+24
 341 00a8 C123     		mov	r3, #193
 342 00aa 9B00     		lsl	r3, r3, #2
 343 00ac CB58     		ldr	r3, [r1, r3]
 344 00ae 191C     		mov	r1, r3
 345 00b0 274B     		ldr	r3, .L11+28
 346 00b2 1940     		and	r1, r3
 347 00b4 C123     		mov	r3, #193
 348 00b6 9B00     		lsl	r3, r3, #2
 349 00b8 D150     		str	r1, [r2, r3]
 232:../Generated_Code/Cpu.c ****   /* ### RingBufferUInt8 "RxBuf" init code ... */
 233:../Generated_Code/Cpu.c ****   RxBuf_Init();
 350              		.loc 1 233 0
 351 00ba FFF7FEFF 		bl	RxBuf_Init
 234:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be di
 235:../Generated_Code/Cpu.c ****   (void)BitIoLdd1_Init(NULL);
 352              		.loc 1 235 0
 353 00be 0020     		mov	r0, #0
 354 00c0 FFF7FEFF 		bl	BitIoLdd1_Init
 236:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be di
 237:../Generated_Code/Cpu.c ****   (void)BitIoLdd2_Init(NULL);
 355              		.loc 1 237 0
 356 00c4 0020     		mov	r0, #0
 357 00c6 FFF7FEFF 		bl	BitIoLdd2_Init
 238:../Generated_Code/Cpu.c ****   /* ### LED "LED1" init code ... */
 239:../Generated_Code/Cpu.c ****   LED1_Init(); /* initialize LED driver */
 358              		.loc 1 239 0
 359 00ca 224B     		ldr	r3, .L11+32
 360 00cc 1B69     		ldr	r3, [r3, #16]
 361 00ce 181C     		mov	r0, r3
 362 00d0 FFF7FEFF 		bl	BitIoLdd2_SetVal
 240:../Generated_Code/Cpu.c ****   /* ### PWM_LDD "PwmLdd1" component auto initialization. Auto initialization feature can be disabl
 241:../Generated_Code/Cpu.c ****   (void)PwmLdd1_Init(NULL);
 363              		.loc 1 241 0
 364 00d4 0020     		mov	r0, #0
 365 00d6 FFF7FEFF 		bl	PwmLdd1_Init
 242:../Generated_Code/Cpu.c ****   /* ### PWM "Inhr1" init code ... */
 243:../Generated_Code/Cpu.c ****   /* ### LED "LED2" init code ... */
 244:../Generated_Code/Cpu.c ****   LED2_Init(); /* initialize LED driver */
 366              		.loc 1 244 0
 367 00da 0020     		mov	r0, #0
 368 00dc FFF7FEFF 		bl	LED2_SetRatio16
 245:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd4" component auto initialization. Auto initialization feature can be di
 246:../Generated_Code/Cpu.c ****   (void)BitIoLdd4_Init(NULL);
 369              		.loc 1 246 0
 370 00e0 0020     		mov	r0, #0
 371 00e2 FFF7FEFF 		bl	BitIoLdd4_Init
 247:../Generated_Code/Cpu.c ****   /* ### PWM_LDD "PwmLdd2" component auto initialization. Auto initialization feature can be disabl
 248:../Generated_Code/Cpu.c ****   (void)PwmLdd2_Init(NULL);
 372              		.loc 1 248 0
 373 00e6 0020     		mov	r0, #0
 374 00e8 FFF7FEFF 		bl	PwmLdd2_Init
 249:../Generated_Code/Cpu.c ****   /* ### PWM "Inhr2" init code ... */
 250:../Generated_Code/Cpu.c ****   /* ### LED "LED3" init code ... */
 251:../Generated_Code/Cpu.c ****   LED3_Init(); /* initialize LED driver */
 375              		.loc 1 251 0
 376 00ec 194B     		ldr	r3, .L11+32
 377 00ee 1B6A     		ldr	r3, [r3, #32]
 378 00f0 181C     		mov	r0, r3
 379 00f2 FFF7FEFF 		bl	BitIoLdd4_SetVal
 252:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd5" component auto initialization. Auto initialization feature can be di
 253:../Generated_Code/Cpu.c ****   (void)BitIoLdd5_Init(NULL);
 380              		.loc 1 253 0
 381 00f6 0020     		mov	r0, #0
 382 00f8 FFF7FEFF 		bl	BitIoLdd5_Init
 254:../Generated_Code/Cpu.c ****   /* ### LED "MF01" init code ... */
 255:../Generated_Code/Cpu.c ****   MF01_Init(); /* initialize LED driver */
 383              		.loc 1 255 0
 384 00fc 154B     		ldr	r3, .L11+32
 385 00fe 9B6A     		ldr	r3, [r3, #40]
 386 0100 181C     		mov	r0, r3
 387 0102 FFF7FEFF 		bl	BitIoLdd5_SetVal
 256:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd6" component auto initialization. Auto initialization feature can be di
 257:../Generated_Code/Cpu.c ****   (void)BitIoLdd6_Init(NULL);
 388              		.loc 1 257 0
 389 0106 0020     		mov	r0, #0
 390 0108 FFF7FEFF 		bl	BitIoLdd6_Init
 258:../Generated_Code/Cpu.c ****   /* ### LED "MF02" init code ... */
 259:../Generated_Code/Cpu.c ****   MF02_Init(); /* initialize LED driver */
 391              		.loc 1 259 0
 392 010c 114B     		ldr	r3, .L11+32
 393 010e DB6A     		ldr	r3, [r3, #44]
 394 0110 181C     		mov	r0, r3
 395 0112 FFF7FEFF 		bl	BitIoLdd6_SetVal
 260:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd7" component auto initialization. Auto initialization feature can be di
 261:../Generated_Code/Cpu.c ****   (void)BitIoLdd7_Init(NULL);
 396              		.loc 1 261 0
 397 0116 0020     		mov	r0, #0
 398 0118 FFF7FEFF 		bl	BitIoLdd7_Init
 262:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd8" component auto initialization. Auto initialization feature can be di
 263:../Generated_Code/Cpu.c ****   (void)BitIoLdd8_Init(NULL);
 399              		.loc 1 263 0
 400 011c 0020     		mov	r0, #0
 401 011e FFF7FEFF 		bl	BitIoLdd8_Init
 264:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd9" component auto initialization. Auto initialization feature can be di
 265:../Generated_Code/Cpu.c ****   (void)BitIoLdd9_Init(NULL);
 402              		.loc 1 265 0
 403 0122 0020     		mov	r0, #0
 404 0124 FFF7FEFF 		bl	BitIoLdd9_Init
 266:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd10" component auto initialization. Auto initialization feature can be d
 267:../Generated_Code/Cpu.c ****   (void)BitIoLdd10_Init(NULL);
 405              		.loc 1 267 0
 406 0128 0020     		mov	r0, #0
 407 012a FFF7FEFF 		bl	BitIoLdd10_Init
 268:../Generated_Code/Cpu.c **** }
 408              		.loc 1 268 0
 409 012e BD46     		mov	sp, r7
 410              		@ sp needed for prologue
 411 0130 80BD     		pop	{r7, pc}
 412              	.L12:
 413 0132 C046     		.align	2
 414              	.L11:
 415 0134 00000000 		.word	MQX_init_struct
 416 0138 00900440 		.word	1074040832
 417 013c FFF8FFFE 		.word	-16779009
 418 0140 00F00740 		.word	1074262016
 419 0144 00D00740 		.word	1074253824
 420 0148 00E00740 		.word	1074257920
 421 014c 00E100E0 		.word	-536813312
 422 0150 FFFF00FF 		.word	-16711681
 423 0154 00000000 		.word	PE_LDD_DeviceDataList
 424              		.cfi_endproc
 425              	.LFE3:
 427              		.global	_cfm
 428              		.section	.cfmconfig,"a",%progbits
 429              		.align	2
 432              	_cfm:
 433 0000 FF       		.byte	-1
 434 0001 FF       		.byte	-1
 435 0002 FF       		.byte	-1
 436 0003 FF       		.byte	-1
 437 0004 FF       		.byte	-1
 438 0005 FF       		.byte	-1
 439 0006 FF       		.byte	-1
 440 0007 FF       		.byte	-1
 441 0008 FF       		.byte	-1
 442 0009 FF       		.byte	-1
 443 000a FF       		.byte	-1
 444 000b FF       		.byte	-1
 445 000c 7E       		.byte	126
 446 000d FF       		.byte	-1
 447 000e FF       		.byte	-1
 448 000f FF       		.byte	-1
 449              		.text
 450              	.Letext0:
 451              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 452              		.file 3 "../Generated_Code/IO_Map.h"
 453              		.file 4 "../Generated_Code/Cpu.h"
 454              		.file 5 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/MQXLITE/psp/cortex_m/psptypes.
 455              		.file 6 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/MQXLITE/include/mqxlite.h"
 456              		.file 7 "../Generated_Code/PE_LDD.h"
 457              		.file 8 "../Generated_Code/MQX1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Cpu.c
                            *COM*:00000001 SR_reg
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:22     .bss.SR_lock:00000000 SR_lock
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:23     .bss.SR_lock:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:25     .text.Cpu_INT_NMIInterrupt:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:30     .text.Cpu_INT_NMIInterrupt:00000000 Cpu_INT_NMIInterrupt
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:53     .text.Cpu_Interrupt:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:58     .text.Cpu_Interrupt:00000000 Cpu_Interrupt
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:83     .text.__init_hardware:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:88     .text.__init_hardware:00000000 __init_hardware
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:215    .text.__init_hardware:000000bc $d
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:230    .text.PE_low_level_init:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:235    .text.PE_low_level_init:00000000 PE_low_level_init
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:415    .text.PE_low_level_init:00000134 $d
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:432    .cfmconfig:00000000 _cfm
C:\Users\LARM\AppData\Local\Temp\ccKsd96L.s:429    .cfmconfig:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Cpu_OnNMIINT
__vect_table
_mqxlite_init
RxBuf_Init
BitIoLdd1_Init
BitIoLdd2_Init
BitIoLdd2_SetVal
PwmLdd1_Init
LED2_SetRatio16
BitIoLdd4_Init
PwmLdd2_Init
BitIoLdd4_SetVal
BitIoLdd5_Init
BitIoLdd5_SetVal
BitIoLdd6_Init
BitIoLdd6_SetVal
BitIoLdd7_Init
BitIoLdd8_Init
BitIoLdd9_Init
BitIoLdd10_Init
MQX_init_struct
PE_LDD_DeviceDataList
