   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ChannelDevice,"a",%progbits
  18              		.align	2
  21              	ChannelDevice:
  22 0000 04       		.byte	4
  23 0001 05       		.byte	5
  24 0002 0000     		.section	.rodata.ChannelMode,"a",%progbits
  25              		.align	2
  28              	ChannelMode:
  29 0000 01       		.byte	1
  30 0001 01       		.byte	1
  31 0002 0000     		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  32              		.align	2
  35              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  36 0000 00000000 		.space	16
  36      00000000 
  36      00000000 
  36      00000000 
  37              		.section	.text.TU1_Init,"ax",%progbits
  38              		.align	2
  39              		.global	TU1_Init
  40              		.code	16
  41              		.thumb_func
  43              	TU1_Init:
  44              	.LFB0:
  45              		.file 1 "../Generated_Code/TU1.c"
   1:../Generated_Code/TU1.c **** /** ###################################################################
   2:../Generated_Code/TU1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU1.c **** **     Filename    : TU1.c
   4:../Generated_Code/TU1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU1.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.000
   8:../Generated_Code/TU1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU1.c **** **     Date/Time   : 2013-09-10, 10:17, # CodeGen: 54
  10:../Generated_Code/TU1.c **** **     Abstract    :
  11:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU1.c **** **     Settings    :
  14:../Generated_Code/TU1.c **** **          Component name                                 : TU1
  15:../Generated_Code/TU1.c **** **          Module name                                    : TPM0
  16:../Generated_Code/TU1.c **** **          Counter                                        : TPM0_CNT
  17:../Generated_Code/TU1.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU1.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU1.c **** **          Value type                                     : Optimal
  20:../Generated_Code/TU1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU1.c **** **            Counter frequency                            : 2.62144 MHz
  22:../Generated_Code/TU1.c **** **          Counter restart                                : On-overrun
  23:../Generated_Code/TU1.c **** **            Overrun period                               : Auto select
  24:../Generated_Code/TU1.c **** **            Interrupt                                    : Enabled
  25:../Generated_Code/TU1.c **** **              Interrupt                                  : INT_TPM0
  26:../Generated_Code/TU1.c **** **              Interrupt priority                         : medium priority
  27:../Generated_Code/TU1.c **** **          Channel list                                   : 2
  28:../Generated_Code/TU1.c **** **            Channel 0                                    : 
  29:../Generated_Code/TU1.c **** **              Mode                                       : Capture
  30:../Generated_Code/TU1.c **** **                Capture                                  : TPM0_C4V
  31:../Generated_Code/TU1.c **** **                Capture input pin                        : PTD4/LLWU_P14/SPI1_PCS0/UART2_RX/TPM0_
  32:../Generated_Code/TU1.c **** **                Capture input signal                     : US_Echo_D2
  33:../Generated_Code/TU1.c **** **                Edge                                     : both edges
  34:../Generated_Code/TU1.c **** **                Maximum time of event                    : 25.00001792 ms
  35:../Generated_Code/TU1.c **** **                Interrupt                                : Enabled
  36:../Generated_Code/TU1.c **** **                  Interrupt                              : INT_TPM0
  37:../Generated_Code/TU1.c **** **                  Interrupt priority                     : medium priority
  38:../Generated_Code/TU1.c **** **            Channel 1                                    : 
  39:../Generated_Code/TU1.c **** **              Mode                                       : Capture
  40:../Generated_Code/TU1.c **** **                Capture                                  : TPM0_C5V
  41:../Generated_Code/TU1.c **** **                Capture input pin                        : ADC0_SE6b/PTD5/SPI1_SCK/UART2_TX/TPM0_
  42:../Generated_Code/TU1.c **** **                Capture input signal                     : 
  43:../Generated_Code/TU1.c **** **                Edge                                     : both edges
  44:../Generated_Code/TU1.c **** **                Maximum time of event                    : 25.00001792 ms
  45:../Generated_Code/TU1.c **** **                Interrupt                                : Enabled
  46:../Generated_Code/TU1.c **** **                  Interrupt                              : INT_TPM0
  47:../Generated_Code/TU1.c **** **                  Interrupt priority                     : medium priority
  48:../Generated_Code/TU1.c **** **          Initialization                                 : 
  49:../Generated_Code/TU1.c **** **            Enabled in init. code                        : yes
  50:../Generated_Code/TU1.c **** **            Auto initialization                          : no
  51:../Generated_Code/TU1.c **** **            Event mask                                   : 
  52:../Generated_Code/TU1.c **** **              OnCounterRestart                           : Enabled
  53:../Generated_Code/TU1.c **** **              OnChannel0                                 : Enabled
  54:../Generated_Code/TU1.c **** **              OnChannel1                                 : Enabled
  55:../Generated_Code/TU1.c **** **              OnChannel2                                 : Disabled
  56:../Generated_Code/TU1.c **** **              OnChannel3                                 : Disabled
  57:../Generated_Code/TU1.c **** **              OnChannel4                                 : Disabled
  58:../Generated_Code/TU1.c **** **              OnChannel5                                 : Disabled
  59:../Generated_Code/TU1.c **** **              OnChannel6                                 : Disabled
  60:../Generated_Code/TU1.c **** **              OnChannel7                                 : Disabled
  61:../Generated_Code/TU1.c **** **          CPU clock/configuration selection              : 
  62:../Generated_Code/TU1.c **** **            Clock configuration 0                        : This component enabled
  63:../Generated_Code/TU1.c **** **            Clock configuration 1                        : This component disabled
  64:../Generated_Code/TU1.c **** **            Clock configuration 2                        : This component disabled
  65:../Generated_Code/TU1.c **** **            Clock configuration 3                        : This component disabled
  66:../Generated_Code/TU1.c **** **            Clock configuration 4                        : This component disabled
  67:../Generated_Code/TU1.c **** **            Clock configuration 5                        : This component disabled
  68:../Generated_Code/TU1.c **** **            Clock configuration 6                        : This component disabled
  69:../Generated_Code/TU1.c **** **            Clock configuration 7                        : This component disabled
  70:../Generated_Code/TU1.c **** **     Contents    :
  71:../Generated_Code/TU1.c **** **         Init            - LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr);
  72:../Generated_Code/TU1.c **** **         Deinit          - void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  73:../Generated_Code/TU1.c **** **         ResetCounter    - LDD_TError TU1_ResetCounter(LDD_TDeviceData *DeviceDataPtr);
  74:../Generated_Code/TU1.c **** **         GetCaptureValue - LDD_TError TU1_GetCaptureValue(LDD_TDeviceData *DeviceDataPtr, uint8_t
  75:../Generated_Code/TU1.c **** **
  76:../Generated_Code/TU1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  77:../Generated_Code/TU1.c **** **     
  78:../Generated_Code/TU1.c **** **     http      : www.freescale.com
  79:../Generated_Code/TU1.c **** **     mail      : support@freescale.com
  80:../Generated_Code/TU1.c **** ** ###################################################################*/
  81:../Generated_Code/TU1.c **** 
  82:../Generated_Code/TU1.c **** /* MODULE TU1. */
  83:../Generated_Code/TU1.c **** 
  84:../Generated_Code/TU1.c **** #include "Events.h"
  85:../Generated_Code/TU1.c **** #include "TU1.h"
  86:../Generated_Code/TU1.c **** /* MQX Lite include files */
  87:../Generated_Code/TU1.c **** #include "mqxlite.h"
  88:../Generated_Code/TU1.c **** #include "mqxlite_prv.h"
  89:../Generated_Code/TU1.c **** #include "IO_Map.h"
  90:../Generated_Code/TU1.c **** 
  91:../Generated_Code/TU1.c **** /* List of channels used by component */
  92:../Generated_Code/TU1.c **** static const uint8_t ChannelDevice[TU1_NUMBER_OF_CHANNELS] = {0x04U,0x05U};
  93:../Generated_Code/TU1.c **** 
  94:../Generated_Code/TU1.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
  95:../Generated_Code/TU1.c **** static const uint8_t ChannelMode[TU1_NUMBER_OF_CHANNELS] = {0x01U,0x01U};
  96:../Generated_Code/TU1.c **** 
  97:../Generated_Code/TU1.c **** 
  98:../Generated_Code/TU1.c **** typedef struct {
  99:../Generated_Code/TU1.c ****   LDD_RTOS_TISRVectorSettings SavedISRSettings_TUInterrupt; /* {MQXLite RTOS Adapter} Saved setting
 100:../Generated_Code/TU1.c ****   LDD_TEventMask EnEvents;             /* Enable/Disable events mask */
 101:../Generated_Code/TU1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 102:../Generated_Code/TU1.c **** } TU1_TDeviceData;
 103:../Generated_Code/TU1.c **** 
 104:../Generated_Code/TU1.c **** typedef TU1_TDeviceData *TU1_TDeviceDataPtr; /* Pointer to the device data structure. */
 105:../Generated_Code/TU1.c **** 
 106:../Generated_Code/TU1.c **** /* {MQXLite RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 107:../Generated_Code/TU1.c **** static TU1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 108:../Generated_Code/TU1.c **** 
 109:../Generated_Code/TU1.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_CHANNEL_0 | LDD_TIMERUNIT_ON_CHANNE
 110:../Generated_Code/TU1.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU1_CHANNEL_0_PIN | TU1_CHANNEL_1_PIN)
 111:../Generated_Code/TU1.c **** #define LAST_CHANNEL 0x01U
 112:../Generated_Code/TU1.c **** 
 113:../Generated_Code/TU1.c **** /* Internal method prototypes */
 114:../Generated_Code/TU1.c **** /*
 115:../Generated_Code/TU1.c **** ** ===================================================================
 116:../Generated_Code/TU1.c **** **     Method      :  TU1_Init (component TimerUnit_LDD)
 117:../Generated_Code/TU1.c **** **
 118:../Generated_Code/TU1.c **** **     Description :
 119:../Generated_Code/TU1.c **** **         Initializes the device. Allocates memory for the device data
 120:../Generated_Code/TU1.c **** **         structure, allocates interrupt vectors and sets interrupt
 121:../Generated_Code/TU1.c **** **         priority, sets pin routing, sets timing, etc. If the
 122:../Generated_Code/TU1.c **** **         property <"Enable in init. code"> is set to "yes" value then
 123:../Generated_Code/TU1.c **** **         the device is also enabled (see the description of the
 124:../Generated_Code/TU1.c **** **         <Enable> method). In this case the <Enable> method is not
 125:../Generated_Code/TU1.c **** **         necessary and needn't to be generated. This method can be
 126:../Generated_Code/TU1.c **** **         called only once. Before the second call of Init the <Deinit>
 127:../Generated_Code/TU1.c **** **         must be called first.
 128:../Generated_Code/TU1.c **** **     Parameters  :
 129:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 130:../Generated_Code/TU1.c **** **       * UserDataPtr     - Pointer to the user or
 131:../Generated_Code/TU1.c **** **                           RTOS specific data. This pointer will be
 132:../Generated_Code/TU1.c **** **                           passed as an event or callback parameter.
 133:../Generated_Code/TU1.c **** **     Returns     :
 134:../Generated_Code/TU1.c **** **         ---             - Pointer to the dynamically allocated
 135:../Generated_Code/TU1.c **** **                           private structure or NULL if there was an
 136:../Generated_Code/TU1.c **** **                           error.
 137:../Generated_Code/TU1.c **** ** ===================================================================
 138:../Generated_Code/TU1.c **** */
 139:../Generated_Code/TU1.c **** LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
 140:../Generated_Code/TU1.c **** {
  46              		.loc 1 140 0
  47              		.cfi_startproc
  48 0000 80B5     		push	{r7, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 84B0     		sub	sp, sp, #16
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 24
  56 0004 00AF     		add	r7, sp, #0
  57              	.LCFI2:
  58              		.cfi_def_cfa_register 7
  59 0006 7860     		str	r0, [r7, #4]
 141:../Generated_Code/TU1.c ****   /* Allocate device structure */
 142:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv;
 143:../Generated_Code/TU1.c ****   /* {MQXLite RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 144:../Generated_Code/TU1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  60              		.loc 1 144 0
  61 0008 3A4B     		ldr	r3, .L2
  62 000a FB60     		str	r3, [r7, #12]
 145:../Generated_Code/TU1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  63              		.loc 1 145 0
  64 000c FB68     		ldr	r3, [r7, #12]
  65 000e 7A68     		ldr	r2, [r7, #4]
  66 0010 DA60     		str	r2, [r3, #12]
 146:../Generated_Code/TU1.c ****   /* Interrupt vector(s) allocation */
 147:../Generated_Code/TU1.c ****   /* {MQXLite RTOS Adapter} Save old and set new interrupt vector (function handler and ISR paramet
 148:../Generated_Code/TU1.c ****   /* Note: Exception handler for interrupt is not saved, because it is not modified */
 149:../Generated_Code/TU1.c ****   DeviceDataPrv->SavedISRSettings_TUInterrupt.isrData = _int_get_isr_data(LDD_ivIndex_INT_TPM0);
  67              		.loc 1 149 0
  68 0012 2120     		mov	r0, #33
  69 0014 FFF7FEFF 		bl	_int_get_isr_data
  70 0018 021C     		mov	r2, r0
  71 001a FB68     		ldr	r3, [r7, #12]
  72 001c 5A60     		str	r2, [r3, #4]
 150:../Generated_Code/TU1.c ****   DeviceDataPrv->SavedISRSettings_TUInterrupt.isrFunction = _int_install_isr(LDD_ivIndex_INT_TPM0, 
  73              		.loc 1 150 0
  74 001e 364A     		ldr	r2, .L2+4
  75 0020 FB68     		ldr	r3, [r7, #12]
  76 0022 2120     		mov	r0, #33
  77 0024 111C     		mov	r1, r2
  78 0026 1A1C     		mov	r2, r3
  79 0028 FFF7FEFF 		bl	_int_install_isr
  80 002c 021C     		mov	r2, r0
  81 002e FB68     		ldr	r3, [r7, #12]
  82 0030 1A60     		str	r2, [r3]
 151:../Generated_Code/TU1.c ****   /* SIM_SCGC6: TPM0=1 */
 152:../Generated_Code/TU1.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;                                                   
  83              		.loc 1 152 0
  84 0032 324A     		ldr	r2, .L2+8
  85 0034 3149     		ldr	r1, .L2+8
  86 0036 324B     		ldr	r3, .L2+12
  87 0038 CB58     		ldr	r3, [r1, r3]
  88 003a 8021     		mov	r1, #128
  89 003c 4904     		lsl	r1, r1, #17
  90 003e 1943     		orr	r1, r3
  91 0040 2F4B     		ldr	r3, .L2+12
  92 0042 D150     		str	r1, [r2, r3]
 153:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 154:../Generated_Code/TU1.c ****   TPM0_SC = 0x00U;                     /* Clear status and control register */
  93              		.loc 1 154 0
  94 0044 2F4B     		ldr	r3, .L2+16
  95 0046 0022     		mov	r2, #0
  96 0048 1A60     		str	r2, [r3]
 155:../Generated_Code/TU1.c ****   /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 156:../Generated_Code/TU1.c ****   TPM0_CNT = 0x00U;                    /* Reset counter register */
  97              		.loc 1 156 0
  98 004a 2E4B     		ldr	r3, .L2+16
  99 004c 0022     		mov	r2, #0
 100 004e 5A60     		str	r2, [r3, #4]
 157:../Generated_Code/TU1.c ****   /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 158:../Generated_Code/TU1.c ****   TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
 101              		.loc 1 158 0
 102 0050 2C4B     		ldr	r3, .L2+16
 103 0052 0022     		mov	r2, #0
 104 0054 DA60     		str	r2, [r3, #12]
 159:../Generated_Code/TU1.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 160:../Generated_Code/TU1.c ****   TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
 105              		.loc 1 160 0
 106 0056 2B4B     		ldr	r3, .L2+16
 107 0058 0022     		mov	r2, #0
 108 005a 5A61     		str	r2, [r3, #20]
 161:../Generated_Code/TU1.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 162:../Generated_Code/TU1.c ****   TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
 109              		.loc 1 162 0
 110 005c 294B     		ldr	r3, .L2+16
 111 005e 0022     		mov	r2, #0
 112 0060 DA61     		str	r2, [r3, #28]
 163:../Generated_Code/TU1.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 164:../Generated_Code/TU1.c ****   TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
 113              		.loc 1 164 0
 114 0062 284B     		ldr	r3, .L2+16
 115 0064 0022     		mov	r2, #0
 116 0066 5A62     		str	r2, [r3, #36]
 165:../Generated_Code/TU1.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 166:../Generated_Code/TU1.c ****   TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
 117              		.loc 1 166 0
 118 0068 264B     		ldr	r3, .L2+16
 119 006a 0022     		mov	r2, #0
 120 006c DA62     		str	r2, [r3, #44]
 167:../Generated_Code/TU1.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 168:../Generated_Code/TU1.c ****   TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 121              		.loc 1 168 0
 122 006e 254B     		ldr	r3, .L2+16
 123 0070 0022     		mov	r2, #0
 124 0072 5A63     		str	r2, [r3, #52]
 169:../Generated_Code/TU1.c ****   /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 170:../Generated_Code/TU1.c ****   TPM0_MOD = TPM_MOD_MOD(0xFFFF);      /* Set up modulo register */
 125              		.loc 1 170 0
 126 0074 234B     		ldr	r3, .L2+16
 127 0076 244A     		ldr	r2, .L2+20
 128 0078 9A60     		str	r2, [r3, #8]
 171:../Generated_Code/TU1.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 172:../Generated_Code/TU1.c ****   TPM0_C4SC = (TPM_CnSC_CHIE_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel sta
 129              		.loc 1 172 0
 130 007a 224B     		ldr	r3, .L2+16
 131 007c 4C22     		mov	r2, #76
 132 007e DA62     		str	r2, [r3, #44]
 173:../Generated_Code/TU1.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 174:../Generated_Code/TU1.c ****   TPM0_C5SC = (TPM_CnSC_CHIE_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel sta
 133              		.loc 1 174 0
 134 0080 204B     		ldr	r3, .L2+16
 135 0082 4C22     		mov	r2, #76
 136 0084 5A63     		str	r2, [r3, #52]
 175:../Generated_Code/TU1.c ****   /* PORTD_PCR4: ISF=0,MUX=4 */
 176:../Generated_Code/TU1.c ****   PORTD_PCR4 = (uint32_t)((PORTD_PCR4 & (uint32_t)~(uint32_t)(
 137              		.loc 1 176 0
 138 0086 214B     		ldr	r3, .L2+24
 139 0088 204A     		ldr	r2, .L2+24
 140 008a 1269     		ldr	r2, [r2, #16]
 141 008c 111C     		mov	r1, r2
 142 008e 204A     		ldr	r2, .L2+28
 143 0090 0A40     		and	r2, r1
 144 0092 8021     		mov	r1, #128
 145 0094 C900     		lsl	r1, r1, #3
 146 0096 0A43     		orr	r2, r1
 147 0098 1A61     		str	r2, [r3, #16]
 177:../Generated_Code/TU1.c ****                 PORT_PCR_ISF_MASK |
 178:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x03)
 179:../Generated_Code/TU1.c ****                )) | (uint32_t)(
 180:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x04)
 181:../Generated_Code/TU1.c ****                ));                                                  
 182:../Generated_Code/TU1.c ****   /* PORTD_PCR5: ISF=0,MUX=4 */
 183:../Generated_Code/TU1.c ****   PORTD_PCR5 = (uint32_t)((PORTD_PCR5 & (uint32_t)~(uint32_t)(
 148              		.loc 1 183 0
 149 009a 1C4B     		ldr	r3, .L2+24
 150 009c 1B4A     		ldr	r2, .L2+24
 151 009e 5269     		ldr	r2, [r2, #20]
 152 00a0 111C     		mov	r1, r2
 153 00a2 1B4A     		ldr	r2, .L2+28
 154 00a4 0A40     		and	r2, r1
 155 00a6 8021     		mov	r1, #128
 156 00a8 C900     		lsl	r1, r1, #3
 157 00aa 0A43     		orr	r2, r1
 158 00ac 5A61     		str	r2, [r3, #20]
 184:../Generated_Code/TU1.c ****                 PORT_PCR_ISF_MASK |
 185:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x03)
 186:../Generated_Code/TU1.c ****                )) | (uint32_t)(
 187:../Generated_Code/TU1.c ****                 PORT_PCR_MUX(0x04)
 188:../Generated_Code/TU1.c ****                ));                                                  
 189:../Generated_Code/TU1.c ****   DeviceDataPrv->EnEvents = 0x0103U;   /* Enable selected events */
 159              		.loc 1 189 0
 160 00ae FB68     		ldr	r3, [r7, #12]
 161 00b0 184A     		ldr	r2, .L2+32
 162 00b2 9A60     		str	r2, [r3, #8]
 190:../Generated_Code/TU1.c ****   /* NVIC_IPR4: PRI_17=0x80 */
 191:../Generated_Code/TU1.c ****   NVIC_IPR4 = (uint32_t)((NVIC_IPR4 & (uint32_t)~(uint32_t)(
 163              		.loc 1 191 0
 164 00b4 184A     		ldr	r2, .L2+36
 165 00b6 1849     		ldr	r1, .L2+36
 166 00b8 C423     		mov	r3, #196
 167 00ba 9B00     		lsl	r3, r3, #2
 168 00bc CB58     		ldr	r3, [r1, r3]
 169 00be 191C     		mov	r1, r3
 170 00c0 164B     		ldr	r3, .L2+40
 171 00c2 0B40     		and	r3, r1
 172 00c4 8021     		mov	r1, #128
 173 00c6 0902     		lsl	r1, r1, #8
 174 00c8 1943     		orr	r1, r3
 175 00ca C423     		mov	r3, #196
 176 00cc 9B00     		lsl	r3, r3, #2
 177 00ce D150     		str	r1, [r2, r3]
 192:../Generated_Code/TU1.c ****                NVIC_IP_PRI_17(0x7F)
 193:../Generated_Code/TU1.c ****               )) | (uint32_t)(
 194:../Generated_Code/TU1.c ****                NVIC_IP_PRI_17(0x80)
 195:../Generated_Code/TU1.c ****               ));                                                  
 196:../Generated_Code/TU1.c ****   /* NVIC_ISER: SETENA|=0x00020000 */
 197:../Generated_Code/TU1.c ****   NVIC_ISER |= NVIC_ISER_SETENA(0x00020000);                                                   
 178              		.loc 1 197 0
 179 00d0 114B     		ldr	r3, .L2+36
 180 00d2 114A     		ldr	r2, .L2+36
 181 00d4 1268     		ldr	r2, [r2]
 182 00d6 8021     		mov	r1, #128
 183 00d8 8902     		lsl	r1, r1, #10
 184 00da 0A43     		orr	r2, r1
 185 00dc 1A60     		str	r2, [r3]
 198:../Generated_Code/TU1.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 199:../Generated_Code/TU1.c ****   TPM0_SC = (TPM_SC_TOIE_MASK | TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control 
 186              		.loc 1 199 0
 187 00de 094B     		ldr	r3, .L2+16
 188 00e0 4B22     		mov	r2, #75
 189 00e2 1A60     		str	r2, [r3]
 200:../Generated_Code/TU1.c ****   /* Registration of the device structure */
 201:../Generated_Code/TU1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
 190              		.loc 1 201 0
 191 00e4 0E4B     		ldr	r3, .L2+44
 192 00e6 FA68     		ldr	r2, [r7, #12]
 193 00e8 DA60     		str	r2, [r3, #12]
 202:../Generated_Code/TU1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 194              		.loc 1 202 0
 195 00ea FB68     		ldr	r3, [r7, #12]
 203:../Generated_Code/TU1.c **** }
 196              		.loc 1 203 0
 197 00ec 181C     		mov	r0, r3
 198 00ee BD46     		mov	sp, r7
 199 00f0 04B0     		add	sp, sp, #16
 200              		@ sp needed for prologue
 201 00f2 80BD     		pop	{r7, pc}
 202              	.L3:
 203              		.align	2
 204              	.L2:
 205 00f4 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 206 00f8 00000000 		.word	TU1_Interrupt
 207 00fc 00700440 		.word	1074032640
 208 0100 3C100000 		.word	4156
 209 0104 00800340 		.word	1073971200
 210 0108 FFFF0000 		.word	65535
 211 010c 00C00440 		.word	1074053120
 212 0110 FFF8FFFE 		.word	-16779009
 213 0114 03010000 		.word	259
 214 0118 00E100E0 		.word	-536813312
 215 011c FF00FFFF 		.word	-65281
 216 0120 00000000 		.word	PE_LDD_DeviceDataList
 217              		.cfi_endproc
 218              	.LFE0:
 220              		.section	.text.TU1_Deinit,"ax",%progbits
 221              		.align	2
 222              		.global	TU1_Deinit
 223              		.code	16
 224              		.thumb_func
 226              	TU1_Deinit:
 227              	.LFB1:
 204:../Generated_Code/TU1.c **** 
 205:../Generated_Code/TU1.c **** /*
 206:../Generated_Code/TU1.c **** ** ===================================================================
 207:../Generated_Code/TU1.c **** **     Method      :  TU1_Deinit (component TimerUnit_LDD)
 208:../Generated_Code/TU1.c **** **
 209:../Generated_Code/TU1.c **** **     Description :
 210:../Generated_Code/TU1.c **** **         Deinitializes the device. Switches off the device, frees the
 211:../Generated_Code/TU1.c **** **         device data structure memory, interrupts vectors, etc.
 212:../Generated_Code/TU1.c **** **     Parameters  :
 213:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 214:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 215:../Generated_Code/TU1.c **** **                           pointer returned by Init method
 216:../Generated_Code/TU1.c **** **     Returns     : Nothing
 217:../Generated_Code/TU1.c **** ** ===================================================================
 218:../Generated_Code/TU1.c **** */
 219:../Generated_Code/TU1.c **** void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 220:../Generated_Code/TU1.c **** {
 228              		.loc 1 220 0
 229              		.cfi_startproc
 230 0000 80B5     		push	{r7, lr}
 231              	.LCFI3:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 84B0     		sub	sp, sp, #16
 236              	.LCFI4:
 237              		.cfi_def_cfa_offset 24
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI5:
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
 221:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv = (TU1_TDeviceData *)DeviceDataPtr;
 242              		.loc 1 221 0
 243 0008 7B68     		ldr	r3, [r7, #4]
 244 000a FB60     		str	r3, [r7, #12]
 222:../Generated_Code/TU1.c **** 
 223:../Generated_Code/TU1.c ****   (void)DeviceDataPrv;
 224:../Generated_Code/TU1.c ****   TPM_PDD_SelectPrescalerSource(TPM0_BASE_PTR, TPM_PDD_DISABLED);
 245              		.loc 1 224 0
 246 000c 0A4B     		ldr	r3, .L5
 247 000e 0A4A     		ldr	r2, .L5
 248 0010 1268     		ldr	r2, [r2]
 249 0012 9821     		mov	r1, #152
 250 0014 8A43     		bic	r2, r1
 251 0016 1A60     		str	r2, [r3]
 225:../Generated_Code/TU1.c ****   /* Interrupt vector(s) deallocation */
 226:../Generated_Code/TU1.c ****   /* {MQXLite RTOS Adapter} Restore interrupt vector (function handler and ISR parameter) */
 227:../Generated_Code/TU1.c ****   /* Note: Exception handler for interrupt is not restored, because it was not modified */
 228:../Generated_Code/TU1.c ****   (void)_int_install_isr(LDD_ivIndex_INT_TPM0, ((TU1_TDeviceDataPtr)DeviceDataPrv)->SavedISRSetting
 252              		.loc 1 228 0
 253 0018 FB68     		ldr	r3, [r7, #12]
 254 001a 1A68     		ldr	r2, [r3]
 255 001c FB68     		ldr	r3, [r7, #12]
 256 001e 5B68     		ldr	r3, [r3, #4]
 257 0020 2120     		mov	r0, #33
 258 0022 111C     		mov	r1, r2
 259 0024 1A1C     		mov	r2, r3
 260 0026 FFF7FEFF 		bl	_int_install_isr
 229:../Generated_Code/TU1.c ****   /* Unregistration of the device structure */
 230:../Generated_Code/TU1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID);
 261              		.loc 1 230 0
 262 002a 044B     		ldr	r3, .L5+4
 263 002c 0022     		mov	r2, #0
 264 002e DA60     		str	r2, [r3, #12]
 231:../Generated_Code/TU1.c ****   /* Deallocation of the device structure */
 232:../Generated_Code/TU1.c ****   /* {MQXLite RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 233:../Generated_Code/TU1.c **** }
 265              		.loc 1 233 0
 266 0030 BD46     		mov	sp, r7
 267 0032 04B0     		add	sp, sp, #16
 268              		@ sp needed for prologue
 269 0034 80BD     		pop	{r7, pc}
 270              	.L6:
 271 0036 C046     		.align	2
 272              	.L5:
 273 0038 00800340 		.word	1073971200
 274 003c 00000000 		.word	PE_LDD_DeviceDataList
 275              		.cfi_endproc
 276              	.LFE1:
 278              		.section	.text.TU1_ResetCounter,"ax",%progbits
 279              		.align	2
 280              		.global	TU1_ResetCounter
 281              		.code	16
 282              		.thumb_func
 284              	TU1_ResetCounter:
 285              	.LFB2:
 234:../Generated_Code/TU1.c **** 
 235:../Generated_Code/TU1.c **** /*
 236:../Generated_Code/TU1.c **** ** ===================================================================
 237:../Generated_Code/TU1.c **** **     Method      :  TU1_ResetCounter (component TimerUnit_LDD)
 238:../Generated_Code/TU1.c **** **
 239:../Generated_Code/TU1.c **** **     Description :
 240:../Generated_Code/TU1.c **** **         Resets counter. If counter is counting up then it is set to
 241:../Generated_Code/TU1.c **** **         zero. If counter is counting down then counter is updated to
 242:../Generated_Code/TU1.c **** **         the reload value.
 243:../Generated_Code/TU1.c **** **         The method is not available if HW doesn't allow resetting of
 244:../Generated_Code/TU1.c **** **         the counter.
 245:../Generated_Code/TU1.c **** **     Parameters  :
 246:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 247:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 248:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 249:../Generated_Code/TU1.c **** **     Returns     :
 250:../Generated_Code/TU1.c **** **         ---             - Error code, possible codes:
 251:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 252:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 253:../Generated_Code/TU1.c **** **                           the active clock configuration
 254:../Generated_Code/TU1.c **** ** ===================================================================
 255:../Generated_Code/TU1.c **** */
 256:../Generated_Code/TU1.c **** LDD_TError TU1_ResetCounter(LDD_TDeviceData *DeviceDataPtr)
 257:../Generated_Code/TU1.c **** {
 286              		.loc 1 257 0
 287              		.cfi_startproc
 288 0000 80B5     		push	{r7, lr}
 289              	.LCFI6:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 82B0     		sub	sp, sp, #8
 294              	.LCFI7:
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              	.LCFI8:
 298              		.cfi_def_cfa_register 7
 299 0006 7860     		str	r0, [r7, #4]
 258:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 259:../Generated_Code/TU1.c ****   TPM_PDD_InitializeCounter(TPM0_BASE_PTR);
 300              		.loc 1 259 0
 301 0008 034B     		ldr	r3, .L8
 302 000a 0022     		mov	r2, #0
 303 000c 5A60     		str	r2, [r3, #4]
 260:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 304              		.loc 1 260 0
 305 000e 0023     		mov	r3, #0
 261:../Generated_Code/TU1.c **** }
 306              		.loc 1 261 0
 307 0010 181C     		mov	r0, r3
 308 0012 BD46     		mov	sp, r7
 309 0014 02B0     		add	sp, sp, #8
 310              		@ sp needed for prologue
 311 0016 80BD     		pop	{r7, pc}
 312              	.L9:
 313              		.align	2
 314              	.L8:
 315 0018 00800340 		.word	1073971200
 316              		.cfi_endproc
 317              	.LFE2:
 319              		.section	.text.TU1_GetCaptureValue,"ax",%progbits
 320              		.align	2
 321              		.global	TU1_GetCaptureValue
 322              		.code	16
 323              		.thumb_func
 325              	TU1_GetCaptureValue:
 326              	.LFB3:
 262:../Generated_Code/TU1.c **** 
 263:../Generated_Code/TU1.c **** /*
 264:../Generated_Code/TU1.c **** ** ===================================================================
 265:../Generated_Code/TU1.c **** **     Method      :  TU1_GetCaptureValue (component TimerUnit_LDD)
 266:../Generated_Code/TU1.c **** **
 267:../Generated_Code/TU1.c **** **     Description :
 268:../Generated_Code/TU1.c **** **         Returns the content of capture register specified by the
 269:../Generated_Code/TU1.c **** **         parameter ChannelIdx. This method is available when at least
 270:../Generated_Code/TU1.c **** **         one channel is configured.
 271:../Generated_Code/TU1.c **** **     Parameters  :
 272:../Generated_Code/TU1.c **** **         NAME            - DESCRIPTION
 273:../Generated_Code/TU1.c **** **       * DeviceDataPtr   - Device data structure
 274:../Generated_Code/TU1.c **** **                           pointer returned by <Init> method.
 275:../Generated_Code/TU1.c **** **         ChannelIdx      - Index of the component
 276:../Generated_Code/TU1.c **** **                           channel.
 277:../Generated_Code/TU1.c **** **       * ValuePtr        - Pointer to return value of the
 278:../Generated_Code/TU1.c **** **                           capture register.
 279:../Generated_Code/TU1.c **** **     Returns     :
 280:../Generated_Code/TU1.c **** **         ---             - Error code, possible codes:
 281:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 282:../Generated_Code/TU1.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 283:../Generated_Code/TU1.c **** **                           out of possible range
 284:../Generated_Code/TU1.c **** **                           ERR_NOTAVAIL -  The capture mode is not
 285:../Generated_Code/TU1.c **** **                           selected for selected channel.
 286:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 287:../Generated_Code/TU1.c **** **                           the active clock configuration
 288:../Generated_Code/TU1.c **** ** ===================================================================
 289:../Generated_Code/TU1.c **** */
 290:../Generated_Code/TU1.c **** LDD_TError TU1_GetCaptureValue(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU1_TValueType *
 291:../Generated_Code/TU1.c **** {
 327              		.loc 1 291 0
 328              		.cfi_startproc
 329 0000 80B5     		push	{r7, lr}
 330              	.LCFI9:
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 84B0     		sub	sp, sp, #16
 335              	.LCFI10:
 336              		.cfi_def_cfa_offset 24
 337 0004 00AF     		add	r7, sp, #0
 338              	.LCFI11:
 339              		.cfi_def_cfa_register 7
 340 0006 F860     		str	r0, [r7, #12]
 341 0008 7A60     		str	r2, [r7, #4]
 342 000a 3B1C     		mov	r3, r7
 343 000c 0B33     		add	r3, r3, #11
 344 000e 0A1C     		add	r2, r1, #0
 345 0010 1A70     		strb	r2, [r3]
 292:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 293:../Generated_Code/TU1.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 294:../Generated_Code/TU1.c ****      property to the "yes" value in the "Configuration inspector" */
 295:../Generated_Code/TU1.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 346              		.loc 1 295 0
 347 0012 3B1C     		mov	r3, r7
 348 0014 0B33     		add	r3, r3, #11
 349 0016 1B78     		ldrb	r3, [r3]
 350 0018 012B     		cmp	r3, #1
 351 001a 01D9     		bls	.L11
 296:../Generated_Code/TU1.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 352              		.loc 1 296 0
 353 001c 8223     		mov	r3, #130
 354 001e 16E0     		b	.L12
 355              	.L11:
 297:../Generated_Code/TU1.c ****   }
 298:../Generated_Code/TU1.c ****   if ((ChannelMode[ChannelIdx]) != 1u) { /* Is the channel in capture mode? */
 356              		.loc 1 298 0
 357 0020 3B1C     		mov	r3, r7
 358 0022 0B33     		add	r3, r3, #11
 359 0024 1B78     		ldrb	r3, [r3]
 360 0026 0C4A     		ldr	r2, .L14
 361 0028 D35C     		ldrb	r3, [r2, r3]
 362 002a 012B     		cmp	r3, #1
 363 002c 01D0     		beq	.L13
 299:../Generated_Code/TU1.c ****     return ERR_NOTAVAIL;               /* If not then error */
 364              		.loc 1 299 0
 365 002e 0923     		mov	r3, #9
 366 0030 0DE0     		b	.L12
 367              	.L13:
 300:../Generated_Code/TU1.c ****   }
 301:../Generated_Code/TU1.c ****   *ValuePtr = (TU1_TValueType)(TPM_PDD_ReadChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx]
 368              		.loc 1 301 0
 369 0032 0A4A     		ldr	r2, .L14+4
 370 0034 3B1C     		mov	r3, r7
 371 0036 0B33     		add	r3, r3, #11
 372 0038 1B78     		ldrb	r3, [r3]
 373 003a 0949     		ldr	r1, .L14+8
 374 003c CB5C     		ldrb	r3, [r1, r3]
 375 003e 0133     		add	r3, r3, #1
 376 0040 DB00     		lsl	r3, r3, #3
 377 0042 D318     		add	r3, r2, r3
 378 0044 9B68     		ldr	r3, [r3, #8]
 379 0046 1A1C     		mov	r2, r3
 380 0048 7B68     		ldr	r3, [r7, #4]
 381 004a 1A60     		str	r2, [r3]
 302:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 382              		.loc 1 302 0
 383 004c 0023     		mov	r3, #0
 384              	.L12:
 303:../Generated_Code/TU1.c **** }
 385              		.loc 1 303 0
 386 004e 181C     		mov	r0, r3
 387 0050 BD46     		mov	sp, r7
 388 0052 04B0     		add	sp, sp, #16
 389              		@ sp needed for prologue
 390 0054 80BD     		pop	{r7, pc}
 391              	.L15:
 392 0056 C046     		.align	2
 393              	.L14:
 394 0058 00000000 		.word	ChannelMode
 395 005c 00800340 		.word	1073971200
 396 0060 00000000 		.word	ChannelDevice
 397              		.cfi_endproc
 398              	.LFE3:
 400              		.section	.text.TU1_Interrupt,"ax",%progbits
 401              		.align	2
 402              		.global	TU1_Interrupt
 403              		.code	16
 404              		.thumb_func
 406              	TU1_Interrupt:
 407              	.LFB4:
 304:../Generated_Code/TU1.c **** 
 305:../Generated_Code/TU1.c **** /*
 306:../Generated_Code/TU1.c **** ** ===================================================================
 307:../Generated_Code/TU1.c **** **     Method      :  TU1_Interrupt (component TimerUnit_LDD)
 308:../Generated_Code/TU1.c **** **
 309:../Generated_Code/TU1.c **** **     Description :
 310:../Generated_Code/TU1.c **** **         The method services the interrupt of the selected peripheral(s)
 311:../Generated_Code/TU1.c **** **         and eventually invokes event(s) of the component.
 312:../Generated_Code/TU1.c **** **         This method is internal. It is used by Processor Expert only.
 313:../Generated_Code/TU1.c **** ** ===================================================================
 314:../Generated_Code/TU1.c **** */
 315:../Generated_Code/TU1.c **** void TU1_Interrupt(LDD_RTOS_TISRParameter _isrParameter)
 316:../Generated_Code/TU1.c **** {
 408              		.loc 1 316 0
 409              		.cfi_startproc
 410 0000 80B5     		push	{r7, lr}
 411              	.LCFI12:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 84B0     		sub	sp, sp, #16
 416              	.LCFI13:
 417              		.cfi_def_cfa_offset 24
 418 0004 00AF     		add	r7, sp, #0
 419              	.LCFI14:
 420              		.cfi_def_cfa_register 7
 421 0006 7860     		str	r0, [r7, #4]
 317:../Generated_Code/TU1.c ****   /* {MQXLite RTOS Adapter} ISR parameter is passed as parameter from RTOS interrupt dispatcher */
 318:../Generated_Code/TU1.c ****   TU1_TDeviceDataPtr DeviceDataPrv = (TU1_TDeviceDataPtr)_isrParameter;
 422              		.loc 1 318 0
 423 0008 7B68     		ldr	r3, [r7, #4]
 424 000a BB60     		str	r3, [r7, #8]
 319:../Generated_Code/TU1.c **** 
 320:../Generated_Code/TU1.c ****   LDD_TEventMask State = 0U;
 425              		.loc 1 320 0
 426 000c 0023     		mov	r3, #0
 427 000e FB60     		str	r3, [r7, #12]
 321:../Generated_Code/TU1.c **** 
 322:../Generated_Code/TU1.c ****   if ((TPM_PDD_GetOverflowInterruptFlag(TPM0_BASE_PTR)) != 0U) { /* Is the overflow interrupt flag 
 428              		.loc 1 322 0
 429 0010 3B4B     		ldr	r3, .L23
 430 0012 1B68     		ldr	r3, [r3]
 431 0014 1A1C     		mov	r2, r3
 432 0016 8023     		mov	r3, #128
 433 0018 1340     		and	r3, r2
 434 001a 04D0     		beq	.L17
 323:../Generated_Code/TU1.c ****     State |= LDD_TIMERUNIT_ON_COUNTER_RESTART; /* and set mask */
 435              		.loc 1 323 0
 436 001c FB68     		ldr	r3, [r7, #12]
 437 001e 8022     		mov	r2, #128
 438 0020 5200     		lsl	r2, r2, #1
 439 0022 1343     		orr	r3, r2
 440 0024 FB60     		str	r3, [r7, #12]
 441              	.L17:
 324:../Generated_Code/TU1.c ****   }
 325:../Generated_Code/TU1.c ****   if ((TPM_PDD_GetChannelInterruptFlag(TPM0_BASE_PTR, ChannelDevice[0])) != 0U) { /* Is the channel
 442              		.loc 1 325 0
 443 0026 364A     		ldr	r2, .L23
 444 0028 364B     		ldr	r3, .L23+4
 445 002a 1B78     		ldrb	r3, [r3]
 446 002c 0133     		add	r3, r3, #1
 447 002e DB00     		lsl	r3, r3, #3
 448 0030 D318     		add	r3, r2, r3
 449 0032 5B68     		ldr	r3, [r3, #4]
 450 0034 1A1C     		mov	r2, r3
 451 0036 8023     		mov	r3, #128
 452 0038 1340     		and	r3, r2
 453 003a 03D0     		beq	.L18
 326:../Generated_Code/TU1.c ****     State |= LDD_TIMERUNIT_ON_CHANNEL_0; /* and set mask */
 454              		.loc 1 326 0
 455 003c FB68     		ldr	r3, [r7, #12]
 456 003e 0122     		mov	r2, #1
 457 0040 1343     		orr	r3, r2
 458 0042 FB60     		str	r3, [r7, #12]
 459              	.L18:
 327:../Generated_Code/TU1.c ****   }
 328:../Generated_Code/TU1.c ****   if ((TPM_PDD_GetChannelInterruptFlag(TPM0_BASE_PTR, ChannelDevice[1])) != 0U) { /* Is the channel
 460              		.loc 1 328 0
 461 0044 2E4A     		ldr	r2, .L23
 462 0046 2F4B     		ldr	r3, .L23+4
 463 0048 5B78     		ldrb	r3, [r3, #1]
 464 004a 0133     		add	r3, r3, #1
 465 004c DB00     		lsl	r3, r3, #3
 466 004e D318     		add	r3, r2, r3
 467 0050 5B68     		ldr	r3, [r3, #4]
 468 0052 1A1C     		mov	r2, r3
 469 0054 8023     		mov	r3, #128
 470 0056 1340     		and	r3, r2
 471 0058 03D0     		beq	.L19
 329:../Generated_Code/TU1.c ****     State |= LDD_TIMERUNIT_ON_CHANNEL_1; /* and set mask */
 472              		.loc 1 329 0
 473 005a FB68     		ldr	r3, [r7, #12]
 474 005c 0222     		mov	r2, #2
 475 005e 1343     		orr	r3, r2
 476 0060 FB60     		str	r3, [r7, #12]
 477              	.L19:
 330:../Generated_Code/TU1.c ****   }
 331:../Generated_Code/TU1.c ****   State &= DeviceDataPrv->EnEvents;    /* Handle only enabled interrupts */
 478              		.loc 1 331 0
 479 0062 BB68     		ldr	r3, [r7, #8]
 480 0064 9A68     		ldr	r2, [r3, #8]
 481 0066 FB68     		ldr	r3, [r7, #12]
 482 0068 1340     		and	r3, r2
 483 006a FB60     		str	r3, [r7, #12]
 332:../Generated_Code/TU1.c ****   if (State & LDD_TIMERUNIT_ON_COUNTER_RESTART) { /* Is the overflow interrupt flag pending? */
 484              		.loc 1 332 0
 485 006c FA68     		ldr	r2, [r7, #12]
 486 006e 8023     		mov	r3, #128
 487 0070 5B00     		lsl	r3, r3, #1
 488 0072 1340     		and	r3, r2
 489 0074 0AD0     		beq	.L20
 333:../Generated_Code/TU1.c ****     TPM_PDD_ClearOverflowInterruptFlag(TPM0_BASE_PTR); /* Clear flag */
 490              		.loc 1 333 0
 491 0076 224B     		ldr	r3, .L23
 492 0078 214A     		ldr	r2, .L23
 493 007a 1268     		ldr	r2, [r2]
 494 007c 8021     		mov	r1, #128
 495 007e 0A43     		orr	r2, r1
 496 0080 1A60     		str	r2, [r3]
 334:../Generated_Code/TU1.c ****     TU1_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 497              		.loc 1 334 0
 498 0082 BB68     		ldr	r3, [r7, #8]
 499 0084 DB68     		ldr	r3, [r3, #12]
 500 0086 181C     		mov	r0, r3
 501 0088 FFF7FEFF 		bl	TU1_OnCounterRestart
 502              	.L20:
 335:../Generated_Code/TU1.c ****   }
 336:../Generated_Code/TU1.c ****   if (State & LDD_TIMERUNIT_ON_CHANNEL_0) { /* Is the channel 0 interrupt flag pending? */
 503              		.loc 1 336 0
 504 008c FA68     		ldr	r2, [r7, #12]
 505 008e 0123     		mov	r3, #1
 506 0090 1340     		and	r3, r2
 507 0092 DBB2     		uxtb	r3, r3
 508 0094 002B     		cmp	r3, #0
 509 0096 15D0     		beq	.L21
 337:../Generated_Code/TU1.c ****     TPM_PDD_ClearChannelInterruptFlag(TPM0_BASE_PTR, ChannelDevice[0]); /* Clear flag */
 510              		.loc 1 337 0
 511 0098 1949     		ldr	r1, .L23
 512 009a 1A4B     		ldr	r3, .L23+4
 513 009c 1B78     		ldrb	r3, [r3]
 514 009e 181C     		mov	r0, r3
 515 00a0 174A     		ldr	r2, .L23
 516 00a2 184B     		ldr	r3, .L23+4
 517 00a4 1B78     		ldrb	r3, [r3]
 518 00a6 0133     		add	r3, r3, #1
 519 00a8 DB00     		lsl	r3, r3, #3
 520 00aa D318     		add	r3, r2, r3
 521 00ac 5B68     		ldr	r3, [r3, #4]
 522 00ae 8022     		mov	r2, #128
 523 00b0 1A43     		orr	r2, r3
 524 00b2 431C     		add	r3, r0, #1
 525 00b4 DB00     		lsl	r3, r3, #3
 526 00b6 CB18     		add	r3, r1, r3
 527 00b8 5A60     		str	r2, [r3, #4]
 338:../Generated_Code/TU1.c ****     TU1_OnChannel0(DeviceDataPrv->UserDataPtr); /* Invoke OnChannel0 event */
 528              		.loc 1 338 0
 529 00ba BB68     		ldr	r3, [r7, #8]
 530 00bc DB68     		ldr	r3, [r3, #12]
 531 00be 181C     		mov	r0, r3
 532 00c0 FFF7FEFF 		bl	TU1_OnChannel0
 533              	.L21:
 339:../Generated_Code/TU1.c ****   }
 340:../Generated_Code/TU1.c ****   if (State & LDD_TIMERUNIT_ON_CHANNEL_1) { /* Is the channel 0 interrupt flag pending? */
 534              		.loc 1 340 0
 535 00c4 FA68     		ldr	r2, [r7, #12]
 536 00c6 0223     		mov	r3, #2
 537 00c8 1340     		and	r3, r2
 538 00ca 15D0     		beq	.L16
 341:../Generated_Code/TU1.c ****     TPM_PDD_ClearChannelInterruptFlag(TPM0_BASE_PTR, ChannelDevice[1]); /* Clear flag */
 539              		.loc 1 341 0
 540 00cc 0C49     		ldr	r1, .L23
 541 00ce 0D4B     		ldr	r3, .L23+4
 542 00d0 5B78     		ldrb	r3, [r3, #1]
 543 00d2 181C     		mov	r0, r3
 544 00d4 0A4A     		ldr	r2, .L23
 545 00d6 0B4B     		ldr	r3, .L23+4
 546 00d8 5B78     		ldrb	r3, [r3, #1]
 547 00da 0133     		add	r3, r3, #1
 548 00dc DB00     		lsl	r3, r3, #3
 549 00de D318     		add	r3, r2, r3
 550 00e0 5B68     		ldr	r3, [r3, #4]
 551 00e2 8022     		mov	r2, #128
 552 00e4 1A43     		orr	r2, r3
 553 00e6 431C     		add	r3, r0, #1
 554 00e8 DB00     		lsl	r3, r3, #3
 555 00ea CB18     		add	r3, r1, r3
 556 00ec 5A60     		str	r2, [r3, #4]
 342:../Generated_Code/TU1.c ****     TU1_OnChannel1(DeviceDataPrv->UserDataPtr); /* Invoke OnChannel1 event */
 557              		.loc 1 342 0
 558 00ee BB68     		ldr	r3, [r7, #8]
 559 00f0 DB68     		ldr	r3, [r3, #12]
 560 00f2 181C     		mov	r0, r3
 561 00f4 FFF7FEFF 		bl	TU1_OnChannel1
 562              	.L16:
 343:../Generated_Code/TU1.c ****   }
 344:../Generated_Code/TU1.c **** }
 563              		.loc 1 344 0
 564 00f8 BD46     		mov	sp, r7
 565 00fa 04B0     		add	sp, sp, #16
 566              		@ sp needed for prologue
 567 00fc 80BD     		pop	{r7, pc}
 568              	.L24:
 569 00fe C046     		.align	2
 570              	.L23:
 571 0100 00800340 		.word	1073971200
 572 0104 00000000 		.word	ChannelDevice
 573              		.cfi_endproc
 574              	.LFE4:
 576              		.text
 577              	.Letext0:
 578              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 579              		.file 3 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/Generated_Code/IO_Map.h"
 580              		.file 4 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/Generated_Code/PE_LDD.h"
 581              		.file 5 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/Generated_Code/TU1.h"
 582              		.file 6 "C:/Users/LARM/workspace/MQX-Lite + SPI + Motor + Ultrassom/MQXLITE/psp/cortex_m/psptypes.
DEFINED SYMBOLS
                            *ABS*:00000000 TU1.c
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:18     .rodata.ChannelDevice:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:21     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:25     .rodata.ChannelMode:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:28     .rodata.ChannelMode:00000000 ChannelMode
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:32     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:35     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:38     .text.TU1_Init:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:43     .text.TU1_Init:00000000 TU1_Init
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:205    .text.TU1_Init:000000f4 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:406    .text.TU1_Interrupt:00000000 TU1_Interrupt
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:221    .text.TU1_Deinit:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:226    .text.TU1_Deinit:00000000 TU1_Deinit
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:273    .text.TU1_Deinit:00000038 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:279    .text.TU1_ResetCounter:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:284    .text.TU1_ResetCounter:00000000 TU1_ResetCounter
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:315    .text.TU1_ResetCounter:00000018 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:320    .text.TU1_GetCaptureValue:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:325    .text.TU1_GetCaptureValue:00000000 TU1_GetCaptureValue
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:394    .text.TU1_GetCaptureValue:00000058 $d
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:401    .text.TU1_Interrupt:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccO3XXj9.s:571    .text.TU1_Interrupt:00000100 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_int_get_isr_data
_int_install_isr
PE_LDD_DeviceDataList
TU1_OnCounterRestart
TU1_OnChannel0
TU1_OnChannel1
