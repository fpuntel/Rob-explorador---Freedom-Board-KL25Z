   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LED2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	LED2_currPWM,2,2
  18              		.section	.text.LED2_Deinit,"ax",%progbits
  19              		.align	2
  20              		.global	LED2_Deinit
  21              		.code	16
  22              		.thumb_func
  24              	LED2_Deinit:
  25              	.LFB0:
  26              		.file 1 "../Generated_Code/LED2.c"
   1:../Generated_Code/LED2.c **** /** ###################################################################
   2:../Generated_Code/LED2.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/LED2.c **** **     Filename    : LED2.c
   4:../Generated_Code/LED2.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/LED2.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/LED2.c **** **     Component   : LED
   7:../Generated_Code/LED2.c **** **     Version     : Component 01.061, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/LED2.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/LED2.c **** **     Date/Time   : 2013-09-09, 14:34, # CodeGen: 47
  10:../Generated_Code/LED2.c **** **     Abstract    :
  11:../Generated_Code/LED2.c **** **          This component implements a universal driver for a single LED.
  12:../Generated_Code/LED2.c **** **     Settings    :
  13:../Generated_Code/LED2.c **** **          Component name                                 : LED2
  14:../Generated_Code/LED2.c **** **          Turned On with initialization                  : no
  15:../Generated_Code/LED2.c **** **          HW Interface                                   : 
  16:../Generated_Code/LED2.c **** **            On/Off                                       : Disabled
  17:../Generated_Code/LED2.c **** **            PWM                                          : Enabled
  18:../Generated_Code/LED2.c **** **              PWM                                        : PWM
  19:../Generated_Code/LED2.c **** **            High Value means ON                          : no
  20:../Generated_Code/LED2.c **** **          Shell                                          : Disabled
  21:../Generated_Code/LED2.c **** **     Contents    :
  22:../Generated_Code/LED2.c **** **         Init       - void LED2_Init(void);
  23:../Generated_Code/LED2.c **** **         Deinit     - void LED2_Deinit(void);
  24:../Generated_Code/LED2.c **** **         On         - void LED2_On(void);
  25:../Generated_Code/LED2.c **** **         Off        - void LED2_Off(void);
  26:../Generated_Code/LED2.c **** **         Neg        - void LED2_Neg(void);
  27:../Generated_Code/LED2.c **** **         Get        - byte LED2_Get(void);
  28:../Generated_Code/LED2.c **** **         Put        - void LED2_Put(byte val);
  29:../Generated_Code/LED2.c **** **         SetRatio16 - void LED2_SetRatio16(word ratio);
  30:../Generated_Code/LED2.c **** **
  31:../Generated_Code/LED2.c **** **     License   : Open Source (LGPL)
  32:../Generated_Code/LED2.c **** **     Copyright : Erich Styger, 2013, all rights reserved.
  33:../Generated_Code/LED2.c **** **     Web       : www.mcuoneclipse.com
  34:../Generated_Code/LED2.c **** **     This an open source software implementing a driver using Processor Expert.
  35:../Generated_Code/LED2.c **** **     This is a free software and is opened for education, research and commercial developments un
  36:../Generated_Code/LED2.c **** **     * This is a free software and there is NO WARRANTY.
  37:../Generated_Code/LED2.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  38:../Generated_Code/LED2.c **** **     * Redistributions of source code must retain the above copyright notice.
  39:../Generated_Code/LED2.c **** ** ###################################################################*/
  40:../Generated_Code/LED2.c **** 
  41:../Generated_Code/LED2.c **** /* MODULE LED2. */
  42:../Generated_Code/LED2.c **** 
  43:../Generated_Code/LED2.c **** #include "LED2.h"
  44:../Generated_Code/LED2.c **** 
  45:../Generated_Code/LED2.c **** uint16_t LED2_currPWM; /* current 16bit PWM value */
  46:../Generated_Code/LED2.c **** 
  47:../Generated_Code/LED2.c **** /*
  48:../Generated_Code/LED2.c **** ** ===================================================================
  49:../Generated_Code/LED2.c **** **     Method      :  LED2_On (component LED)
  50:../Generated_Code/LED2.c **** **
  51:../Generated_Code/LED2.c **** **     Description :
  52:../Generated_Code/LED2.c **** **         This turns the LED on.
  53:../Generated_Code/LED2.c **** **     Parameters  : None
  54:../Generated_Code/LED2.c **** **     Returns     : Nothing
  55:../Generated_Code/LED2.c **** ** ===================================================================
  56:../Generated_Code/LED2.c **** */
  57:../Generated_Code/LED2.c **** /*
  58:../Generated_Code/LED2.c **** ** ===================================================================
  59:../Generated_Code/LED2.c **** **     Method      :  LED2_Off (component LED)
  60:../Generated_Code/LED2.c **** **
  61:../Generated_Code/LED2.c **** **     Description :
  62:../Generated_Code/LED2.c **** **         This turns the LED off.
  63:../Generated_Code/LED2.c **** **     Parameters  : None
  64:../Generated_Code/LED2.c **** **     Returns     : Nothing
  65:../Generated_Code/LED2.c **** ** ===================================================================
  66:../Generated_Code/LED2.c **** */
  67:../Generated_Code/LED2.c **** /*
  68:../Generated_Code/LED2.c **** void LED2_Off(void)
  69:../Generated_Code/LED2.c **** {
  70:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
  71:../Generated_Code/LED2.c **** }
  72:../Generated_Code/LED2.c **** */
  73:../Generated_Code/LED2.c **** 
  74:../Generated_Code/LED2.c **** /*
  75:../Generated_Code/LED2.c **** ** ===================================================================
  76:../Generated_Code/LED2.c **** **     Method      :  LED2_Neg (component LED)
  77:../Generated_Code/LED2.c **** **
  78:../Generated_Code/LED2.c **** **     Description :
  79:../Generated_Code/LED2.c **** **         This negates/toggles the LED
  80:../Generated_Code/LED2.c **** **     Parameters  : None
  81:../Generated_Code/LED2.c **** **     Returns     : Nothing
  82:../Generated_Code/LED2.c **** ** ===================================================================
  83:../Generated_Code/LED2.c **** */
  84:../Generated_Code/LED2.c **** /*
  85:../Generated_Code/LED2.c **** void LED2_Neg(void)
  86:../Generated_Code/LED2.c **** {
  87:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
  88:../Generated_Code/LED2.c **** }
  89:../Generated_Code/LED2.c **** */
  90:../Generated_Code/LED2.c **** 
  91:../Generated_Code/LED2.c **** /*
  92:../Generated_Code/LED2.c **** ** ===================================================================
  93:../Generated_Code/LED2.c **** **     Method      :  LED2_Get (component LED)
  94:../Generated_Code/LED2.c **** **
  95:../Generated_Code/LED2.c **** **     Description :
  96:../Generated_Code/LED2.c **** **         This returns logical 1 in case the LED is on, 0 otherwise.
  97:../Generated_Code/LED2.c **** **     Parameters  : None
  98:../Generated_Code/LED2.c **** **     Returns     :
  99:../Generated_Code/LED2.c **** **         ---             - Status of the LED (on or off)
 100:../Generated_Code/LED2.c **** ** ===================================================================
 101:../Generated_Code/LED2.c **** */
 102:../Generated_Code/LED2.c **** /*
 103:../Generated_Code/LED2.c **** byte LED2_Get(void)
 104:../Generated_Code/LED2.c **** {
 105:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
 106:../Generated_Code/LED2.c **** }
 107:../Generated_Code/LED2.c **** */
 108:../Generated_Code/LED2.c **** 
 109:../Generated_Code/LED2.c **** /*
 110:../Generated_Code/LED2.c **** ** ===================================================================
 111:../Generated_Code/LED2.c **** **     Method      :  LED2_Init (component LED)
 112:../Generated_Code/LED2.c **** **
 113:../Generated_Code/LED2.c **** **     Description :
 114:../Generated_Code/LED2.c **** **         Performs the LED driver initialization.
 115:../Generated_Code/LED2.c **** **     Parameters  : None
 116:../Generated_Code/LED2.c **** **     Returns     : Nothing
 117:../Generated_Code/LED2.c **** ** ===================================================================
 118:../Generated_Code/LED2.c **** */
 119:../Generated_Code/LED2.c **** /*
 120:../Generated_Code/LED2.c **** void LED2_Init(void)
 121:../Generated_Code/LED2.c **** {
 122:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
 123:../Generated_Code/LED2.c **** }
 124:../Generated_Code/LED2.c **** */
 125:../Generated_Code/LED2.c **** 
 126:../Generated_Code/LED2.c **** /*
 127:../Generated_Code/LED2.c **** ** ===================================================================
 128:../Generated_Code/LED2.c **** **     Method      :  LED2_Put (component LED)
 129:../Generated_Code/LED2.c **** **
 130:../Generated_Code/LED2.c **** **     Description :
 131:../Generated_Code/LED2.c **** **         Turns the LED on or off.
 132:../Generated_Code/LED2.c **** **     Parameters  :
 133:../Generated_Code/LED2.c **** **         NAME            - DESCRIPTION
 134:../Generated_Code/LED2.c **** **         val             - value to define if the LED has to be on or
 135:../Generated_Code/LED2.c **** **                           off.
 136:../Generated_Code/LED2.c **** **     Returns     : Nothing
 137:../Generated_Code/LED2.c **** ** ===================================================================
 138:../Generated_Code/LED2.c **** */
 139:../Generated_Code/LED2.c **** /*
 140:../Generated_Code/LED2.c **** void LED2_Put(byte val)
 141:../Generated_Code/LED2.c **** {
 142:../Generated_Code/LED2.c ****   *** This method is implemented as macro in the header file
 143:../Generated_Code/LED2.c **** }
 144:../Generated_Code/LED2.c **** */
 145:../Generated_Code/LED2.c **** 
 146:../Generated_Code/LED2.c **** /*
 147:../Generated_Code/LED2.c **** ** ===================================================================
 148:../Generated_Code/LED2.c **** **     Method      :  LED2_Deinit (component LED)
 149:../Generated_Code/LED2.c **** **
 150:../Generated_Code/LED2.c **** **     Description :
 151:../Generated_Code/LED2.c **** **         Deinitializes the driver
 152:../Generated_Code/LED2.c **** **     Parameters  : None
 153:../Generated_Code/LED2.c **** **     Returns     : Nothing
 154:../Generated_Code/LED2.c **** ** ===================================================================
 155:../Generated_Code/LED2.c **** */
 156:../Generated_Code/LED2.c **** void LED2_Deinit(void)
 157:../Generated_Code/LED2.c **** {
  27              		.loc 1 157 0
  28              		.cfi_startproc
  29 0000 80B5     		push	{r7, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 00AF     		add	r7, sp, #0
  35              	.LCFI1:
  36              		.cfi_def_cfa_register 7
 158:../Generated_Code/LED2.c **** }
  37              		.loc 1 158 0
  38 0004 BD46     		mov	sp, r7
  39              		@ sp needed for prologue
  40 0006 80BD     		pop	{r7, pc}
  41              		.cfi_endproc
  42              	.LFE0:
  44              		.section	.text.LED2_SetRatio16,"ax",%progbits
  45              		.align	2
  46              		.global	LED2_SetRatio16
  47              		.code	16
  48              		.thumb_func
  50              	LED2_SetRatio16:
  51              	.LFB1:
 159:../Generated_Code/LED2.c **** 
 160:../Generated_Code/LED2.c **** /*
 161:../Generated_Code/LED2.c **** ** ===================================================================
 162:../Generated_Code/LED2.c **** **     Method      :  LED2_SetRatio16 (component LED)
 163:../Generated_Code/LED2.c **** **
 164:../Generated_Code/LED2.c **** **     Description :
 165:../Generated_Code/LED2.c **** **         Method to specify the duty cycle. If using a PWM pin, this
 166:../Generated_Code/LED2.c **** **         means the duty cycle is set. For On/off pins, values smaller
 167:../Generated_Code/LED2.c **** **         0x7FFF means off, while values greater means on.
 168:../Generated_Code/LED2.c **** **     Parameters  :
 169:../Generated_Code/LED2.c **** **         NAME            - DESCRIPTION
 170:../Generated_Code/LED2.c **** **         ratio           - Ratio value, where 0 means 'off' and
 171:../Generated_Code/LED2.c **** **                           0xffff means 'on'
 172:../Generated_Code/LED2.c **** **     Returns     : Nothing
 173:../Generated_Code/LED2.c **** ** ===================================================================
 174:../Generated_Code/LED2.c **** */
 175:../Generated_Code/LED2.c **** void LED2_SetRatio16(word ratio)
 176:../Generated_Code/LED2.c **** {
  52              		.loc 1 176 0
  53              		.cfi_startproc
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI2:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 82B0     		sub	sp, sp, #8
  60              	.LCFI3:
  61              		.cfi_def_cfa_offset 16
  62 0004 00AF     		add	r7, sp, #0
  63              	.LCFI4:
  64              		.cfi_def_cfa_register 7
  65 0006 021C     		mov	r2, r0
  66 0008 BB1D     		add	r3, r7, #6
  67 000a 1A80     		strh	r2, [r3]
 177:../Generated_Code/LED2.c ****   LED2_currPWM = ratio;
  68              		.loc 1 177 0
  69 000c 084B     		ldr	r3, .L3
  70 000e BA1D     		add	r2, r7, #6
  71 0010 1288     		ldrh	r2, [r2]
  72 0012 1A80     		strh	r2, [r3]
 178:../Generated_Code/LED2.c ****   (void)Inhr1_SetRatio16(0xffff-ratio);
  73              		.loc 1 178 0
  74 0014 074B     		ldr	r3, .L3+4
  75 0016 9A69     		ldr	r2, [r3, #24]
  76 0018 BB1D     		add	r3, r7, #6
  77 001a 1B88     		ldrh	r3, [r3]
  78 001c DB43     		mvn	r3, r3
  79 001e 9BB2     		uxth	r3, r3
  80 0020 101C     		mov	r0, r2
  81 0022 191C     		mov	r1, r3
  82 0024 FFF7FEFF 		bl	PwmLdd1_SetRatio16
 179:../Generated_Code/LED2.c **** }
  83              		.loc 1 179 0
  84 0028 BD46     		mov	sp, r7
  85 002a 02B0     		add	sp, sp, #8
  86              		@ sp needed for prologue
  87 002c 80BD     		pop	{r7, pc}
  88              	.L4:
  89 002e C046     		.align	2
  90              	.L3:
  91 0030 00000000 		.word	LED2_currPWM
  92 0034 00000000 		.word	PE_LDD_DeviceDataList
  93              		.cfi_endproc
  94              	.LFE1:
  96              		.text
  97              	.Letext0:
  98              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
  99              		.file 3 "../Generated_Code/PE_Types.h"
 100              		.file 4 "../Generated_Code/PE_LDD.h"
 101              		.file 5 "../Generated_Code/LED2.h"
 102              		.file 6 "../Generated_Code/IO_Map.h"
DEFINED SYMBOLS
                            *ABS*:00000000 LED2.c
                            *COM*:00000002 LED2_currPWM
C:\Users\LARM\AppData\Local\Temp\cc2mmrqd.s:19     .text.LED2_Deinit:00000000 $t
C:\Users\LARM\AppData\Local\Temp\cc2mmrqd.s:24     .text.LED2_Deinit:00000000 LED2_Deinit
C:\Users\LARM\AppData\Local\Temp\cc2mmrqd.s:45     .text.LED2_SetRatio16:00000000 $t
C:\Users\LARM\AppData\Local\Temp\cc2mmrqd.s:50     .text.LED2_SetRatio16:00000000 LED2_SetRatio16
C:\Users\LARM\AppData\Local\Temp\cc2mmrqd.s:91     .text.LED2_SetRatio16:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PwmLdd1_SetRatio16
PE_LDD_DeviceDataList
