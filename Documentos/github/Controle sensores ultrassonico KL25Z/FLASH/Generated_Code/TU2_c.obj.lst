   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ChannelDevice,"a",%progbits
  18              		.align	2
  21              	ChannelDevice:
  22 0000 00       		.space	1
  23 0001 000000   		.section	.rodata.ChannelMode,"a",%progbits
  24              		.align	2
  27              	ChannelMode:
  28 0000 00       		.space	1
  29 0001 000000   		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  30              		.align	2
  33              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  34 0000 00000000 		.space	12
  34      00000000 
  34      00000000 
  35              		.section	.text.TU2_Init,"ax",%progbits
  36              		.align	2
  37              		.global	TU2_Init
  38              		.code	16
  39              		.thumb_func
  41              	TU2_Init:
  42              	.LFB0:
  43              		.file 1 "../Generated_Code/TU2.c"
   1:../Generated_Code/TU2.c **** /** ###################################################################
   2:../Generated_Code/TU2.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU2.c **** **     Filename    : TU2.c
   4:../Generated_Code/TU2.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU2.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU2.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU2.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.000
   8:../Generated_Code/TU2.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU2.c **** **     Date/Time   : 2013-08-21, 11:26, # CodeGen: 20
  10:../Generated_Code/TU2.c **** **     Abstract    :
  11:../Generated_Code/TU2.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU2.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU2.c **** **     Settings    :
  14:../Generated_Code/TU2.c **** **          Component name                                 : TU2
  15:../Generated_Code/TU2.c **** **          Module name                                    : TPM1
  16:../Generated_Code/TU2.c **** **          Counter                                        : TPM1_CNT
  17:../Generated_Code/TU2.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU2.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU2.c **** **          Value type                                     : uint16_t
  20:../Generated_Code/TU2.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU2.c **** **            Counter frequency                            : Auto select
  22:../Generated_Code/TU2.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU2.c **** **            Period device                                : TPM1_MOD
  24:../Generated_Code/TU2.c **** **            Period                                       : 5 ms
  25:../Generated_Code/TU2.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU2.c **** **          Channel list                                   : 1
  27:../Generated_Code/TU2.c **** **            Channel 0                                    : 
  28:../Generated_Code/TU2.c **** **              Mode                                       : Compare
  29:../Generated_Code/TU2.c **** **                Compare                                  : TPM1_C0V
  30:../Generated_Code/TU2.c **** **                Offset                                   : 2.5 ms
  31:../Generated_Code/TU2.c **** **                Output on compare                        : Set
  32:../Generated_Code/TU2.c **** **                  Output on overrun                      : Clear
  33:../Generated_Code/TU2.c **** **                  Initial state                          : Low
  34:../Generated_Code/TU2.c **** **                  Output pin                             : ADC0_DP0/ADC0_SE0/PTE20/TPM1_CH0/UART0
  35:../Generated_Code/TU2.c **** **                  Output pin signal                      : 
  36:../Generated_Code/TU2.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/TU2.c **** **          Initialization                                 : 
  38:../Generated_Code/TU2.c **** **            Enabled in init. code                        : yes
  39:../Generated_Code/TU2.c **** **            Auto initialization                          : no
  40:../Generated_Code/TU2.c **** **            Event mask                                   : 
  41:../Generated_Code/TU2.c **** **              OnCounterRestart                           : Disabled
  42:../Generated_Code/TU2.c **** **              OnChannel0                                 : Disabled
  43:../Generated_Code/TU2.c **** **              OnChannel1                                 : Disabled
  44:../Generated_Code/TU2.c **** **              OnChannel2                                 : Disabled
  45:../Generated_Code/TU2.c **** **              OnChannel3                                 : Disabled
  46:../Generated_Code/TU2.c **** **              OnChannel4                                 : Disabled
  47:../Generated_Code/TU2.c **** **              OnChannel5                                 : Disabled
  48:../Generated_Code/TU2.c **** **              OnChannel6                                 : Disabled
  49:../Generated_Code/TU2.c **** **              OnChannel7                                 : Disabled
  50:../Generated_Code/TU2.c **** **          CPU clock/configuration selection              : 
  51:../Generated_Code/TU2.c **** **            Clock configuration 0                        : This component enabled
  52:../Generated_Code/TU2.c **** **            Clock configuration 1                        : This component enabled
  53:../Generated_Code/TU2.c **** **            Clock configuration 2                        : This component enabled
  54:../Generated_Code/TU2.c **** **            Clock configuration 3                        : This component enabled
  55:../Generated_Code/TU2.c **** **            Clock configuration 4                        : This component enabled
  56:../Generated_Code/TU2.c **** **            Clock configuration 5                        : This component enabled
  57:../Generated_Code/TU2.c **** **            Clock configuration 6                        : This component enabled
  58:../Generated_Code/TU2.c **** **            Clock configuration 7                        : This component enabled
  59:../Generated_Code/TU2.c **** **     Contents    :
  60:../Generated_Code/TU2.c **** **         Init               - LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr);
  61:../Generated_Code/TU2.c **** **         Deinit             - void TU2_Deinit(LDD_TDeviceData *DeviceDataPtr);
  62:../Generated_Code/TU2.c **** **         Enable             - LDD_TError TU2_Enable(LDD_TDeviceData *DeviceDataPtr);
  63:../Generated_Code/TU2.c **** **         Disable            - LDD_TError TU2_Disable(LDD_TDeviceData *DeviceDataPtr);
  64:../Generated_Code/TU2.c **** **         GetPeriodTicks     - LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_T
  65:../Generated_Code/TU2.c **** **         ResetCounter       - LDD_TError TU2_ResetCounter(LDD_TDeviceData *DeviceDataPtr);
  66:../Generated_Code/TU2.c **** **         GetCounterValue    - TU2_TValueType TU2_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  67:../Generated_Code/TU2.c **** **         SetOffsetTicks     - LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  68:../Generated_Code/TU2.c **** **         GetOffsetTicks     - LDD_TError TU2_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  69:../Generated_Code/TU2.c **** **         SelectOutputAction - LDD_TError TU2_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, u
  70:../Generated_Code/TU2.c **** **
  71:../Generated_Code/TU2.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  72:../Generated_Code/TU2.c **** **     
  73:../Generated_Code/TU2.c **** **     http      : www.freescale.com
  74:../Generated_Code/TU2.c **** **     mail      : support@freescale.com
  75:../Generated_Code/TU2.c **** ** ###################################################################*/
  76:../Generated_Code/TU2.c **** 
  77:../Generated_Code/TU2.c **** /* MODULE TU2. */
  78:../Generated_Code/TU2.c **** 
  79:../Generated_Code/TU2.c **** #include "TU2.h"
  80:../Generated_Code/TU2.c **** /* {Default RTOS Adapter} No RTOS includes */
  81:../Generated_Code/TU2.c **** #include "IO_Map.h"
  82:../Generated_Code/TU2.c **** 
  83:../Generated_Code/TU2.c **** /* List of channels used by component */
  84:../Generated_Code/TU2.c **** static const uint8_t ChannelDevice[TU2_NUMBER_OF_CHANNELS] = {0x00U};
  85:../Generated_Code/TU2.c **** 
  86:../Generated_Code/TU2.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
  87:../Generated_Code/TU2.c **** static const uint8_t ChannelMode[TU2_NUMBER_OF_CHANNELS] = {0x00U};
  88:../Generated_Code/TU2.c **** 
  89:../Generated_Code/TU2.c **** 
  90:../Generated_Code/TU2.c **** typedef struct {
  91:../Generated_Code/TU2.c ****   uint32_t Source;                     /* Current source clock */
  92:../Generated_Code/TU2.c ****   uint8_t InitCntr;                    /* Number of initialization */
  93:../Generated_Code/TU2.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  94:../Generated_Code/TU2.c **** } TU2_TDeviceData;
  95:../Generated_Code/TU2.c **** 
  96:../Generated_Code/TU2.c **** typedef TU2_TDeviceData *TU2_TDeviceDataPtr; /* Pointer to the device data structure. */
  97:../Generated_Code/TU2.c **** 
  98:../Generated_Code/TU2.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  99:../Generated_Code/TU2.c **** static TU2_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 100:../Generated_Code/TU2.c **** 
 101:../Generated_Code/TU2.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU2_CHANNEL_0_PIN)
 102:../Generated_Code/TU2.c **** #define LAST_CHANNEL 0x00U
 103:../Generated_Code/TU2.c **** 
 104:../Generated_Code/TU2.c **** /* Internal method prototypes */
 105:../Generated_Code/TU2.c **** /*
 106:../Generated_Code/TU2.c **** ** ===================================================================
 107:../Generated_Code/TU2.c **** **     Method      :  TU2_Init (component TimerUnit_LDD)
 108:../Generated_Code/TU2.c **** **
 109:../Generated_Code/TU2.c **** **     Description :
 110:../Generated_Code/TU2.c **** **         Initializes the device. Allocates memory for the device data
 111:../Generated_Code/TU2.c **** **         structure, allocates interrupt vectors and sets interrupt
 112:../Generated_Code/TU2.c **** **         priority, sets pin routing, sets timing, etc. If the
 113:../Generated_Code/TU2.c **** **         property <"Enable in init. code"> is set to "yes" value then
 114:../Generated_Code/TU2.c **** **         the device is also enabled (see the description of the
 115:../Generated_Code/TU2.c **** **         <Enable> method). In this case the <Enable> method is not
 116:../Generated_Code/TU2.c **** **         necessary and needn't to be generated. This method can be
 117:../Generated_Code/TU2.c **** **         called only once. Before the second call of Init the <Deinit>
 118:../Generated_Code/TU2.c **** **         must be called first.
 119:../Generated_Code/TU2.c **** **     Parameters  :
 120:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 121:../Generated_Code/TU2.c **** **       * UserDataPtr     - Pointer to the user or
 122:../Generated_Code/TU2.c **** **                           RTOS specific data. This pointer will be
 123:../Generated_Code/TU2.c **** **                           passed as an event or callback parameter.
 124:../Generated_Code/TU2.c **** **     Returns     :
 125:../Generated_Code/TU2.c **** **         ---             - Pointer to the dynamically allocated
 126:../Generated_Code/TU2.c **** **                           private structure or NULL if there was an
 127:../Generated_Code/TU2.c **** **                           error.
 128:../Generated_Code/TU2.c **** ** ===================================================================
 129:../Generated_Code/TU2.c **** */
 130:../Generated_Code/TU2.c **** LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr)
 131:../Generated_Code/TU2.c **** {
  44              		.loc 1 131 0
  45              		.cfi_startproc
  46 0000 80B5     		push	{r7, lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
  51 0002 84B0     		sub	sp, sp, #16
  52              	.LCFI1:
  53              		.cfi_def_cfa_offset 24
  54 0004 00AF     		add	r7, sp, #0
  55              	.LCFI2:
  56              		.cfi_def_cfa_register 7
  57 0006 7860     		str	r0, [r7, #4]
 132:../Generated_Code/TU2.c ****   TU2_TDeviceData *DeviceDataPrv;
 133:../Generated_Code/TU2.c **** 
 134:../Generated_Code/TU2.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID] == NULL) {
  58              		.loc 1 134 0
  59 0008 274B     		ldr	r3, .L4
  60 000a 5B69     		ldr	r3, [r3, #20]
  61 000c 002B     		cmp	r3, #0
  62 000e 3AD1     		bne	.L2
 135:../Generated_Code/TU2.c ****     /* Allocate device structure */
 136:../Generated_Code/TU2.c ****     /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointe
 137:../Generated_Code/TU2.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  63              		.loc 1 137 0
  64 0010 264B     		ldr	r3, .L4+4
  65 0012 FB60     		str	r3, [r7, #12]
 138:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  66              		.loc 1 138 0
  67 0014 FB68     		ldr	r3, [r7, #12]
  68 0016 7A68     		ldr	r2, [r7, #4]
  69 0018 9A60     		str	r2, [r3, #8]
 139:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  70              		.loc 1 139 0
  71 001a FB68     		ldr	r3, [r7, #12]
  72 001c 0122     		mov	r2, #1
  73 001e 1A71     		strb	r2, [r3, #4]
 140:../Generated_Code/TU2.c ****   }
 141:../Generated_Code/TU2.c ****   else {
 142:../Generated_Code/TU2.c ****     /* Memory is already allocated */
 143:../Generated_Code/TU2.c ****     DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
 144:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 145:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 146:../Generated_Code/TU2.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 147:../Generated_Code/TU2.c ****   }
 148:../Generated_Code/TU2.c ****   /* SIM_SCGC6: TPM1=1 */
 149:../Generated_Code/TU2.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK;                                                   
  74              		.loc 1 149 0
  75 0020 234A     		ldr	r2, .L4+8
  76 0022 2349     		ldr	r1, .L4+8
  77 0024 234B     		ldr	r3, .L4+12
  78 0026 CB58     		ldr	r3, [r1, r3]
  79 0028 8021     		mov	r1, #128
  80 002a 8904     		lsl	r1, r1, #18
  81 002c 1943     		orr	r1, r3
  82 002e 214B     		ldr	r3, .L4+12
  83 0030 D150     		str	r1, [r2, r3]
 150:../Generated_Code/TU2.c ****   /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 151:../Generated_Code/TU2.c ****   TPM1_SC = 0x00U;                     /* Clear status and control register */
  84              		.loc 1 151 0
  85 0032 214B     		ldr	r3, .L4+16
  86 0034 0022     		mov	r2, #0
  87 0036 1A60     		str	r2, [r3]
 152:../Generated_Code/TU2.c ****   /* TPM1_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 153:../Generated_Code/TU2.c ****   TPM1_CNT = 0x00U;                    /* Reset counter register */
  88              		.loc 1 153 0
  89 0038 1F4B     		ldr	r3, .L4+16
  90 003a 0022     		mov	r2, #0
  91 003c 5A60     		str	r2, [r3, #4]
 154:../Generated_Code/TU2.c ****   /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 155:../Generated_Code/TU2.c ****   TPM1_C0SC = 0x00U;                   /* Clear channel status and control register */
  92              		.loc 1 155 0
  93 003e 1E4B     		ldr	r3, .L4+16
  94 0040 0022     		mov	r2, #0
  95 0042 DA60     		str	r2, [r3, #12]
 156:../Generated_Code/TU2.c ****   /* TPM1_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 157:../Generated_Code/TU2.c ****   TPM1_C1SC = 0x00U;                   /* Clear channel status and control register */
  96              		.loc 1 157 0
  97 0044 1C4B     		ldr	r3, .L4+16
  98 0046 0022     		mov	r2, #0
  99 0048 5A61     		str	r2, [r3, #20]
 158:../Generated_Code/TU2.c ****   /* TPM1_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 159:../Generated_Code/TU2.c ****   TPM1_MOD = TPM_MOD_MOD(0xCCCC);      /* Set up modulo register */
 100              		.loc 1 159 0
 101 004a 1B4B     		ldr	r3, .L4+16
 102 004c 1B4A     		ldr	r2, .L4+20
 103 004e 9A60     		str	r2, [r3, #8]
 160:../Generated_Code/TU2.c ****   /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 161:../Generated_Code/TU2.c ****   TPM1_C0SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 104              		.loc 1 161 0
 105 0050 194B     		ldr	r3, .L4+16
 106 0052 2C22     		mov	r2, #44
 107 0054 DA60     		str	r2, [r3, #12]
 162:../Generated_Code/TU2.c ****   /* TPM1_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 163:../Generated_Code/TU2.c ****   TPM1_C0V = TPM_CnV_VAL(0x6666);      /* Set up channel value register */
 108              		.loc 1 163 0
 109 0056 184B     		ldr	r3, .L4+16
 110 0058 194A     		ldr	r2, .L4+24
 111 005a 1A61     		str	r2, [r3, #16]
 164:../Generated_Code/TU2.c ****   /* PORTE_PCR20: ISF=0,MUX=3 */
 165:../Generated_Code/TU2.c ****   PORTE_PCR20 = (uint32_t)((PORTE_PCR20 & (uint32_t)~(uint32_t)(
 112              		.loc 1 165 0
 113 005c 194B     		ldr	r3, .L4+28
 114 005e 194A     		ldr	r2, .L4+28
 115 0060 126D     		ldr	r2, [r2, #80]
 116 0062 111C     		mov	r1, r2
 117 0064 184A     		ldr	r2, .L4+32
 118 0066 0A40     		and	r2, r1
 119 0068 C021     		mov	r1, #192
 120 006a 8900     		lsl	r1, r1, #2
 121 006c 0A43     		orr	r2, r1
 122 006e 1A65     		str	r2, [r3, #80]
 166:../Generated_Code/TU2.c ****                  PORT_PCR_ISF_MASK |
 167:../Generated_Code/TU2.c ****                  PORT_PCR_MUX(0x04)
 168:../Generated_Code/TU2.c ****                 )) | (uint32_t)(
 169:../Generated_Code/TU2.c ****                  PORT_PCR_MUX(0x03)
 170:../Generated_Code/TU2.c ****                 ));                                                  
 171:../Generated_Code/TU2.c ****   DeviceDataPrv->Source = TPM_PDD_SYSTEM; /* Store clock source */
 123              		.loc 1 171 0
 124 0070 FB68     		ldr	r3, [r7, #12]
 125 0072 0822     		mov	r2, #8
 126 0074 1A60     		str	r2, [r3]
 172:../Generated_Code/TU2.c ****   /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 173:../Generated_Code/TU2.c ****   TPM1_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x01)); /* Set up status and control register */
 127              		.loc 1 173 0
 128 0076 104B     		ldr	r3, .L4+16
 129 0078 0922     		mov	r2, #9
 130 007a 1A60     		str	r2, [r3]
 174:../Generated_Code/TU2.c ****   /* Registration of the device structure */
 175:../Generated_Code/TU2.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
 131              		.loc 1 175 0
 132 007c 0A4B     		ldr	r3, .L4
 133 007e FA68     		ldr	r2, [r7, #12]
 134 0080 5A61     		str	r2, [r3, #20]
 176:../Generated_Code/TU2.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 135              		.loc 1 176 0
 136 0082 FB68     		ldr	r3, [r7, #12]
 137 0084 0CE0     		b	.L3
 138              	.L2:
 143:../Generated_Code/TU2.c ****     DeviceDataPrv = PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
 139              		.loc 1 143 0
 140 0086 084B     		ldr	r3, .L4
 141 0088 5B69     		ldr	r3, [r3, #20]
 142 008a FB60     		str	r3, [r7, #12]
 144:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 143              		.loc 1 144 0
 144 008c FB68     		ldr	r3, [r7, #12]
 145 008e 7A68     		ldr	r2, [r7, #4]
 146 0090 9A60     		str	r2, [r3, #8]
 145:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 147              		.loc 1 145 0
 148 0092 FB68     		ldr	r3, [r7, #12]
 149 0094 1B79     		ldrb	r3, [r3, #4]
 150 0096 0133     		add	r3, r3, #1
 151 0098 DAB2     		uxtb	r2, r3
 152 009a FB68     		ldr	r3, [r7, #12]
 153 009c 1A71     		strb	r2, [r3, #4]
 146:../Generated_Code/TU2.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 154              		.loc 1 146 0
 155 009e FB68     		ldr	r3, [r7, #12]
 156              	.L3:
 177:../Generated_Code/TU2.c **** }
 157              		.loc 1 177 0
 158 00a0 181C     		mov	r0, r3
 159 00a2 BD46     		mov	sp, r7
 160 00a4 04B0     		add	sp, sp, #16
 161              		@ sp needed for prologue
 162 00a6 80BD     		pop	{r7, pc}
 163              	.L5:
 164              		.align	2
 165              	.L4:
 166 00a8 00000000 		.word	PE_LDD_DeviceDataList
 167 00ac 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 168 00b0 00700440 		.word	1074032640
 169 00b4 3C100000 		.word	4156
 170 00b8 00900340 		.word	1073975296
 171 00bc CCCC0000 		.word	52428
 172 00c0 66660000 		.word	26214
 173 00c4 00D00440 		.word	1074057216
 174 00c8 FFF8FFFE 		.word	-16779009
 175              		.cfi_endproc
 176              	.LFE0:
 178              		.section	.text.TU2_Deinit,"ax",%progbits
 179              		.align	2
 180              		.global	TU2_Deinit
 181              		.code	16
 182              		.thumb_func
 184              	TU2_Deinit:
 185              	.LFB1:
 178:../Generated_Code/TU2.c **** 
 179:../Generated_Code/TU2.c **** /*
 180:../Generated_Code/TU2.c **** ** ===================================================================
 181:../Generated_Code/TU2.c **** **     Method      :  TU2_Deinit (component TimerUnit_LDD)
 182:../Generated_Code/TU2.c **** **
 183:../Generated_Code/TU2.c **** **     Description :
 184:../Generated_Code/TU2.c **** **         Deinitializes the device. Switches off the device, frees the
 185:../Generated_Code/TU2.c **** **         device data structure memory, interrupts vectors, etc.
 186:../Generated_Code/TU2.c **** **     Parameters  :
 187:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 188:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 189:../Generated_Code/TU2.c **** **                           pointer returned by Init method
 190:../Generated_Code/TU2.c **** **     Returns     : Nothing
 191:../Generated_Code/TU2.c **** ** ===================================================================
 192:../Generated_Code/TU2.c **** */
 193:../Generated_Code/TU2.c **** void TU2_Deinit(LDD_TDeviceData *DeviceDataPtr)
 194:../Generated_Code/TU2.c **** {
 186              		.loc 1 194 0
 187              		.cfi_startproc
 188 0000 80B5     		push	{r7, lr}
 189              	.LCFI3:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 84B0     		sub	sp, sp, #16
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 24
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI5:
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 195:../Generated_Code/TU2.c ****   TU2_TDeviceData *DeviceDataPrv = (TU2_TDeviceData *)DeviceDataPtr;
 200              		.loc 1 195 0
 201 0008 7B68     		ldr	r3, [r7, #4]
 202 000a FB60     		str	r3, [r7, #12]
 196:../Generated_Code/TU2.c **** 
 197:../Generated_Code/TU2.c ****   DeviceDataPrv->InitCntr--;           /* Decrement counter of initialization */
 203              		.loc 1 197 0
 204 000c FB68     		ldr	r3, [r7, #12]
 205 000e 1B79     		ldrb	r3, [r3, #4]
 206 0010 013B     		sub	r3, r3, #1
 207 0012 DAB2     		uxtb	r2, r3
 208 0014 FB68     		ldr	r3, [r7, #12]
 209 0016 1A71     		strb	r2, [r3, #4]
 198:../Generated_Code/TU2.c ****   if ((DeviceDataPrv->InitCntr) > 0U) { /* Is the result greater or equal than zero ? */
 210              		.loc 1 198 0
 211 0018 FB68     		ldr	r3, [r7, #12]
 212 001a 1B79     		ldrb	r3, [r3, #4]
 213 001c 002B     		cmp	r3, #0
 214 001e 09D1     		bne	.L9
 215              	.L7:
 199:../Generated_Code/TU2.c ****     return;                            /* If yes then de-initialization isn't complete */
 200:../Generated_Code/TU2.c ****   }
 201:../Generated_Code/TU2.c ****   TPM_PDD_SelectPrescalerSource(TPM1_BASE_PTR, TPM_PDD_DISABLED);
 216              		.loc 1 201 0
 217 0020 064B     		ldr	r3, .L10
 218 0022 064A     		ldr	r2, .L10
 219 0024 1268     		ldr	r2, [r2]
 220 0026 9821     		mov	r1, #152
 221 0028 8A43     		bic	r2, r1
 222 002a 1A60     		str	r2, [r3]
 202:../Generated_Code/TU2.c ****   /* Unregistration of the device structure */
 203:../Generated_Code/TU2.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID);
 223              		.loc 1 203 0
 224 002c 044B     		ldr	r3, .L10+4
 225 002e 0022     		mov	r2, #0
 226 0030 5A61     		str	r2, [r3, #20]
 227 0032 00E0     		b	.L6
 228              	.L9:
 199:../Generated_Code/TU2.c ****     return;                            /* If yes then de-initialization isn't complete */
 229              		.loc 1 199 0
 230 0034 C046     		mov	r8, r8
 231              	.L6:
 204:../Generated_Code/TU2.c ****   /* Deallocation of the device structure */
 205:../Generated_Code/TU2.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 206:../Generated_Code/TU2.c **** }
 232              		.loc 1 206 0
 233 0036 BD46     		mov	sp, r7
 234 0038 04B0     		add	sp, sp, #16
 235              		@ sp needed for prologue
 236 003a 80BD     		pop	{r7, pc}
 237              	.L11:
 238              		.align	2
 239              	.L10:
 240 003c 00900340 		.word	1073975296
 241 0040 00000000 		.word	PE_LDD_DeviceDataList
 242              		.cfi_endproc
 243              	.LFE1:
 245              		.section	.text.TU2_Enable,"ax",%progbits
 246              		.align	2
 247              		.global	TU2_Enable
 248              		.code	16
 249              		.thumb_func
 251              	TU2_Enable:
 252              	.LFB2:
 207:../Generated_Code/TU2.c **** 
 208:../Generated_Code/TU2.c **** /*
 209:../Generated_Code/TU2.c **** ** ===================================================================
 210:../Generated_Code/TU2.c **** **     Method      :  TU2_Enable (component TimerUnit_LDD)
 211:../Generated_Code/TU2.c **** **
 212:../Generated_Code/TU2.c **** **     Description :
 213:../Generated_Code/TU2.c **** **         Enables the component - it starts the signal generation.
 214:../Generated_Code/TU2.c **** **         Events may be generated (see SetEventMask). The method is
 215:../Generated_Code/TU2.c **** **         not available if the counter can't be disabled/enabled by HW.
 216:../Generated_Code/TU2.c **** **     Parameters  :
 217:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 218:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 219:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 220:../Generated_Code/TU2.c **** **     Returns     :
 221:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 222:../Generated_Code/TU2.c **** **                           ERR_OK - OK
 223:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 224:../Generated_Code/TU2.c **** **                           the active clock configuration
 225:../Generated_Code/TU2.c **** ** ===================================================================
 226:../Generated_Code/TU2.c **** */
 227:../Generated_Code/TU2.c **** LDD_TError TU2_Enable(LDD_TDeviceData *DeviceDataPtr)
 228:../Generated_Code/TU2.c **** {
 253              		.loc 1 228 0
 254              		.cfi_startproc
 255 0000 80B5     		push	{r7, lr}
 256              	.LCFI6:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 84B0     		sub	sp, sp, #16
 261              	.LCFI7:
 262              		.cfi_def_cfa_offset 24
 263 0004 00AF     		add	r7, sp, #0
 264              	.LCFI8:
 265              		.cfi_def_cfa_register 7
 266 0006 7860     		str	r0, [r7, #4]
 229:../Generated_Code/TU2.c ****   TU2_TDeviceData *DeviceDataPrv = (TU2_TDeviceData *)DeviceDataPtr;
 267              		.loc 1 229 0
 268 0008 7B68     		ldr	r3, [r7, #4]
 269 000a FB60     		str	r3, [r7, #12]
 230:../Generated_Code/TU2.c **** 
 231:../Generated_Code/TU2.c ****   TPM_PDD_SelectPrescalerSource(TPM1_BASE_PTR, DeviceDataPrv->Source); /* Enable the device */
 270              		.loc 1 231 0
 271 000c 074B     		ldr	r3, .L13
 272 000e 074A     		ldr	r2, .L13
 273 0010 1268     		ldr	r2, [r2]
 274 0012 9821     		mov	r1, #152
 275 0014 101C     		mov	r0, r2
 276 0016 8843     		bic	r0, r1
 277 0018 011C     		mov	r1, r0
 278 001a FA68     		ldr	r2, [r7, #12]
 279 001c 1268     		ldr	r2, [r2]
 280 001e 0A43     		orr	r2, r1
 281 0020 1A60     		str	r2, [r3]
 232:../Generated_Code/TU2.c ****   return ERR_OK;
 282              		.loc 1 232 0
 283 0022 0023     		mov	r3, #0
 233:../Generated_Code/TU2.c **** }
 284              		.loc 1 233 0
 285 0024 181C     		mov	r0, r3
 286 0026 BD46     		mov	sp, r7
 287 0028 04B0     		add	sp, sp, #16
 288              		@ sp needed for prologue
 289 002a 80BD     		pop	{r7, pc}
 290              	.L14:
 291              		.align	2
 292              	.L13:
 293 002c 00900340 		.word	1073975296
 294              		.cfi_endproc
 295              	.LFE2:
 297              		.section	.text.TU2_Disable,"ax",%progbits
 298              		.align	2
 299              		.global	TU2_Disable
 300              		.code	16
 301              		.thumb_func
 303              	TU2_Disable:
 304              	.LFB3:
 234:../Generated_Code/TU2.c **** 
 235:../Generated_Code/TU2.c **** /*
 236:../Generated_Code/TU2.c **** ** ===================================================================
 237:../Generated_Code/TU2.c **** **     Method      :  TU2_Disable (component TimerUnit_LDD)
 238:../Generated_Code/TU2.c **** **
 239:../Generated_Code/TU2.c **** **     Description :
 240:../Generated_Code/TU2.c **** **         Disables the component - it stops signal generation and
 241:../Generated_Code/TU2.c **** **         events calling. The method is not available if the counter
 242:../Generated_Code/TU2.c **** **         can't be disabled/enabled by HW.
 243:../Generated_Code/TU2.c **** **     Parameters  :
 244:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 245:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 246:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 247:../Generated_Code/TU2.c **** **     Returns     :
 248:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 249:../Generated_Code/TU2.c **** **                           ERR_OK - OK
 250:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 251:../Generated_Code/TU2.c **** **                           the active clock configuration
 252:../Generated_Code/TU2.c **** ** ===================================================================
 253:../Generated_Code/TU2.c **** */
 254:../Generated_Code/TU2.c **** LDD_TError TU2_Disable(LDD_TDeviceData *DeviceDataPtr)
 255:../Generated_Code/TU2.c **** {
 305              		.loc 1 255 0
 306              		.cfi_startproc
 307 0000 80B5     		push	{r7, lr}
 308              	.LCFI9:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 82B0     		sub	sp, sp, #8
 313              	.LCFI10:
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI11:
 317              		.cfi_def_cfa_register 7
 318 0006 7860     		str	r0, [r7, #4]
 256:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 257:../Generated_Code/TU2.c ****   TPM_PDD_SelectPrescalerSource(TPM1_BASE_PTR, TPM_PDD_DISABLED);
 319              		.loc 1 257 0
 320 0008 054B     		ldr	r3, .L16
 321 000a 054A     		ldr	r2, .L16
 322 000c 1268     		ldr	r2, [r2]
 323 000e 9821     		mov	r1, #152
 324 0010 8A43     		bic	r2, r1
 325 0012 1A60     		str	r2, [r3]
 258:../Generated_Code/TU2.c ****   return ERR_OK;
 326              		.loc 1 258 0
 327 0014 0023     		mov	r3, #0
 259:../Generated_Code/TU2.c **** }
 328              		.loc 1 259 0
 329 0016 181C     		mov	r0, r3
 330 0018 BD46     		mov	sp, r7
 331 001a 02B0     		add	sp, sp, #8
 332              		@ sp needed for prologue
 333 001c 80BD     		pop	{r7, pc}
 334              	.L17:
 335 001e C046     		.align	2
 336              	.L16:
 337 0020 00900340 		.word	1073975296
 338              		.cfi_endproc
 339              	.LFE3:
 341              		.section	.text.TU2_GetPeriodTicks,"ax",%progbits
 342              		.align	2
 343              		.global	TU2_GetPeriodTicks
 344              		.code	16
 345              		.thumb_func
 347              	TU2_GetPeriodTicks:
 348              	.LFB4:
 260:../Generated_Code/TU2.c **** 
 261:../Generated_Code/TU2.c **** /*
 262:../Generated_Code/TU2.c **** ** ===================================================================
 263:../Generated_Code/TU2.c **** **     Method      :  TU2_GetPeriodTicks (component TimerUnit_LDD)
 264:../Generated_Code/TU2.c **** **
 265:../Generated_Code/TU2.c **** **     Description :
 266:../Generated_Code/TU2.c **** **         Returns the number of counter ticks before re-initialization.
 267:../Generated_Code/TU2.c **** **         See also method <SetPeriodTicks>. This method is available
 268:../Generated_Code/TU2.c **** **         only if the property <"Counter restart"> is switched to
 269:../Generated_Code/TU2.c **** **         'on-match' value.
 270:../Generated_Code/TU2.c **** **     Parameters  :
 271:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 272:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 273:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 274:../Generated_Code/TU2.c **** **       * TicksPtr        - Pointer to return value of the
 275:../Generated_Code/TU2.c **** **                           number of counter ticks before
 276:../Generated_Code/TU2.c **** **                           re-initialization
 277:../Generated_Code/TU2.c **** **     Returns     :
 278:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 279:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 280:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 281:../Generated_Code/TU2.c **** **                           the active clock configuration
 282:../Generated_Code/TU2.c **** ** ===================================================================
 283:../Generated_Code/TU2.c **** */
 284:../Generated_Code/TU2.c **** LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_TValueType *TicksPtr)
 285:../Generated_Code/TU2.c **** {
 349              		.loc 1 285 0
 350              		.cfi_startproc
 351 0000 80B5     		push	{r7, lr}
 352              	.LCFI12:
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 84B0     		sub	sp, sp, #16
 357              	.LCFI13:
 358              		.cfi_def_cfa_offset 24
 359 0004 00AF     		add	r7, sp, #0
 360              	.LCFI14:
 361              		.cfi_def_cfa_register 7
 362 0006 7860     		str	r0, [r7, #4]
 363 0008 3960     		str	r1, [r7]
 286:../Generated_Code/TU2.c ****   uint16_t tmp;
 287:../Generated_Code/TU2.c **** 
 288:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 289:../Generated_Code/TU2.c ****   tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM1_BASE_PTR));
 364              		.loc 1 289 0
 365 000a 0B4B     		ldr	r3, .L19
 366 000c 9B68     		ldr	r3, [r3, #8]
 367 000e 1A1C     		mov	r2, r3
 368 0010 3B1C     		mov	r3, r7
 369 0012 0E33     		add	r3, r3, #14
 370 0014 1A80     		strh	r2, [r3]
 290:../Generated_Code/TU2.c ****   *TicksPtr = (TU2_TValueType)++tmp;
 371              		.loc 1 290 0
 372 0016 3B1C     		mov	r3, r7
 373 0018 0E33     		add	r3, r3, #14
 374 001a 3A1C     		mov	r2, r7
 375 001c 0E32     		add	r2, r2, #14
 376 001e 1288     		ldrh	r2, [r2]
 377 0020 0132     		add	r2, r2, #1
 378 0022 1A80     		strh	r2, [r3]
 379 0024 3B68     		ldr	r3, [r7]
 380 0026 3A1C     		mov	r2, r7
 381 0028 0E32     		add	r2, r2, #14
 382 002a 1288     		ldrh	r2, [r2]
 383 002c 1A80     		strh	r2, [r3]
 291:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 384              		.loc 1 291 0
 385 002e 0023     		mov	r3, #0
 292:../Generated_Code/TU2.c **** }
 386              		.loc 1 292 0
 387 0030 181C     		mov	r0, r3
 388 0032 BD46     		mov	sp, r7
 389 0034 04B0     		add	sp, sp, #16
 390              		@ sp needed for prologue
 391 0036 80BD     		pop	{r7, pc}
 392              	.L20:
 393              		.align	2
 394              	.L19:
 395 0038 00900340 		.word	1073975296
 396              		.cfi_endproc
 397              	.LFE4:
 399              		.section	.text.TU2_ResetCounter,"ax",%progbits
 400              		.align	2
 401              		.global	TU2_ResetCounter
 402              		.code	16
 403              		.thumb_func
 405              	TU2_ResetCounter:
 406              	.LFB5:
 293:../Generated_Code/TU2.c **** 
 294:../Generated_Code/TU2.c **** /*
 295:../Generated_Code/TU2.c **** ** ===================================================================
 296:../Generated_Code/TU2.c **** **     Method      :  TU2_ResetCounter (component TimerUnit_LDD)
 297:../Generated_Code/TU2.c **** **
 298:../Generated_Code/TU2.c **** **     Description :
 299:../Generated_Code/TU2.c **** **         Resets counter. If counter is counting up then it is set to
 300:../Generated_Code/TU2.c **** **         zero. If counter is counting down then counter is updated to
 301:../Generated_Code/TU2.c **** **         the reload value.
 302:../Generated_Code/TU2.c **** **         The method is not available if HW doesn't allow resetting of
 303:../Generated_Code/TU2.c **** **         the counter.
 304:../Generated_Code/TU2.c **** **     Parameters  :
 305:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 306:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 307:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 308:../Generated_Code/TU2.c **** **     Returns     :
 309:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 310:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 311:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 312:../Generated_Code/TU2.c **** **                           the active clock configuration
 313:../Generated_Code/TU2.c **** ** ===================================================================
 314:../Generated_Code/TU2.c **** */
 315:../Generated_Code/TU2.c **** LDD_TError TU2_ResetCounter(LDD_TDeviceData *DeviceDataPtr)
 316:../Generated_Code/TU2.c **** {
 407              		.loc 1 316 0
 408              		.cfi_startproc
 409 0000 80B5     		push	{r7, lr}
 410              	.LCFI15:
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 7, -8
 413              		.cfi_offset 14, -4
 414 0002 82B0     		sub	sp, sp, #8
 415              	.LCFI16:
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              	.LCFI17:
 419              		.cfi_def_cfa_register 7
 420 0006 7860     		str	r0, [r7, #4]
 317:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 318:../Generated_Code/TU2.c ****   TPM_PDD_InitializeCounter(TPM1_BASE_PTR);
 421              		.loc 1 318 0
 422 0008 034B     		ldr	r3, .L22
 423 000a 0022     		mov	r2, #0
 424 000c 5A60     		str	r2, [r3, #4]
 319:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 425              		.loc 1 319 0
 426 000e 0023     		mov	r3, #0
 320:../Generated_Code/TU2.c **** }
 427              		.loc 1 320 0
 428 0010 181C     		mov	r0, r3
 429 0012 BD46     		mov	sp, r7
 430 0014 02B0     		add	sp, sp, #8
 431              		@ sp needed for prologue
 432 0016 80BD     		pop	{r7, pc}
 433              	.L23:
 434              		.align	2
 435              	.L22:
 436 0018 00900340 		.word	1073975296
 437              		.cfi_endproc
 438              	.LFE5:
 440              		.section	.text.TU2_GetCounterValue,"ax",%progbits
 441              		.align	2
 442              		.global	TU2_GetCounterValue
 443              		.code	16
 444              		.thumb_func
 446              	TU2_GetCounterValue:
 447              	.LFB6:
 321:../Generated_Code/TU2.c **** 
 322:../Generated_Code/TU2.c **** /*
 323:../Generated_Code/TU2.c **** ** ===================================================================
 324:../Generated_Code/TU2.c **** **     Method      :  TU2_GetCounterValue (component TimerUnit_LDD)
 325:../Generated_Code/TU2.c **** **
 326:../Generated_Code/TU2.c **** **     Description :
 327:../Generated_Code/TU2.c **** **         Returns the content of counter register. This method can be
 328:../Generated_Code/TU2.c **** **         used both if counter is enabled and if counter is disabled.
 329:../Generated_Code/TU2.c **** **         The method is not available if HW doesn't allow reading of
 330:../Generated_Code/TU2.c **** **         the counter.
 331:../Generated_Code/TU2.c **** **     Parameters  :
 332:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 333:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 334:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 335:../Generated_Code/TU2.c **** **     Returns     :
 336:../Generated_Code/TU2.c **** **         ---             - Counter value (number of counted ticks).
 337:../Generated_Code/TU2.c **** ** ===================================================================
 338:../Generated_Code/TU2.c **** */
 339:../Generated_Code/TU2.c **** TU2_TValueType TU2_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 340:../Generated_Code/TU2.c **** {
 448              		.loc 1 340 0
 449              		.cfi_startproc
 450 0000 80B5     		push	{r7, lr}
 451              	.LCFI18:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 82B0     		sub	sp, sp, #8
 456              	.LCFI19:
 457              		.cfi_def_cfa_offset 16
 458 0004 00AF     		add	r7, sp, #0
 459              	.LCFI20:
 460              		.cfi_def_cfa_register 7
 461 0006 7860     		str	r0, [r7, #4]
 341:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 342:../Generated_Code/TU2.c ****   return (TU2_TValueType)TPM_PDD_ReadCounterReg(TPM1_BASE_PTR);
 462              		.loc 1 342 0
 463 0008 034B     		ldr	r3, .L25
 464 000a 5B68     		ldr	r3, [r3, #4]
 465 000c 9BB2     		uxth	r3, r3
 343:../Generated_Code/TU2.c **** }
 466              		.loc 1 343 0
 467 000e 181C     		mov	r0, r3
 468 0010 BD46     		mov	sp, r7
 469 0012 02B0     		add	sp, sp, #8
 470              		@ sp needed for prologue
 471 0014 80BD     		pop	{r7, pc}
 472              	.L26:
 473 0016 C046     		.align	2
 474              	.L25:
 475 0018 00900340 		.word	1073975296
 476              		.cfi_endproc
 477              	.LFE6:
 479              		.section	.text.TU2_SetOffsetTicks,"ax",%progbits
 480              		.align	2
 481              		.global	TU2_SetOffsetTicks
 482              		.code	16
 483              		.thumb_func
 485              	TU2_SetOffsetTicks:
 486              	.LFB7:
 344:../Generated_Code/TU2.c **** 
 345:../Generated_Code/TU2.c **** /*
 346:../Generated_Code/TU2.c **** ** ===================================================================
 347:../Generated_Code/TU2.c **** **     Method      :  TU2_SetOffsetTicks (component TimerUnit_LDD)
 348:../Generated_Code/TU2.c **** **
 349:../Generated_Code/TU2.c **** **     Description :
 350:../Generated_Code/TU2.c **** **         Sets the new offset value to channel specified by the
 351:../Generated_Code/TU2.c **** **         parameter ChannelIdx. It is user responsibility to use value
 352:../Generated_Code/TU2.c **** **         below selected period. This method is available when at
 353:../Generated_Code/TU2.c **** **         least one channel is configured.
 354:../Generated_Code/TU2.c **** **     Parameters  :
 355:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 356:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 357:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 358:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 359:../Generated_Code/TU2.c **** **                           channel.
 360:../Generated_Code/TU2.c **** **         Ticks           - Number of counter ticks to compare
 361:../Generated_Code/TU2.c **** **                           match.
 362:../Generated_Code/TU2.c **** **     Returns     :
 363:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 364:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 365:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 366:../Generated_Code/TU2.c **** **                           out of possible range.
 367:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 368:../Generated_Code/TU2.c **** **                           selected for selected channel
 369:../Generated_Code/TU2.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 370:../Generated_Code/TU2.c **** **                           possible range.
 371:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 372:../Generated_Code/TU2.c **** **                           the active clock configuration
 373:../Generated_Code/TU2.c **** ** ===================================================================
 374:../Generated_Code/TU2.c **** */
 375:../Generated_Code/TU2.c **** LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType Ti
 376:../Generated_Code/TU2.c **** {
 487              		.loc 1 376 0
 488              		.cfi_startproc
 489 0000 80B5     		push	{r7, lr}
 490              	.LCFI21:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 7, -8
 493              		.cfi_offset 14, -4
 494 0002 82B0     		sub	sp, sp, #8
 495              	.LCFI22:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI23:
 499              		.cfi_def_cfa_register 7
 500 0006 7860     		str	r0, [r7, #4]
 501 0008 FB1C     		add	r3, r7, #3
 502 000a 1970     		strb	r1, [r3]
 503 000c 3B1C     		mov	r3, r7
 504 000e 1A80     		strh	r2, [r3]
 377:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 378:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 379:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 380:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 505              		.loc 1 380 0
 506 0010 FB1C     		add	r3, r7, #3
 507 0012 1B78     		ldrb	r3, [r3]
 508 0014 002B     		cmp	r3, #0
 509 0016 01D0     		beq	.L28
 381:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 510              		.loc 1 381 0
 511 0018 8223     		mov	r3, #130
 512 001a 13E0     		b	.L29
 513              	.L28:
 382:../Generated_Code/TU2.c ****   }
 383:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 514              		.loc 1 383 0
 515 001c FB1C     		add	r3, r7, #3
 516 001e 1B78     		ldrb	r3, [r3]
 517 0020 0A4A     		ldr	r2, .L31
 518 0022 D35C     		ldrb	r3, [r2, r3]
 519 0024 002B     		cmp	r3, #0
 520 0026 01D0     		beq	.L30
 384:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 521              		.loc 1 384 0
 522 0028 0923     		mov	r3, #9
 523 002a 0BE0     		b	.L29
 524              	.L30:
 385:../Generated_Code/TU2.c ****   }
 386:../Generated_Code/TU2.c ****   TPM_PDD_WriteChannelValueReg(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 525              		.loc 1 386 0
 526 002c 0849     		ldr	r1, .L31+4
 527 002e FB1C     		add	r3, r7, #3
 528 0030 1B78     		ldrb	r3, [r3]
 529 0032 084A     		ldr	r2, .L31+8
 530 0034 D35C     		ldrb	r3, [r2, r3]
 531 0036 3A1C     		mov	r2, r7
 532 0038 1288     		ldrh	r2, [r2]
 533 003a 0133     		add	r3, r3, #1
 534 003c DB00     		lsl	r3, r3, #3
 535 003e CB18     		add	r3, r1, r3
 536 0040 9A60     		str	r2, [r3, #8]
 387:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 537              		.loc 1 387 0
 538 0042 0023     		mov	r3, #0
 539              	.L29:
 388:../Generated_Code/TU2.c **** }
 540              		.loc 1 388 0
 541 0044 181C     		mov	r0, r3
 542 0046 BD46     		mov	sp, r7
 543 0048 02B0     		add	sp, sp, #8
 544              		@ sp needed for prologue
 545 004a 80BD     		pop	{r7, pc}
 546              	.L32:
 547              		.align	2
 548              	.L31:
 549 004c 00000000 		.word	ChannelMode
 550 0050 00900340 		.word	1073975296
 551 0054 00000000 		.word	ChannelDevice
 552              		.cfi_endproc
 553              	.LFE7:
 555              		.section	.text.TU2_GetOffsetTicks,"ax",%progbits
 556              		.align	2
 557              		.global	TU2_GetOffsetTicks
 558              		.code	16
 559              		.thumb_func
 561              	TU2_GetOffsetTicks:
 562              	.LFB8:
 389:../Generated_Code/TU2.c **** 
 390:../Generated_Code/TU2.c **** /*
 391:../Generated_Code/TU2.c **** ** ===================================================================
 392:../Generated_Code/TU2.c **** **     Method      :  TU2_GetOffsetTicks (component TimerUnit_LDD)
 393:../Generated_Code/TU2.c **** **
 394:../Generated_Code/TU2.c **** **     Description :
 395:../Generated_Code/TU2.c **** **         Returns the number of counter ticks to compare match channel
 396:../Generated_Code/TU2.c **** **         specified by the parameter ChannelIdx. See also method
 397:../Generated_Code/TU2.c **** **         <SetOffsetTicks>. This method is available when at least one
 398:../Generated_Code/TU2.c **** **         channel is configured.
 399:../Generated_Code/TU2.c **** **     Parameters  :
 400:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 401:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 402:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 403:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 404:../Generated_Code/TU2.c **** **                           channel.
 405:../Generated_Code/TU2.c **** **       * TicksPtr        - Pointer to return value of the
 406:../Generated_Code/TU2.c **** **                           number of counter ticks to compare match.
 407:../Generated_Code/TU2.c **** **     Returns     :
 408:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 409:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 410:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 411:../Generated_Code/TU2.c **** **                           out of possible range.
 412:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 413:../Generated_Code/TU2.c **** **                           selected for selected channel.
 414:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 415:../Generated_Code/TU2.c **** **                           the active clock configuration
 416:../Generated_Code/TU2.c **** ** ===================================================================
 417:../Generated_Code/TU2.c **** */
 418:../Generated_Code/TU2.c **** LDD_TError TU2_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType *T
 419:../Generated_Code/TU2.c **** {
 563              		.loc 1 419 0
 564              		.cfi_startproc
 565 0000 80B5     		push	{r7, lr}
 566              	.LCFI24:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 84B0     		sub	sp, sp, #16
 571              	.LCFI25:
 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI26:
 575              		.cfi_def_cfa_register 7
 576 0006 F860     		str	r0, [r7, #12]
 577 0008 7A60     		str	r2, [r7, #4]
 578 000a 3B1C     		mov	r3, r7
 579 000c 0B33     		add	r3, r3, #11
 580 000e 0A1C     		add	r2, r1, #0
 581 0010 1A70     		strb	r2, [r3]
 420:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 421:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 422:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 423:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 582              		.loc 1 423 0
 583 0012 3B1C     		mov	r3, r7
 584 0014 0B33     		add	r3, r3, #11
 585 0016 1B78     		ldrb	r3, [r3]
 586 0018 002B     		cmp	r3, #0
 587 001a 01D0     		beq	.L34
 424:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 588              		.loc 1 424 0
 589 001c 8223     		mov	r3, #130
 590 001e 16E0     		b	.L35
 591              	.L34:
 425:../Generated_Code/TU2.c ****   }
 426:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 592              		.loc 1 426 0
 593 0020 3B1C     		mov	r3, r7
 594 0022 0B33     		add	r3, r3, #11
 595 0024 1B78     		ldrb	r3, [r3]
 596 0026 0C4A     		ldr	r2, .L37
 597 0028 D35C     		ldrb	r3, [r2, r3]
 598 002a 002B     		cmp	r3, #0
 599 002c 01D0     		beq	.L36
 427:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 600              		.loc 1 427 0
 601 002e 0923     		mov	r3, #9
 602 0030 0DE0     		b	.L35
 603              	.L36:
 428:../Generated_Code/TU2.c ****   }
 429:../Generated_Code/TU2.c ****   *TicksPtr = (TU2_TValueType)(TPM_PDD_ReadChannelValueReg(TPM1_BASE_PTR, ChannelDevice[ChannelIdx]
 604              		.loc 1 429 0
 605 0032 0A4A     		ldr	r2, .L37+4
 606 0034 3B1C     		mov	r3, r7
 607 0036 0B33     		add	r3, r3, #11
 608 0038 1B78     		ldrb	r3, [r3]
 609 003a 0949     		ldr	r1, .L37+8
 610 003c CB5C     		ldrb	r3, [r1, r3]
 611 003e 0133     		add	r3, r3, #1
 612 0040 DB00     		lsl	r3, r3, #3
 613 0042 D318     		add	r3, r2, r3
 614 0044 9B68     		ldr	r3, [r3, #8]
 615 0046 9AB2     		uxth	r2, r3
 616 0048 7B68     		ldr	r3, [r7, #4]
 617 004a 1A80     		strh	r2, [r3]
 430:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 618              		.loc 1 430 0
 619 004c 0023     		mov	r3, #0
 620              	.L35:
 431:../Generated_Code/TU2.c **** }
 621              		.loc 1 431 0
 622 004e 181C     		mov	r0, r3
 623 0050 BD46     		mov	sp, r7
 624 0052 04B0     		add	sp, sp, #16
 625              		@ sp needed for prologue
 626 0054 80BD     		pop	{r7, pc}
 627              	.L38:
 628 0056 C046     		.align	2
 629              	.L37:
 630 0058 00000000 		.word	ChannelMode
 631 005c 00900340 		.word	1073975296
 632 0060 00000000 		.word	ChannelDevice
 633              		.cfi_endproc
 634              	.LFE8:
 636              		.section	.text.TU2_SelectOutputAction,"ax",%progbits
 637              		.align	2
 638              		.global	TU2_SelectOutputAction
 639              		.code	16
 640              		.thumb_func
 642              	TU2_SelectOutputAction:
 643              	.LFB9:
 432:../Generated_Code/TU2.c **** 
 433:../Generated_Code/TU2.c **** /*
 434:../Generated_Code/TU2.c **** ** ===================================================================
 435:../Generated_Code/TU2.c **** **     Method      :  TU2_SelectOutputAction (component TimerUnit_LDD)
 436:../Generated_Code/TU2.c **** **
 437:../Generated_Code/TU2.c **** **     Description :
 438:../Generated_Code/TU2.c **** **         Sets the type of compare match and counter overflow action
 439:../Generated_Code/TU2.c **** **         on channel output. This method is available when at least
 440:../Generated_Code/TU2.c **** **         one channel is configured.
 441:../Generated_Code/TU2.c **** **     Parameters  :
 442:../Generated_Code/TU2.c **** **         NAME            - DESCRIPTION
 443:../Generated_Code/TU2.c **** **       * DeviceDataPtr   - Device data structure
 444:../Generated_Code/TU2.c **** **                           pointer returned by <Init> method.
 445:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 446:../Generated_Code/TU2.c **** **                           channel.
 447:../Generated_Code/TU2.c **** **         CompareAction   - Select output action
 448:../Generated_Code/TU2.c **** **                           on compare match
 449:../Generated_Code/TU2.c **** **         CounterAction   - Select output action
 450:../Generated_Code/TU2.c **** **                           on counter overflow
 451:../Generated_Code/TU2.c **** **     Returns     :
 452:../Generated_Code/TU2.c **** **         ---             - Error code, possible codes:
 453:../Generated_Code/TU2.c **** **                           ERR_OK - OK
 454:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 455:../Generated_Code/TU2.c **** **                           out of possible range
 456:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 457:../Generated_Code/TU2.c **** **                           selected channel or counter. Supported
 458:../Generated_Code/TU2.c **** **                           combinations are HW specific.
 459:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 460:../Generated_Code/TU2.c **** **                           the active clock configuration
 461:../Generated_Code/TU2.c **** ** ===================================================================
 462:../Generated_Code/TU2.c **** */
 463:../Generated_Code/TU2.c **** LDD_TError TU2_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit
 464:../Generated_Code/TU2.c **** {
 644              		.loc 1 464 0
 645              		.cfi_startproc
 646 0000 90B5     		push	{r4, r7, lr}
 647              	.LCFI27:
 648              		.cfi_def_cfa_offset 12
 649              		.cfi_offset 4, -12
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 83B0     		sub	sp, sp, #12
 653              	.LCFI28:
 654              		.cfi_def_cfa_offset 24
 655 0004 00AF     		add	r7, sp, #0
 656              	.LCFI29:
 657              		.cfi_def_cfa_register 7
 658 0006 7860     		str	r0, [r7, #4]
 659 0008 081C     		mov	r0, r1
 660 000a 111C     		mov	r1, r2
 661 000c 1A1C     		mov	r2, r3
 662 000e FB1C     		add	r3, r7, #3
 663 0010 1870     		strb	r0, [r3]
 664 0012 BB1C     		add	r3, r7, #2
 665 0014 1970     		strb	r1, [r3]
 666 0016 7B1C     		add	r3, r7, #1
 667 0018 1A70     		strb	r2, [r3]
 465:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 466:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 467:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 468:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 668              		.loc 1 468 0
 669 001a FB1C     		add	r3, r7, #3
 670 001c 1B78     		ldrb	r3, [r3]
 671 001e 002B     		cmp	r3, #0
 672 0020 01D0     		beq	.L40
 469:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 673              		.loc 1 469 0
 674 0022 8223     		mov	r3, #130
 675 0024 06E1     		b	.L41
 676              	.L40:
 470:../Generated_Code/TU2.c ****   }
 471:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 677              		.loc 1 471 0
 678 0026 FB1C     		add	r3, r7, #3
 679 0028 1B78     		ldrb	r3, [r3]
 680 002a 844A     		ldr	r2, .L58
 681 002c D35C     		ldrb	r3, [r2, r3]
 682 002e 002B     		cmp	r3, #0
 683 0030 01D0     		beq	.L42
 472:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 684              		.loc 1 472 0
 685 0032 0923     		mov	r3, #9
 686 0034 FEE0     		b	.L41
 687              	.L42:
 473:../Generated_Code/TU2.c ****   }
 474:../Generated_Code/TU2.c ****   switch (CounterAction) {
 688              		.loc 1 474 0
 689 0036 7B1C     		add	r3, r7, #1
 690 0038 1B78     		ldrb	r3, [r3]
 691 003a 022B     		cmp	r3, #2
 692 003c 00D1     		bne	.LCB514
 693 003e 8CE0     		b	.L45	@long jump
 694              	.LCB514:
 695 0040 032B     		cmp	r3, #3
 696 0042 00D1     		bne	.LCB516
 697 0044 BEE0     		b	.L46	@long jump
 698              	.LCB516:
 699 0046 002B     		cmp	r3, #0
 700 0048 00D0     		beq	.LCB518
 701 004a F0E0     		b	.L57	@long jump
 702              	.LCB518:
 703              	.L44:
 475:../Generated_Code/TU2.c ****     case OUTPUT_NONE:
 476:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_TOGGLE);
 704              		.loc 1 476 0
 705 004c 7C49     		ldr	r1, .L58+4
 706 004e FB1C     		add	r3, r7, #3
 707 0050 1B78     		ldrb	r3, [r3]
 708 0052 7C4A     		ldr	r2, .L58+8
 709 0054 D35C     		ldrb	r3, [r2, r3]
 710 0056 181C     		mov	r0, r3
 711 0058 794A     		ldr	r2, .L58+4
 712 005a FB1C     		add	r3, r7, #3
 713 005c 1B78     		ldrb	r3, [r3]
 714 005e 794C     		ldr	r4, .L58+8
 715 0060 E35C     		ldrb	r3, [r4, r3]
 716 0062 0133     		add	r3, r3, #1
 717 0064 DB00     		lsl	r3, r3, #3
 718 0066 D318     		add	r3, r2, r3
 719 0068 5B68     		ldr	r3, [r3, #4]
 720 006a B022     		mov	r2, #176
 721 006c 9343     		bic	r3, r2
 722 006e 1022     		mov	r2, #16
 723 0070 1A43     		orr	r2, r3
 724 0072 431C     		add	r3, r0, #1
 725 0074 DB00     		lsl	r3, r3, #3
 726 0076 CB18     		add	r3, r1, r3
 727 0078 5A60     		str	r2, [r3, #4]
 477:../Generated_Code/TU2.c ****       switch (CompareAction) {
 728              		.loc 1 477 0
 729 007a BB1C     		add	r3, r7, #2
 730 007c 1B78     		ldrb	r3, [r3]
 731 007e 012B     		cmp	r3, #1
 732 0080 20D0     		beq	.L49
 733 0082 02DC     		bgt	.L52
 734 0084 002B     		cmp	r3, #0
 735 0086 05D0     		beq	.L48
 736 0088 64E0     		b	.L47
 737              	.L52:
 738 008a 022B     		cmp	r3, #2
 739 008c 32D0     		beq	.L50
 740 008e 032B     		cmp	r3, #3
 741 0090 48D0     		beq	.L51
 742 0092 5FE0     		b	.L47
 743              	.L48:
 478:../Generated_Code/TU2.c ****         case OUTPUT_NONE:
 479:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_NON
 744              		.loc 1 479 0
 745 0094 6A49     		ldr	r1, .L58+4
 746 0096 FB1C     		add	r3, r7, #3
 747 0098 1B78     		ldrb	r3, [r3]
 748 009a 6A4A     		ldr	r2, .L58+8
 749 009c D35C     		ldrb	r3, [r2, r3]
 750 009e 181C     		mov	r0, r3
 751 00a0 674A     		ldr	r2, .L58+4
 752 00a2 FB1C     		add	r3, r7, #3
 753 00a4 1B78     		ldrb	r3, [r3]
 754 00a6 674C     		ldr	r4, .L58+8
 755 00a8 E35C     		ldrb	r3, [r4, r3]
 756 00aa 0133     		add	r3, r3, #1
 757 00ac DB00     		lsl	r3, r3, #3
 758 00ae D318     		add	r3, r2, r3
 759 00b0 5B68     		ldr	r3, [r3, #4]
 760 00b2 8C22     		mov	r2, #140
 761 00b4 1C1C     		mov	r4, r3
 762 00b6 9443     		bic	r4, r2
 763 00b8 221C     		mov	r2, r4
 764 00ba 431C     		add	r3, r0, #1
 765 00bc DB00     		lsl	r3, r3, #3
 766 00be CB18     		add	r3, r1, r3
 767 00c0 5A60     		str	r2, [r3, #4]
 480:../Generated_Code/TU2.c ****           break;
 768              		.loc 1 480 0
 769 00c2 49E0     		b	.L53
 770              	.L49:
 481:../Generated_Code/TU2.c ****         case OUTPUT_TOGGLE:
 482:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_RIS
 771              		.loc 1 482 0
 772 00c4 5E49     		ldr	r1, .L58+4
 773 00c6 FB1C     		add	r3, r7, #3
 774 00c8 1B78     		ldrb	r3, [r3]
 775 00ca 5E4A     		ldr	r2, .L58+8
 776 00cc D35C     		ldrb	r3, [r2, r3]
 777 00ce 181C     		mov	r0, r3
 778 00d0 5B4A     		ldr	r2, .L58+4
 779 00d2 FB1C     		add	r3, r7, #3
 780 00d4 1B78     		ldrb	r3, [r3]
 781 00d6 5B4C     		ldr	r4, .L58+8
 782 00d8 E35C     		ldrb	r3, [r4, r3]
 783 00da 0133     		add	r3, r3, #1
 784 00dc DB00     		lsl	r3, r3, #3
 785 00de D318     		add	r3, r2, r3
 786 00e0 5B68     		ldr	r3, [r3, #4]
 787 00e2 8C22     		mov	r2, #140
 788 00e4 9343     		bic	r3, r2
 789 00e6 0422     		mov	r2, #4
 790 00e8 1A43     		orr	r2, r3
 791 00ea 431C     		add	r3, r0, #1
 792 00ec DB00     		lsl	r3, r3, #3
 793 00ee CB18     		add	r3, r1, r3
 794 00f0 5A60     		str	r2, [r3, #4]
 483:../Generated_Code/TU2.c ****           break;
 795              		.loc 1 483 0
 796 00f2 31E0     		b	.L53
 797              	.L50:
 484:../Generated_Code/TU2.c ****         case OUTPUT_CLEAR:
 485:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FAL
 798              		.loc 1 485 0
 799 00f4 5249     		ldr	r1, .L58+4
 800 00f6 FB1C     		add	r3, r7, #3
 801 00f8 1B78     		ldrb	r3, [r3]
 802 00fa 524A     		ldr	r2, .L58+8
 803 00fc D35C     		ldrb	r3, [r2, r3]
 804 00fe 181C     		mov	r0, r3
 805 0100 4F4A     		ldr	r2, .L58+4
 806 0102 FB1C     		add	r3, r7, #3
 807 0104 1B78     		ldrb	r3, [r3]
 808 0106 4F4C     		ldr	r4, .L58+8
 809 0108 E35C     		ldrb	r3, [r4, r3]
 810 010a 0133     		add	r3, r3, #1
 811 010c DB00     		lsl	r3, r3, #3
 812 010e D318     		add	r3, r2, r3
 813 0110 5B68     		ldr	r3, [r3, #4]
 814 0112 8C22     		mov	r2, #140
 815 0114 9343     		bic	r3, r2
 816 0116 0822     		mov	r2, #8
 817 0118 1A43     		orr	r2, r3
 818 011a 431C     		add	r3, r0, #1
 819 011c DB00     		lsl	r3, r3, #3
 820 011e CB18     		add	r3, r1, r3
 821 0120 5A60     		str	r2, [r3, #4]
 486:../Generated_Code/TU2.c ****           break;
 822              		.loc 1 486 0
 823 0122 19E0     		b	.L53
 824              	.L51:
 487:../Generated_Code/TU2.c ****         case OUTPUT_SET:
 488:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOT
 825              		.loc 1 488 0
 826 0124 4649     		ldr	r1, .L58+4
 827 0126 FB1C     		add	r3, r7, #3
 828 0128 1B78     		ldrb	r3, [r3]
 829 012a 464A     		ldr	r2, .L58+8
 830 012c D35C     		ldrb	r3, [r2, r3]
 831 012e 181C     		mov	r0, r3
 832 0130 434A     		ldr	r2, .L58+4
 833 0132 FB1C     		add	r3, r7, #3
 834 0134 1B78     		ldrb	r3, [r3]
 835 0136 434C     		ldr	r4, .L58+8
 836 0138 E35C     		ldrb	r3, [r4, r3]
 837 013a 0133     		add	r3, r3, #1
 838 013c DB00     		lsl	r3, r3, #3
 839 013e D318     		add	r3, r2, r3
 840 0140 5B68     		ldr	r3, [r3, #4]
 841 0142 8C22     		mov	r2, #140
 842 0144 9343     		bic	r3, r2
 843 0146 0C22     		mov	r2, #12
 844 0148 1A43     		orr	r2, r3
 845 014a 431C     		add	r3, r0, #1
 846 014c DB00     		lsl	r3, r3, #3
 847 014e CB18     		add	r3, r1, r3
 848 0150 5A60     		str	r2, [r3, #4]
 489:../Generated_Code/TU2.c ****           break;
 849              		.loc 1 489 0
 850 0152 01E0     		b	.L53
 851              	.L47:
 490:../Generated_Code/TU2.c ****         default:
 491:../Generated_Code/TU2.c ****           return ERR_NOTAVAIL;
 852              		.loc 1 491 0
 853 0154 0923     		mov	r3, #9
 854 0156 6DE0     		b	.L41
 855              	.L53:
 492:../Generated_Code/TU2.c ****       }
 493:../Generated_Code/TU2.c ****       break;
 856              		.loc 1 493 0
 857 0158 6BE0     		b	.L54
 858              	.L45:
 494:../Generated_Code/TU2.c ****     case OUTPUT_CLEAR:
 495:../Generated_Code/TU2.c ****       if (CompareAction != OUTPUT_SET) {
 859              		.loc 1 495 0
 860 015a BB1C     		add	r3, r7, #2
 861 015c 1B78     		ldrb	r3, [r3]
 862 015e 032B     		cmp	r3, #3
 863 0160 01D0     		beq	.L55
 496:../Generated_Code/TU2.c ****         return ERR_NOTAVAIL;
 864              		.loc 1 496 0
 865 0162 0923     		mov	r3, #9
 866 0164 66E0     		b	.L41
 867              	.L55:
 497:../Generated_Code/TU2.c ****       }
 498:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_CLEAR);
 868              		.loc 1 498 0
 869 0166 3649     		ldr	r1, .L58+4
 870 0168 FB1C     		add	r3, r7, #3
 871 016a 1B78     		ldrb	r3, [r3]
 872 016c 354A     		ldr	r2, .L58+8
 873 016e D35C     		ldrb	r3, [r2, r3]
 874 0170 181C     		mov	r0, r3
 875 0172 334A     		ldr	r2, .L58+4
 876 0174 FB1C     		add	r3, r7, #3
 877 0176 1B78     		ldrb	r3, [r3]
 878 0178 324C     		ldr	r4, .L58+8
 879 017a E35C     		ldrb	r3, [r4, r3]
 880 017c 0133     		add	r3, r3, #1
 881 017e DB00     		lsl	r3, r3, #3
 882 0180 D318     		add	r3, r2, r3
 883 0182 5B68     		ldr	r3, [r3, #4]
 884 0184 B022     		mov	r2, #176
 885 0186 9343     		bic	r3, r2
 886 0188 2022     		mov	r2, #32
 887 018a 1A43     		orr	r2, r3
 888 018c 431C     		add	r3, r0, #1
 889 018e DB00     		lsl	r3, r3, #3
 890 0190 CB18     		add	r3, r1, r3
 891 0192 5A60     		str	r2, [r3, #4]
 499:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOTH);
 892              		.loc 1 499 0
 893 0194 2A49     		ldr	r1, .L58+4
 894 0196 FB1C     		add	r3, r7, #3
 895 0198 1B78     		ldrb	r3, [r3]
 896 019a 2A4A     		ldr	r2, .L58+8
 897 019c D35C     		ldrb	r3, [r2, r3]
 898 019e 181C     		mov	r0, r3
 899 01a0 274A     		ldr	r2, .L58+4
 900 01a2 FB1C     		add	r3, r7, #3
 901 01a4 1B78     		ldrb	r3, [r3]
 902 01a6 274C     		ldr	r4, .L58+8
 903 01a8 E35C     		ldrb	r3, [r4, r3]
 904 01aa 0133     		add	r3, r3, #1
 905 01ac DB00     		lsl	r3, r3, #3
 906 01ae D318     		add	r3, r2, r3
 907 01b0 5B68     		ldr	r3, [r3, #4]
 908 01b2 8C22     		mov	r2, #140
 909 01b4 9343     		bic	r3, r2
 910 01b6 0C22     		mov	r2, #12
 911 01b8 1A43     		orr	r2, r3
 912 01ba 431C     		add	r3, r0, #1
 913 01bc DB00     		lsl	r3, r3, #3
 914 01be CB18     		add	r3, r1, r3
 915 01c0 5A60     		str	r2, [r3, #4]
 500:../Generated_Code/TU2.c ****       break;
 916              		.loc 1 500 0
 917 01c2 36E0     		b	.L54
 918              	.L46:
 501:../Generated_Code/TU2.c ****     case OUTPUT_SET:
 502:../Generated_Code/TU2.c ****       if (CompareAction != OUTPUT_CLEAR) {
 919              		.loc 1 502 0
 920 01c4 BB1C     		add	r3, r7, #2
 921 01c6 1B78     		ldrb	r3, [r3]
 922 01c8 022B     		cmp	r3, #2
 923 01ca 01D0     		beq	.L56
 503:../Generated_Code/TU2.c ****         return ERR_NOTAVAIL;
 924              		.loc 1 503 0
 925 01cc 0923     		mov	r3, #9
 926 01ce 31E0     		b	.L41
 927              	.L56:
 504:../Generated_Code/TU2.c ****       }
 505:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_SET);
 928              		.loc 1 505 0
 929 01d0 1B49     		ldr	r1, .L58+4
 930 01d2 FB1C     		add	r3, r7, #3
 931 01d4 1B78     		ldrb	r3, [r3]
 932 01d6 1B4A     		ldr	r2, .L58+8
 933 01d8 D35C     		ldrb	r3, [r2, r3]
 934 01da 181C     		mov	r0, r3
 935 01dc 184A     		ldr	r2, .L58+4
 936 01de FB1C     		add	r3, r7, #3
 937 01e0 1B78     		ldrb	r3, [r3]
 938 01e2 184C     		ldr	r4, .L58+8
 939 01e4 E35C     		ldrb	r3, [r4, r3]
 940 01e6 0133     		add	r3, r3, #1
 941 01e8 DB00     		lsl	r3, r3, #3
 942 01ea D318     		add	r3, r2, r3
 943 01ec 5B68     		ldr	r3, [r3, #4]
 944 01ee B022     		mov	r2, #176
 945 01f0 9343     		bic	r3, r2
 946 01f2 3022     		mov	r2, #48
 947 01f4 1A43     		orr	r2, r3
 948 01f6 431C     		add	r3, r0, #1
 949 01f8 DB00     		lsl	r3, r3, #3
 950 01fa CB18     		add	r3, r1, r3
 951 01fc 5A60     		str	r2, [r3, #4]
 506:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM1_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FALLING
 952              		.loc 1 506 0
 953 01fe 1049     		ldr	r1, .L58+4
 954 0200 FB1C     		add	r3, r7, #3
 955 0202 1B78     		ldrb	r3, [r3]
 956 0204 0F4A     		ldr	r2, .L58+8
 957 0206 D35C     		ldrb	r3, [r2, r3]
 958 0208 181C     		mov	r0, r3
 959 020a 0D4A     		ldr	r2, .L58+4
 960 020c FB1C     		add	r3, r7, #3
 961 020e 1B78     		ldrb	r3, [r3]
 962 0210 0C4C     		ldr	r4, .L58+8
 963 0212 E35C     		ldrb	r3, [r4, r3]
 964 0214 0133     		add	r3, r3, #1
 965 0216 DB00     		lsl	r3, r3, #3
 966 0218 D318     		add	r3, r2, r3
 967 021a 5B68     		ldr	r3, [r3, #4]
 968 021c 8C22     		mov	r2, #140
 969 021e 9343     		bic	r3, r2
 970 0220 0822     		mov	r2, #8
 971 0222 1A43     		orr	r2, r3
 972 0224 431C     		add	r3, r0, #1
 973 0226 DB00     		lsl	r3, r3, #3
 974 0228 CB18     		add	r3, r1, r3
 975 022a 5A60     		str	r2, [r3, #4]
 507:../Generated_Code/TU2.c ****       break;
 976              		.loc 1 507 0
 977 022c 01E0     		b	.L54
 978              	.L57:
 508:../Generated_Code/TU2.c ****     default:
 509:../Generated_Code/TU2.c ****       return ERR_NOTAVAIL;
 979              		.loc 1 509 0
 980 022e 0923     		mov	r3, #9
 981 0230 00E0     		b	.L41
 982              	.L54:
 510:../Generated_Code/TU2.c ****   }
 511:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 983              		.loc 1 511 0
 984 0232 0023     		mov	r3, #0
 985              	.L41:
 512:../Generated_Code/TU2.c **** }
 986              		.loc 1 512 0
 987 0234 181C     		mov	r0, r3
 988 0236 BD46     		mov	sp, r7
 989 0238 03B0     		add	sp, sp, #12
 990              		@ sp needed for prologue
 991 023a 90BD     		pop	{r4, r7, pc}
 992              	.L59:
 993              		.align	2
 994              	.L58:
 995 023c 00000000 		.word	ChannelMode
 996 0240 00900340 		.word	1073975296
 997 0244 00000000 		.word	ChannelDevice
 998              		.cfi_endproc
 999              	.LFE9:
 1001              		.text
 1002              	.Letext0:
 1003              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 1004              		.file 3 "../Generated_Code/IO_Map.h"
 1005              		.file 4 "../Generated_Code/PE_LDD.h"
 1006              		.file 5 "../Generated_Code/TU2.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU2.c
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:18     .rodata.ChannelDevice:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:21     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:24     .rodata.ChannelMode:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:27     .rodata.ChannelMode:00000000 ChannelMode
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:30     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:33     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:36     .text.TU2_Init:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:41     .text.TU2_Init:00000000 TU2_Init
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:166    .text.TU2_Init:000000a8 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:179    .text.TU2_Deinit:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:184    .text.TU2_Deinit:00000000 TU2_Deinit
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:240    .text.TU2_Deinit:0000003c $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:246    .text.TU2_Enable:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:251    .text.TU2_Enable:00000000 TU2_Enable
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:293    .text.TU2_Enable:0000002c $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:298    .text.TU2_Disable:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:303    .text.TU2_Disable:00000000 TU2_Disable
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:337    .text.TU2_Disable:00000020 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:342    .text.TU2_GetPeriodTicks:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:347    .text.TU2_GetPeriodTicks:00000000 TU2_GetPeriodTicks
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:395    .text.TU2_GetPeriodTicks:00000038 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:400    .text.TU2_ResetCounter:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:405    .text.TU2_ResetCounter:00000000 TU2_ResetCounter
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:436    .text.TU2_ResetCounter:00000018 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:441    .text.TU2_GetCounterValue:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:446    .text.TU2_GetCounterValue:00000000 TU2_GetCounterValue
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:475    .text.TU2_GetCounterValue:00000018 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:480    .text.TU2_SetOffsetTicks:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:485    .text.TU2_SetOffsetTicks:00000000 TU2_SetOffsetTicks
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:549    .text.TU2_SetOffsetTicks:0000004c $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:556    .text.TU2_GetOffsetTicks:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:561    .text.TU2_GetOffsetTicks:00000000 TU2_GetOffsetTicks
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:630    .text.TU2_GetOffsetTicks:00000058 $d
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:637    .text.TU2_SelectOutputAction:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:642    .text.TU2_SelectOutputAction:00000000 TU2_SelectOutputAction
C:\Users\LARM\AppData\Local\Temp\ccwX52NB.s:995    .text.TU2_SelectOutputAction:0000023c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
