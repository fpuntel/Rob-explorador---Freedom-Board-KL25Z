   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Cpu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	SR_reg,1,1
  18              		.global	SR_lock
  19              		.section	.bss.SR_lock,"aw",%nobits
  22              	SR_lock:
  23 0000 00       		.space	1
  24              		.section	.text.Cpu_INT_NMIInterrupt,"ax",%progbits
  25              		.align	2
  26              		.global	Cpu_INT_NMIInterrupt
  27              		.code	16
  28              		.thumb_func
  30              	Cpu_INT_NMIInterrupt:
  31              	.LFB0:
  32              		.file 1 "../Generated_Code/Cpu.c"
   1:../Generated_Code/Cpu.c **** /** ###################################################################
   2:../Generated_Code/Cpu.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/Cpu.c **** **     Filename    : Cpu.c
   4:../Generated_Code/Cpu.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/Cpu.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/Cpu.c **** **     Component   : MKL25Z128LK4
   7:../Generated_Code/Cpu.c **** **     Version     : Component 01.025, Driver 01.04, CPU db: 3.00.000
   8:../Generated_Code/Cpu.c **** **     Datasheet   : KL25P80M48SF0RM, Rev.3, Sep 2012
   9:../Generated_Code/Cpu.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/Cpu.c **** **     Date/Time   : 2013-08-21, 17:47, # CodeGen: 22
  11:../Generated_Code/Cpu.c **** **     Abstract    :
  12:../Generated_Code/Cpu.c **** **
  13:../Generated_Code/Cpu.c **** **     Settings    :
  14:../Generated_Code/Cpu.c **** **
  15:../Generated_Code/Cpu.c **** **     Contents    :
  16:../Generated_Code/Cpu.c **** **         No public methods
  17:../Generated_Code/Cpu.c **** **
  18:../Generated_Code/Cpu.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  19:../Generated_Code/Cpu.c **** **     
  20:../Generated_Code/Cpu.c **** **     http      : www.freescale.com
  21:../Generated_Code/Cpu.c **** **     mail      : support@freescale.com
  22:../Generated_Code/Cpu.c **** ** ###################################################################*/
  23:../Generated_Code/Cpu.c **** 
  24:../Generated_Code/Cpu.c **** /* MODULE Cpu. */
  25:../Generated_Code/Cpu.c **** #include "AS1.h"
  26:../Generated_Code/Cpu.c **** #include "RxBuf.h"
  27:../Generated_Code/Cpu.c **** #include "Bit1.h"
  28:../Generated_Code/Cpu.c **** #include "BitIoLdd1.h"
  29:../Generated_Code/Cpu.c **** #include "TRIG.h"
  30:../Generated_Code/Cpu.c **** #include "TU1.h"
  31:../Generated_Code/Cpu.c **** #include "WAIT1.h"
  32:../Generated_Code/Cpu.c **** #include "UTIL1.h"
  33:../Generated_Code/Cpu.c **** #include "LED1.h"
  34:../Generated_Code/Cpu.c **** #include "LEDpin1.h"
  35:../Generated_Code/Cpu.c **** #include "BitIoLdd2.h"
  36:../Generated_Code/Cpu.c **** #include "TU2.h"
  37:../Generated_Code/Cpu.c **** #include "LED2.h"
  38:../Generated_Code/Cpu.c **** #include "Inhr1.h"
  39:../Generated_Code/Cpu.c **** #include "PwmLdd1.h"
  40:../Generated_Code/Cpu.c **** #include "TU3.h"
  41:../Generated_Code/Cpu.c **** #include "LED3.h"
  42:../Generated_Code/Cpu.c **** #include "LEDpin3.h"
  43:../Generated_Code/Cpu.c **** #include "BitIoLdd4.h"
  44:../Generated_Code/Cpu.c **** #include "Inhr2.h"
  45:../Generated_Code/Cpu.c **** #include "PwmLdd2.h"
  46:../Generated_Code/Cpu.c **** #include "MF01.h"
  47:../Generated_Code/Cpu.c **** #include "LEDpin4.h"
  48:../Generated_Code/Cpu.c **** #include "BitIoLdd5.h"
  49:../Generated_Code/Cpu.c **** #include "MF02.h"
  50:../Generated_Code/Cpu.c **** #include "LEDpin5.h"
  51:../Generated_Code/Cpu.c **** #include "BitIoLdd6.h"
  52:../Generated_Code/Cpu.c **** #include "PE_Types.h"
  53:../Generated_Code/Cpu.c **** #include "PE_Error.h"
  54:../Generated_Code/Cpu.c **** #include "PE_Const.h"
  55:../Generated_Code/Cpu.c **** #include "IO_Map.h"
  56:../Generated_Code/Cpu.c **** #include "Events.h"
  57:../Generated_Code/Cpu.c **** #include "Cpu.h"
  58:../Generated_Code/Cpu.c **** 
  59:../Generated_Code/Cpu.c **** /* Global variables */
  60:../Generated_Code/Cpu.c **** volatile uint8_t SR_reg;               /* Current value of the FAULTMASK register */
  61:../Generated_Code/Cpu.c **** volatile uint8_t SR_lock = 0x00U;      /* Lock */
  62:../Generated_Code/Cpu.c **** 
  63:../Generated_Code/Cpu.c **** 
  64:../Generated_Code/Cpu.c **** /*
  65:../Generated_Code/Cpu.c **** ** ===================================================================
  66:../Generated_Code/Cpu.c **** **     Method      :  Cpu_INT_NMIInterrupt (component MKL25Z128LK4)
  67:../Generated_Code/Cpu.c **** **
  68:../Generated_Code/Cpu.c **** **     Description :
  69:../Generated_Code/Cpu.c **** **         This ISR services the Non Maskable Interrupt interrupt.
  70:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
  71:../Generated_Code/Cpu.c **** ** ===================================================================
  72:../Generated_Code/Cpu.c **** */
  73:../Generated_Code/Cpu.c **** PE_ISR(Cpu_INT_NMIInterrupt)
  74:../Generated_Code/Cpu.c **** {
  33              		.loc 1 74 0
  34              		.cfi_startproc
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 00AF     		add	r7, sp, #0
  41              	.LCFI1:
  42              		.cfi_def_cfa_register 7
  75:../Generated_Code/Cpu.c ****   Cpu_OnNMIINT();
  43              		.loc 1 75 0
  44 0004 FFF7FEFF 		bl	Cpu_OnNMIINT
  76:../Generated_Code/Cpu.c **** }
  45              		.loc 1 76 0
  46 0008 BD46     		mov	sp, r7
  47              		@ sp needed for prologue
  48 000a 80BD     		pop	{r7, pc}
  49              		.cfi_endproc
  50              	.LFE0:
  52              		.section	.text.Cpu_Interrupt,"ax",%progbits
  53              		.align	2
  54              		.global	Cpu_Interrupt
  55              		.code	16
  56              		.thumb_func
  58              	Cpu_Interrupt:
  59              	.LFB1:
  77:../Generated_Code/Cpu.c **** 
  78:../Generated_Code/Cpu.c **** /*
  79:../Generated_Code/Cpu.c **** ** ===================================================================
  80:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_Interrupt (component MKL25Z128LK4)
  81:../Generated_Code/Cpu.c **** **
  82:../Generated_Code/Cpu.c **** **     Description :
  83:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
  84:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
  85:../Generated_Code/Cpu.c **** ** ===================================================================
  86:../Generated_Code/Cpu.c **** */
  87:../Generated_Code/Cpu.c **** PE_ISR(Cpu_Interrupt)
  88:../Generated_Code/Cpu.c **** {
  60              		.loc 1 88 0
  61              		.cfi_startproc
  62 0000 80B5     		push	{r7, lr}
  63              	.LCFI2:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 7, -8
  66              		.cfi_offset 14, -4
  67 0002 00AF     		add	r7, sp, #0
  68              	.LCFI3:
  69              		.cfi_def_cfa_register 7
  89:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
  90:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
  70              		.loc 1 90 0
  71              	@ 90 "../Generated_Code/Cpu.c" 1
  72 0004 FFBE     		BKPT 255
  73              	@ 0 "" 2
  91:../Generated_Code/Cpu.c **** }
  74              		.loc 1 91 0
  75              		.code	16
  76 0006 BD46     		mov	sp, r7
  77              		@ sp needed for prologue
  78 0008 80BD     		pop	{r7, pc}
  79              		.cfi_endproc
  80              	.LFE1:
  82 000a C046     		.section	.text.__init_hardware,"ax",%progbits
  83              		.align	2
  84              		.global	__init_hardware
  85              		.code	16
  86              		.thumb_func
  88              	__init_hardware:
  89              	.LFB2:
  92:../Generated_Code/Cpu.c **** 
  93:../Generated_Code/Cpu.c **** 
  94:../Generated_Code/Cpu.c **** /*** !!! Here you can place your own code using property "User data declarations" on the build opti
  95:../Generated_Code/Cpu.c **** 
  96:../Generated_Code/Cpu.c **** /*lint -esym(765,__init_hardware) Disable MISRA rule (8.10) checking for symbols (__init_hardware).
  97:../Generated_Code/Cpu.c **** /*lint -esym(765,Cpu_Interrupt) Disable MISRA rule (8.10) checking for symbols (Cpu_Interrupt). */
  98:../Generated_Code/Cpu.c **** void __init_hardware(void)
  99:../Generated_Code/Cpu.c **** {
  90              		.loc 1 99 0
  91              		.cfi_startproc
  92 0000 80B5     		push	{r7, lr}
  93              	.LCFI4:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 00AF     		add	r7, sp, #0
  98              	.LCFI5:
  99              		.cfi_def_cfa_register 7
 100:../Generated_Code/Cpu.c **** 
 101:../Generated_Code/Cpu.c ****   /*** !!! Here you can place your own code before PE initialization using property "User code befo
 102:../Generated_Code/Cpu.c **** 
 103:../Generated_Code/Cpu.c ****   /*** ### MKL25Z128VLK4 "Cpu" init code ... ***/
 104:../Generated_Code/Cpu.c ****   /*** PE initialization code after reset ***/
 105:../Generated_Code/Cpu.c ****   SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
 100              		.loc 1 105 0
 101 0004 2D4A     		ldr	r2, .L6
 102 0006 2E49     		ldr	r1, .L6+4
 103 0008 2E4B     		ldr	r3, .L6+8
 104 000a D150     		str	r1, [r2, r3]
 106:../Generated_Code/Cpu.c ****   /* Disable the WDOG module */
 107:../Generated_Code/Cpu.c ****   /* SIM_COPC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0
 108:../Generated_Code/Cpu.c ****   SIM_COPC = 0x00U;                                                   
 105              		.loc 1 108 0
 106 000c 2E4A     		ldr	r2, .L6+12
 107 000e 8823     		mov	r3, #136
 108 0010 5B01     		lsl	r3, r3, #5
 109 0012 0021     		mov	r1, #0
 110 0014 D150     		str	r1, [r2, r3]
 109:../Generated_Code/Cpu.c ****   /* System clock initialization */
 110:../Generated_Code/Cpu.c ****   /* SIM_SCGC5: PORTE=1,PORTD=1,PORTB=1,PORTA=1 */
 111:../Generated_Code/Cpu.c ****   SIM_SCGC5 |= SIM_SCGC5_PORTE_MASK |
 111              		.loc 1 111 0
 112 0016 2C4A     		ldr	r2, .L6+12
 113 0018 2B49     		ldr	r1, .L6+12
 114 001a 2C4B     		ldr	r3, .L6+16
 115 001c CB58     		ldr	r3, [r1, r3]
 116 001e D821     		mov	r1, #216
 117 0020 8901     		lsl	r1, r1, #6
 118 0022 1943     		orr	r1, r3
 119 0024 294B     		ldr	r3, .L6+16
 120 0026 D150     		str	r1, [r2, r3]
 112:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTD_MASK |
 113:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTB_MASK |
 114:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
 115:../Generated_Code/Cpu.c ****   /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=0,??=0,??=0,??=0,?
 116:../Generated_Code/Cpu.c ****   SIM_CLKDIV1 = 0x00U;                 /* Update system prescalers */
 121              		.loc 1 116 0
 122 0028 274A     		ldr	r2, .L6+12
 123 002a 294B     		ldr	r3, .L6+20
 124 002c 0021     		mov	r1, #0
 125 002e D150     		str	r1, [r2, r3]
 117:../Generated_Code/Cpu.c ****   /* SIM_SOPT2: PLLFLLSEL=0 */
 118:../Generated_Code/Cpu.c ****   SIM_SOPT2 &= (uint32_t)~(uint32_t)(SIM_SOPT2_PLLFLLSEL_MASK); /* Select FLL as a clock source for
 126              		.loc 1 118 0
 127 0030 254A     		ldr	r2, .L6+12
 128 0032 2549     		ldr	r1, .L6+12
 129 0034 274B     		ldr	r3, .L6+24
 130 0036 CB58     		ldr	r3, [r1, r3]
 131 0038 191C     		mov	r1, r3
 132 003a 274B     		ldr	r3, .L6+28
 133 003c 1940     		and	r1, r3
 134 003e 254B     		ldr	r3, .L6+24
 135 0040 D150     		str	r1, [r2, r3]
 119:../Generated_Code/Cpu.c ****   /* SIM_SOPT1: OSC32KSEL=3 */
 120:../Generated_Code/Cpu.c ****   SIM_SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* LPO 1kHz oscillator drives 32 kHz clock for various pe
 136              		.loc 1 120 0
 137 0042 214B     		ldr	r3, .L6+12
 138 0044 204A     		ldr	r2, .L6+12
 139 0046 1268     		ldr	r2, [r2]
 140 0048 C021     		mov	r1, #192
 141 004a 0903     		lsl	r1, r1, #12
 142 004c 0A43     		orr	r2, r1
 143 004e 1A60     		str	r2, [r3]
 121:../Generated_Code/Cpu.c ****   /* SIM_SOPT2: TPMSRC=1 */
 122:../Generated_Code/Cpu.c ****   SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
 144              		.loc 1 122 0
 145 0050 1D4A     		ldr	r2, .L6+12
 146 0052 1D49     		ldr	r1, .L6+12
 147 0054 1F4B     		ldr	r3, .L6+24
 148 0056 CB58     		ldr	r3, [r1, r3]
 149 0058 191C     		mov	r1, r3
 150 005a 204B     		ldr	r3, .L6+32
 151 005c 0B40     		and	r3, r1
 152 005e 8021     		mov	r1, #128
 153 0060 4904     		lsl	r1, r1, #17
 154 0062 1943     		orr	r1, r3
 155 0064 1B4B     		ldr	r3, .L6+24
 156 0066 D150     		str	r1, [r2, r3]
 123:../Generated_Code/Cpu.c ****                SIM_SOPT2_TPMSRC(0x02)
 124:../Generated_Code/Cpu.c ****               )) | (uint32_t)(
 125:../Generated_Code/Cpu.c ****                SIM_SOPT2_TPMSRC(0x01)
 126:../Generated_Code/Cpu.c ****               ));                      /* Set the TPM clock */
 127:../Generated_Code/Cpu.c ****   /* Switch to FEI Mode */
 128:../Generated_Code/Cpu.c ****   /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
 129:../Generated_Code/Cpu.c ****   MCG_C1 = (MCG_C1_IREFS_MASK | MCG_C1_IRCLKEN_MASK);                                              
 157              		.loc 1 129 0
 158 0068 1D4B     		ldr	r3, .L6+36
 159 006a 0622     		mov	r2, #6
 160 006c 1A70     		strb	r2, [r3]
 130:../Generated_Code/Cpu.c ****   /* MCG_C2: LOCRE0=0,??=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
 131:../Generated_Code/Cpu.c ****   MCG_C2 = 0x00U;                                                   
 161              		.loc 1 131 0
 162 006e 1C4B     		ldr	r3, .L6+36
 163 0070 0022     		mov	r2, #0
 164 0072 5A70     		strb	r2, [r3, #1]
 132:../Generated_Code/Cpu.c ****   /* MCG_C4: DMX32=0,DRST_DRS=0 */
 133:../Generated_Code/Cpu.c ****   MCG_C4 &= (uint8_t)~(uint8_t)((MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS(0x03)));                      
 165              		.loc 1 133 0
 166 0074 1A4B     		ldr	r3, .L6+36
 167 0076 1A4A     		ldr	r2, .L6+36
 168 0078 D278     		ldrb	r2, [r2, #3]
 169 007a D1B2     		uxtb	r1, r2
 170 007c 1F22     		mov	r2, #31
 171 007e 0A40     		and	r2, r1
 172 0080 D2B2     		uxtb	r2, r2
 173 0082 DA70     		strb	r2, [r3, #3]
 134:../Generated_Code/Cpu.c ****   /* OSC0_CR: ERCLKEN=1,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
 135:../Generated_Code/Cpu.c ****   OSC0_CR = OSC_CR_ERCLKEN_MASK;                                                   
 174              		.loc 1 135 0
 175 0084 174B     		ldr	r3, .L6+40
 176 0086 8022     		mov	r2, #128
 177 0088 1A70     		strb	r2, [r3]
 136:../Generated_Code/Cpu.c ****   /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
 137:../Generated_Code/Cpu.c ****   MCG_C5 = 0x00U;                                                   
 178              		.loc 1 137 0
 179 008a 154B     		ldr	r3, .L6+36
 180 008c 0022     		mov	r2, #0
 181 008e 1A71     		strb	r2, [r3, #4]
 138:../Generated_Code/Cpu.c ****   /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
 139:../Generated_Code/Cpu.c ****   MCG_C6 = 0x00U;                                                   
 182              		.loc 1 139 0
 183 0090 134B     		ldr	r3, .L6+36
 184 0092 0022     		mov	r2, #0
 185 0094 5A71     		strb	r2, [r3, #5]
 140:../Generated_Code/Cpu.c ****   while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock
 186              		.loc 1 140 0
 187 0096 C046     		mov	r8, r8
 188              	.L4:
 189              		.loc 1 140 0 is_stmt 0 discriminator 1
 190 0098 114B     		ldr	r3, .L6+36
 191 009a 9B79     		ldrb	r3, [r3, #6]
 192 009c DBB2     		uxtb	r3, r3
 193 009e 1A1C     		mov	r2, r3
 194 00a0 1023     		mov	r3, #16
 195 00a2 1340     		and	r3, r2
 196 00a4 F8D0     		beq	.L4
 141:../Generated_Code/Cpu.c ****   }
 142:../Generated_Code/Cpu.c ****   while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
 197              		.loc 1 142 0 is_stmt 1
 198 00a6 C046     		mov	r8, r8
 199              	.L5:
 200              		.loc 1 142 0 is_stmt 0 discriminator 1
 201 00a8 0D4B     		ldr	r3, .L6+36
 202 00aa 9B79     		ldrb	r3, [r3, #6]
 203 00ac DBB2     		uxtb	r3, r3
 204 00ae 1A1C     		mov	r2, r3
 205 00b0 0C23     		mov	r3, #12
 206 00b2 1340     		and	r3, r2
 207 00b4 F8D1     		bne	.L5
 143:../Generated_Code/Cpu.c ****   }
 144:../Generated_Code/Cpu.c ****   /*** End of PE initialization code after reset ***/
 145:../Generated_Code/Cpu.c **** 
 146:../Generated_Code/Cpu.c ****   /*** !!! Here you can place your own code after PE initialization using property "User code after
 147:../Generated_Code/Cpu.c **** 
 148:../Generated_Code/Cpu.c **** }
 208              		.loc 1 148 0 is_stmt 1
 209 00b6 BD46     		mov	sp, r7
 210              		@ sp needed for prologue
 211 00b8 80BD     		pop	{r7, pc}
 212              	.L7:
 213 00ba C046     		.align	2
 214              	.L6:
 215 00bc 00E000E0 		.word	-536813568
 216 00c0 00000000 		.word	__vect_table
 217 00c4 080D0000 		.word	3336
 218 00c8 00700440 		.word	1074032640
 219 00cc 38100000 		.word	4152
 220 00d0 44100000 		.word	4164
 221 00d4 04100000 		.word	4100
 222 00d8 FFFFFEFF 		.word	-65537
 223 00dc FFFFFFFC 		.word	-50331649
 224 00e0 00400640 		.word	1074151424
 225 00e4 00500640 		.word	1074155520
 226              		.cfi_endproc
 227              	.LFE2:
 229              		.section	.text.PE_low_level_init,"ax",%progbits
 230              		.align	2
 231              		.global	PE_low_level_init
 232              		.code	16
 233              		.thumb_func
 235              	PE_low_level_init:
 236              	.LFB3:
 149:../Generated_Code/Cpu.c **** 
 150:../Generated_Code/Cpu.c **** 
 151:../Generated_Code/Cpu.c **** 
 152:../Generated_Code/Cpu.c **** /*
 153:../Generated_Code/Cpu.c **** ** ===================================================================
 154:../Generated_Code/Cpu.c **** **     Method      :  PE_low_level_init (component MKL25Z128LK4)
 155:../Generated_Code/Cpu.c **** **
 156:../Generated_Code/Cpu.c **** **     Description :
 157:../Generated_Code/Cpu.c **** **         Initializes beans and provides common register initialization. 
 158:../Generated_Code/Cpu.c **** **         The method is called automatically as a part of the 
 159:../Generated_Code/Cpu.c **** **         application initialization code.
 160:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 161:../Generated_Code/Cpu.c **** ** ===================================================================
 162:../Generated_Code/Cpu.c **** */
 163:../Generated_Code/Cpu.c **** void PE_low_level_init(void)
 164:../Generated_Code/Cpu.c **** {
 237              		.loc 1 164 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              	.LCFI6:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 7, -8
 243              		.cfi_offset 14, -4
 244 0002 00AF     		add	r7, sp, #0
 245              	.LCFI7:
 246              		.cfi_def_cfa_register 7
 165:../Generated_Code/Cpu.c ****   #ifdef PEX_RTOS_INIT
 166:../Generated_Code/Cpu.c ****     PEX_RTOS_INIT();                   /* Initialization of the selected RTOS. Macro is defined by 
 167:../Generated_Code/Cpu.c ****   #endif
 168:../Generated_Code/Cpu.c ****       /* Initialization of the SIM module */
 169:../Generated_Code/Cpu.c ****   /* PORTA_PCR4: ISF=0,MUX=7 */
 170:../Generated_Code/Cpu.c ****   PORTA_PCR4 = (uint32_t)((PORTA_PCR4 & (uint32_t)~(uint32_t)(
 247              		.loc 1 170 0
 248 0004 424B     		ldr	r3, .L9
 249 0006 424A     		ldr	r2, .L9
 250 0008 1269     		ldr	r2, [r2, #16]
 251 000a 111C     		mov	r1, r2
 252 000c 414A     		ldr	r2, .L9+4
 253 000e 0A40     		and	r2, r1
 254 0010 E021     		mov	r1, #224
 255 0012 C900     		lsl	r1, r1, #3
 256 0014 0A43     		orr	r2, r1
 257 0016 1A61     		str	r2, [r3, #16]
 171:../Generated_Code/Cpu.c ****                 PORT_PCR_ISF_MASK
 172:../Generated_Code/Cpu.c ****                )) | (uint32_t)(
 173:../Generated_Code/Cpu.c ****                 PORT_PCR_MUX(0x07)
 174:../Generated_Code/Cpu.c ****                ));                                                  
 175:../Generated_Code/Cpu.c ****         /* Initialization of the RCM module */
 176:../Generated_Code/Cpu.c ****   /* RCM_RPFW: RSTFLTSEL=0 */
 177:../Generated_Code/Cpu.c ****   RCM_RPFW &= (uint8_t)~(uint8_t)(RCM_RPFW_RSTFLTSEL(0x1F));                                       
 258              		.loc 1 177 0
 259 0018 3F4B     		ldr	r3, .L9+8
 260 001a 3F4A     		ldr	r2, .L9+8
 261 001c 5279     		ldrb	r2, [r2, #5]
 262 001e D2B2     		uxtb	r2, r2
 263 0020 1F21     		mov	r1, #31
 264 0022 8A43     		bic	r2, r1
 265 0024 D2B2     		uxtb	r2, r2
 266 0026 5A71     		strb	r2, [r3, #5]
 178:../Generated_Code/Cpu.c ****   /* RCM_RPFC: RSTFLTSS=0,RSTFLTSRW=0 */
 179:../Generated_Code/Cpu.c ****   RCM_RPFC &= (uint8_t)~(uint8_t)(
 267              		.loc 1 179 0
 268 0028 3B4B     		ldr	r3, .L9+8
 269 002a 3B4A     		ldr	r2, .L9+8
 270 002c 1279     		ldrb	r2, [r2, #4]
 271 002e D2B2     		uxtb	r2, r2
 272 0030 0721     		mov	r1, #7
 273 0032 8A43     		bic	r2, r1
 274 0034 D2B2     		uxtb	r2, r2
 275 0036 1A71     		strb	r2, [r3, #4]
 180:../Generated_Code/Cpu.c ****                RCM_RPFC_RSTFLTSS_MASK |
 181:../Generated_Code/Cpu.c ****                RCM_RPFC_RSTFLTSRW(0x03)
 182:../Generated_Code/Cpu.c ****               );                                                   
 183:../Generated_Code/Cpu.c ****         /* Initialization of the FTFL_FlashConfig module */
 184:../Generated_Code/Cpu.c ****       /* Initialization of the PMC module */
 185:../Generated_Code/Cpu.c ****   /* PMC_LVDSC1: LVDACK=1,LVDIE=0,LVDRE=1,LVDV=0 */
 186:../Generated_Code/Cpu.c ****   PMC_LVDSC1 = (uint8_t)((PMC_LVDSC1 & (uint8_t)~(uint8_t)(
 276              		.loc 1 186 0
 277 0038 384B     		ldr	r3, .L9+12
 278 003a 384A     		ldr	r2, .L9+12
 279 003c 1278     		ldrb	r2, [r2]
 280 003e D2B2     		uxtb	r2, r2
 281 0040 D2B2     		uxtb	r2, r2
 282 0042 7321     		mov	r1, #115
 283 0044 8A43     		bic	r2, r1
 284 0046 D2B2     		uxtb	r2, r2
 285 0048 5021     		mov	r1, #80
 286 004a 0A43     		orr	r2, r1
 287 004c D2B2     		uxtb	r2, r2
 288 004e D2B2     		uxtb	r2, r2
 289 0050 1A70     		strb	r2, [r3]
 187:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDIE_MASK |
 188:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDV(0x03)
 189:../Generated_Code/Cpu.c ****                )) | (uint8_t)(
 190:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDACK_MASK |
 191:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDRE_MASK
 192:../Generated_Code/Cpu.c ****                ));                                                  
 193:../Generated_Code/Cpu.c ****   /* PMC_LVDSC2: LVWACK=1,LVWIE=0,LVWV=0 */
 194:../Generated_Code/Cpu.c ****   PMC_LVDSC2 = (uint8_t)((PMC_LVDSC2 & (uint8_t)~(uint8_t)(
 290              		.loc 1 194 0
 291 0052 324B     		ldr	r3, .L9+12
 292 0054 314A     		ldr	r2, .L9+12
 293 0056 5278     		ldrb	r2, [r2, #1]
 294 0058 D2B2     		uxtb	r2, r2
 295 005a D2B2     		uxtb	r2, r2
 296 005c 6321     		mov	r1, #99
 297 005e 8A43     		bic	r2, r1
 298 0060 D2B2     		uxtb	r2, r2
 299 0062 4021     		mov	r1, #64
 300 0064 0A43     		orr	r2, r1
 301 0066 D2B2     		uxtb	r2, r2
 302 0068 D2B2     		uxtb	r2, r2
 303 006a 5A70     		strb	r2, [r3, #1]
 195:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWIE_MASK |
 196:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWV(0x03)
 197:../Generated_Code/Cpu.c ****                )) | (uint8_t)(
 198:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWACK_MASK
 199:../Generated_Code/Cpu.c ****                ));                                                  
 200:../Generated_Code/Cpu.c ****   /* PMC_REGSC: BGEN=0,ACKISO=0,BGBE=0 */
 201:../Generated_Code/Cpu.c ****   PMC_REGSC &= (uint8_t)~(uint8_t)(
 304              		.loc 1 201 0
 305 006c 2B4B     		ldr	r3, .L9+12
 306 006e 2B4A     		ldr	r2, .L9+12
 307 0070 9278     		ldrb	r2, [r2, #2]
 308 0072 D2B2     		uxtb	r2, r2
 309 0074 1921     		mov	r1, #25
 310 0076 8A43     		bic	r2, r1
 311 0078 D2B2     		uxtb	r2, r2
 312 007a 9A70     		strb	r2, [r3, #2]
 202:../Generated_Code/Cpu.c ****                 PMC_REGSC_BGEN_MASK |
 203:../Generated_Code/Cpu.c ****                 PMC_REGSC_ACKISO_MASK |
 204:../Generated_Code/Cpu.c ****                 PMC_REGSC_BGBE_MASK
 205:../Generated_Code/Cpu.c ****                );                                                   
 206:../Generated_Code/Cpu.c ****   /* SMC_PMPROT: ??=0,??=0,AVLP=0,??=0,ALLS=0,??=0,AVLLS=0,??=0 */
 207:../Generated_Code/Cpu.c ****   SMC_PMPROT = 0x00U;                  /* Setup Power mode protection register */
 313              		.loc 1 207 0
 314 007c 284B     		ldr	r3, .L9+16
 315 007e 0022     		mov	r2, #0
 316 0080 1A70     		strb	r2, [r3]
 208:../Generated_Code/Cpu.c ****   /* Common initialization of the CPU registers */
 209:../Generated_Code/Cpu.c ****   /* PORTA_PCR20: ISF=0,MUX=7 */
 210:../Generated_Code/Cpu.c ****   PORTA_PCR20 = (uint32_t)((PORTA_PCR20 & (uint32_t)~(uint32_t)(
 317              		.loc 1 210 0
 318 0082 234B     		ldr	r3, .L9
 319 0084 224A     		ldr	r2, .L9
 320 0086 126D     		ldr	r2, [r2, #80]
 321 0088 111C     		mov	r1, r2
 322 008a 224A     		ldr	r2, .L9+4
 323 008c 0A40     		and	r2, r1
 324 008e E021     		mov	r1, #224
 325 0090 C900     		lsl	r1, r1, #3
 326 0092 0A43     		orr	r2, r1
 327 0094 1A65     		str	r2, [r3, #80]
 211:../Generated_Code/Cpu.c ****                  PORT_PCR_ISF_MASK
 212:../Generated_Code/Cpu.c ****                 )) | (uint32_t)(
 213:../Generated_Code/Cpu.c ****                  PORT_PCR_MUX(0x07)
 214:../Generated_Code/Cpu.c ****                 ));                                                  
 215:../Generated_Code/Cpu.c ****   /* NVIC_IPR1: PRI_6=0 */
 216:../Generated_Code/Cpu.c ****   NVIC_IPR1 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_6(0xFF));                                         
 328              		.loc 1 216 0
 329 0096 234A     		ldr	r2, .L9+20
 330 0098 2249     		ldr	r1, .L9+20
 331 009a C123     		mov	r3, #193
 332 009c 9B00     		lsl	r3, r3, #2
 333 009e CB58     		ldr	r3, [r1, r3]
 334 00a0 191C     		mov	r1, r3
 335 00a2 214B     		ldr	r3, .L9+24
 336 00a4 1940     		and	r1, r3
 337 00a6 C123     		mov	r3, #193
 338 00a8 9B00     		lsl	r3, r3, #2
 339 00aa D150     		str	r1, [r2, r3]
 217:../Generated_Code/Cpu.c ****   /* ### RingBufferUInt8 "RxBuf" init code ... */
 218:../Generated_Code/Cpu.c ****   RxBuf_Init();
 340              		.loc 1 218 0
 341 00ac FFF7FEFF 		bl	RxBuf_Init
 219:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be di
 220:../Generated_Code/Cpu.c ****   (void)BitIoLdd1_Init(NULL);
 342              		.loc 1 220 0
 343 00b0 0020     		mov	r0, #0
 344 00b2 FFF7FEFF 		bl	BitIoLdd1_Init
 221:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be di
 222:../Generated_Code/Cpu.c ****   (void)BitIoLdd2_Init(NULL);
 345              		.loc 1 222 0
 346 00b6 0020     		mov	r0, #0
 347 00b8 FFF7FEFF 		bl	BitIoLdd2_Init
 223:../Generated_Code/Cpu.c ****   /* ### LED "LED1" init code ... */
 224:../Generated_Code/Cpu.c ****   LED1_Init(); /* initialize LED driver */
 348              		.loc 1 224 0
 349 00bc 1B4B     		ldr	r3, .L9+28
 350 00be 1B69     		ldr	r3, [r3, #16]
 351 00c0 181C     		mov	r0, r3
 352 00c2 FFF7FEFF 		bl	BitIoLdd2_SetVal
 225:../Generated_Code/Cpu.c ****   /* ### PWM_LDD "PwmLdd1" component auto initialization. Auto initialization feature can be disabl
 226:../Generated_Code/Cpu.c ****   (void)PwmLdd1_Init(NULL);
 353              		.loc 1 226 0
 354 00c6 0020     		mov	r0, #0
 355 00c8 FFF7FEFF 		bl	PwmLdd1_Init
 227:../Generated_Code/Cpu.c ****   /* ### PWM "Inhr1" init code ... */
 228:../Generated_Code/Cpu.c ****   /* ### LED "LED2" init code ... */
 229:../Generated_Code/Cpu.c ****   LED2_Init(); /* initialize LED driver */
 356              		.loc 1 229 0
 357 00cc 0020     		mov	r0, #0
 358 00ce FFF7FEFF 		bl	LED2_SetRatio16
 230:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd4" component auto initialization. Auto initialization feature can be di
 231:../Generated_Code/Cpu.c ****   (void)BitIoLdd4_Init(NULL);
 359              		.loc 1 231 0
 360 00d2 0020     		mov	r0, #0
 361 00d4 FFF7FEFF 		bl	BitIoLdd4_Init
 232:../Generated_Code/Cpu.c ****   /* ### PWM_LDD "PwmLdd2" component auto initialization. Auto initialization feature can be disabl
 233:../Generated_Code/Cpu.c ****   (void)PwmLdd2_Init(NULL);
 362              		.loc 1 233 0
 363 00d8 0020     		mov	r0, #0
 364 00da FFF7FEFF 		bl	PwmLdd2_Init
 234:../Generated_Code/Cpu.c ****   /* ### PWM "Inhr2" init code ... */
 235:../Generated_Code/Cpu.c ****   /* ### LED "LED3" init code ... */
 236:../Generated_Code/Cpu.c ****   LED3_Init(); /* initialize LED driver */
 365              		.loc 1 236 0
 366 00de 134B     		ldr	r3, .L9+28
 367 00e0 1B6A     		ldr	r3, [r3, #32]
 368 00e2 181C     		mov	r0, r3
 369 00e4 FFF7FEFF 		bl	BitIoLdd4_SetVal
 237:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd5" component auto initialization. Auto initialization feature can be di
 238:../Generated_Code/Cpu.c ****   (void)BitIoLdd5_Init(NULL);
 370              		.loc 1 238 0
 371 00e8 0020     		mov	r0, #0
 372 00ea FFF7FEFF 		bl	BitIoLdd5_Init
 239:../Generated_Code/Cpu.c ****   /* ### LED "MF01" init code ... */
 240:../Generated_Code/Cpu.c ****   MF01_Init(); /* initialize LED driver */
 373              		.loc 1 240 0
 374 00ee 0F4B     		ldr	r3, .L9+28
 375 00f0 9B6A     		ldr	r3, [r3, #40]
 376 00f2 181C     		mov	r0, r3
 377 00f4 FFF7FEFF 		bl	BitIoLdd5_SetVal
 241:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd6" component auto initialization. Auto initialization feature can be di
 242:../Generated_Code/Cpu.c ****   (void)BitIoLdd6_Init(NULL);
 378              		.loc 1 242 0
 379 00f8 0020     		mov	r0, #0
 380 00fa FFF7FEFF 		bl	BitIoLdd6_Init
 243:../Generated_Code/Cpu.c ****   /* ### LED "MF02" init code ... */
 244:../Generated_Code/Cpu.c ****   MF02_Init(); /* initialize LED driver */
 381              		.loc 1 244 0
 382 00fe 0B4B     		ldr	r3, .L9+28
 383 0100 DB6A     		ldr	r3, [r3, #44]
 384 0102 181C     		mov	r0, r3
 385 0104 FFF7FEFF 		bl	BitIoLdd6_SetVal
 245:../Generated_Code/Cpu.c ****   __EI();
 386              		.loc 1 245 0
 387              	@ 245 "../Generated_Code/Cpu.c" 1
 388 0108 62B6     		CPSIE i
 389              	@ 0 "" 2
 246:../Generated_Code/Cpu.c **** }
 390              		.loc 1 246 0
 391              		.code	16
 392 010a BD46     		mov	sp, r7
 393              		@ sp needed for prologue
 394 010c 80BD     		pop	{r7, pc}
 395              	.L10:
 396 010e C046     		.align	2
 397              	.L9:
 398 0110 00900440 		.word	1074040832
 399 0114 FFF8FFFE 		.word	-16779009
 400 0118 00F00740 		.word	1074262016
 401 011c 00D00740 		.word	1074253824
 402 0120 00E00740 		.word	1074257920
 403 0124 00E100E0 		.word	-536813312
 404 0128 FFFF00FF 		.word	-16711681
 405 012c 00000000 		.word	PE_LDD_DeviceDataList
 406              		.cfi_endproc
 407              	.LFE3:
 409              		.global	_cfm
 410              		.section	.cfmconfig,"a",%progbits
 411              		.align	2
 414              	_cfm:
 415 0000 FF       		.byte	-1
 416 0001 FF       		.byte	-1
 417 0002 FF       		.byte	-1
 418 0003 FF       		.byte	-1
 419 0004 FF       		.byte	-1
 420 0005 FF       		.byte	-1
 421 0006 FF       		.byte	-1
 422 0007 FF       		.byte	-1
 423 0008 FF       		.byte	-1
 424 0009 FF       		.byte	-1
 425 000a FF       		.byte	-1
 426 000b FF       		.byte	-1
 427 000c 7E       		.byte	126
 428 000d FF       		.byte	-1
 429 000e FF       		.byte	-1
 430 000f FF       		.byte	-1
 431              		.text
 432              	.Letext0:
 433              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 434              		.file 3 "../Generated_Code/IO_Map.h"
 435              		.file 4 "../Generated_Code/Cpu.h"
 436              		.file 5 "../Generated_Code/PE_LDD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Cpu.c
                            *COM*:00000001 SR_reg
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:22     .bss.SR_lock:00000000 SR_lock
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:23     .bss.SR_lock:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:25     .text.Cpu_INT_NMIInterrupt:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:30     .text.Cpu_INT_NMIInterrupt:00000000 Cpu_INT_NMIInterrupt
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:53     .text.Cpu_Interrupt:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:58     .text.Cpu_Interrupt:00000000 Cpu_Interrupt
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:83     .text.__init_hardware:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:88     .text.__init_hardware:00000000 __init_hardware
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:215    .text.__init_hardware:000000bc $d
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:230    .text.PE_low_level_init:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:235    .text.PE_low_level_init:00000000 PE_low_level_init
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:398    .text.PE_low_level_init:00000110 $d
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:414    .cfmconfig:00000000 _cfm
C:\Users\LARM\AppData\Local\Temp\ccGVOi2R.s:411    .cfmconfig:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Cpu_OnNMIINT
__vect_table
RxBuf_Init
BitIoLdd1_Init
BitIoLdd2_Init
BitIoLdd2_SetVal
PwmLdd1_Init
LED2_SetRatio16
BitIoLdd4_Init
PwmLdd2_Init
BitIoLdd4_SetVal
BitIoLdd5_Init
BitIoLdd5_SetVal
BitIoLdd6_Init
BitIoLdd6_SetVal
PE_LDD_DeviceDataList
