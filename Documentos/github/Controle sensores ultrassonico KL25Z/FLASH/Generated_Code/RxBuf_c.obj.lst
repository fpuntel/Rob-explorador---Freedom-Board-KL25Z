   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"RxBuf.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.RxBuf_buffer,"aw",%nobits
  18              		.align	2
  21              	RxBuf_buffer:
  22 0000 00000000 		.space	64
  22      00000000 
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.bss.RxBuf_inIdx,"aw",%nobits
  26              	RxBuf_inIdx:
  27 0000 00       		.space	1
  28              		.section	.bss.RxBuf_outIdx,"aw",%nobits
  31              	RxBuf_outIdx:
  32 0000 00       		.space	1
  33              		.section	.bss.RxBuf_inSize,"aw",%nobits
  36              	RxBuf_inSize:
  37 0000 00       		.space	1
  38              		.section	.text.RxBuf_Put,"ax",%progbits
  39              		.align	2
  40              		.global	RxBuf_Put
  41              		.code	16
  42              		.thumb_func
  44              	RxBuf_Put:
  45              	.LFB0:
  46              		.file 1 "../Generated_Code/RxBuf.c"
   1:../Generated_Code/RxBuf.c **** /** ###################################################################
   2:../Generated_Code/RxBuf.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/RxBuf.c **** **     Filename    : RxBuf.c
   4:../Generated_Code/RxBuf.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/RxBuf.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/RxBuf.c **** **     Component   : RingBufferUInt8
   7:../Generated_Code/RxBuf.c **** **     Version     : Component 01.005, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/RxBuf.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/RxBuf.c **** **     Date/Time   : 2013-08-21, 10:54, # CodeGen: 19
  10:../Generated_Code/RxBuf.c **** **     Abstract    :
  11:../Generated_Code/RxBuf.c **** **         This component implements a ring buffer for 8bit data type.
  12:../Generated_Code/RxBuf.c **** **     Settings    :
  13:../Generated_Code/RxBuf.c **** **          Component name                                 : RxBuf
  14:../Generated_Code/RxBuf.c **** **          Buffer Size                                    : 64
  15:../Generated_Code/RxBuf.c **** **     Contents    :
  16:../Generated_Code/RxBuf.c **** **         Clear           - void RxBuf_Clear(void);
  17:../Generated_Code/RxBuf.c **** **         Put             - byte RxBuf_Put(byte elem);
  18:../Generated_Code/RxBuf.c **** **         Get             - byte RxBuf_Get(byte *elemP);
  19:../Generated_Code/RxBuf.c **** **         NofElements     - byte RxBuf_NofElements(void);
  20:../Generated_Code/RxBuf.c **** **         NofFreeElements - byte RxBuf_NofFreeElements(void);
  21:../Generated_Code/RxBuf.c **** **         Init            - void RxBuf_Init(void);
  22:../Generated_Code/RxBuf.c **** **
  23:../Generated_Code/RxBuf.c **** **     License   :  Open Source (LGPL)
  24:../Generated_Code/RxBuf.c **** **     Copyright : (c) Copyright Erich Styger, 2013, all rights reserved.
  25:../Generated_Code/RxBuf.c **** **     Web: http://www.mcuoneclipse.com
  26:../Generated_Code/RxBuf.c **** **     This an open source software of an embedded component for Processor Expert.
  27:../Generated_Code/RxBuf.c **** **     This is a free software and is opened for education,  research  and commercial developments 
  28:../Generated_Code/RxBuf.c **** **     * This is a free software and there is NO WARRANTY.
  29:../Generated_Code/RxBuf.c **** **     * No restriction on use. You can use, modify and redistribute it for personal, non-profit or
  30:../Generated_Code/RxBuf.c **** **     * Redistributions of source code must retain the above copyright notice.
  31:../Generated_Code/RxBuf.c **** ** ###################################################################*/
  32:../Generated_Code/RxBuf.c **** 
  33:../Generated_Code/RxBuf.c **** /* MODULE RxBuf. */
  34:../Generated_Code/RxBuf.c **** 
  35:../Generated_Code/RxBuf.c **** #include "RxBuf.h"
  36:../Generated_Code/RxBuf.c **** 
  37:../Generated_Code/RxBuf.c **** static uint8_t RxBuf_buffer[RxBuf_BUF_SIZE]; /* ring buffer */
  38:../Generated_Code/RxBuf.c **** static uint8_t RxBuf_inIdx;  /* input index */
  39:../Generated_Code/RxBuf.c **** static uint8_t RxBuf_outIdx; /* output index */
  40:../Generated_Code/RxBuf.c **** static uint8_t RxBuf_inSize; /* size of input data */
  41:../Generated_Code/RxBuf.c **** /*
  42:../Generated_Code/RxBuf.c **** ** ===================================================================
  43:../Generated_Code/RxBuf.c **** **     Method      :  RxBuf_Put (component RingBufferUInt8)
  44:../Generated_Code/RxBuf.c **** **
  45:../Generated_Code/RxBuf.c **** **     Description :
  46:../Generated_Code/RxBuf.c **** **         Puts a new element into the buffer
  47:../Generated_Code/RxBuf.c **** **     Parameters  :
  48:../Generated_Code/RxBuf.c **** **         NAME            - DESCRIPTION
  49:../Generated_Code/RxBuf.c **** **         elem            - New element to be put into the buffer
  50:../Generated_Code/RxBuf.c **** **     Returns     :
  51:../Generated_Code/RxBuf.c **** **         ---             - Error code
  52:../Generated_Code/RxBuf.c **** ** ===================================================================
  53:../Generated_Code/RxBuf.c **** */
  54:../Generated_Code/RxBuf.c **** byte RxBuf_Put(byte elem)
  55:../Generated_Code/RxBuf.c **** {
  47              		.loc 1 55 0
  48              		.cfi_startproc
  49 0000 80B5     		push	{r7, lr}
  50              	.LCFI0:
  51              		.cfi_def_cfa_offset 8
  52              		.cfi_offset 7, -8
  53              		.cfi_offset 14, -4
  54 0002 84B0     		sub	sp, sp, #16
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 24
  57 0004 00AF     		add	r7, sp, #0
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 7
  60 0006 021C     		mov	r2, r0
  61 0008 FB1D     		add	r3, r7, #7
  62 000a 1A70     		strb	r2, [r3]
  56:../Generated_Code/RxBuf.c ****   byte res = ERR_OK;
  63              		.loc 1 56 0
  64 000c 3B1C     		mov	r3, r7
  65 000e 0F33     		add	r3, r3, #15
  66 0010 0022     		mov	r2, #0
  67 0012 1A70     		strb	r2, [r3]
  57:../Generated_Code/RxBuf.c **** 
  58:../Generated_Code/RxBuf.c ****   EnterCritical();
  68              		.loc 1 58 0
  69 0014 224B     		ldr	r3, .L6
  70 0016 1B78     		ldrb	r3, [r3]
  71 0018 DBB2     		uxtb	r3, r3
  72 001a 0133     		add	r3, r3, #1
  73 001c DBB2     		uxtb	r3, r3
  74 001e 204A     		ldr	r2, .L6
  75 0020 191C     		add	r1, r3, #0
  76 0022 1170     		strb	r1, [r2]
  77 0024 012B     		cmp	r3, #1
  78 0026 04D1     		bne	.L2
  79              		.loc 1 58 0 is_stmt 0 discriminator 1
  80 0028 1E4B     		ldr	r3, .L6+4
  81              	@ 58 "../Generated_Code/RxBuf.c" 1
  82 002a EFF31080 		MRS R0, PRIMASK
  83 002e 72B6     		CPSID i
  84 0030 1870     		STRB R0, [r3]
  85              	@ 0 "" 2
  86              		.code	16
  87              	.L2:
  59:../Generated_Code/RxBuf.c ****   if (RxBuf_inSize==RxBuf_BUF_SIZE) {
  88              		.loc 1 59 0 is_stmt 1
  89 0032 1D4B     		ldr	r3, .L6+8
  90 0034 1B78     		ldrb	r3, [r3]
  91 0036 402B     		cmp	r3, #64
  92 0038 04D1     		bne	.L3
  60:../Generated_Code/RxBuf.c ****     res = ERR_TXFULL;
  93              		.loc 1 60 0
  94 003a 3B1C     		mov	r3, r7
  95 003c 0F33     		add	r3, r3, #15
  96 003e 0B22     		mov	r2, #11
  97 0040 1A70     		strb	r2, [r3]
  98 0042 18E0     		b	.L4
  99              	.L3:
  61:../Generated_Code/RxBuf.c ****   } else {
  62:../Generated_Code/RxBuf.c ****     RxBuf_buffer[RxBuf_inIdx] = elem;
 100              		.loc 1 62 0
 101 0044 194B     		ldr	r3, .L6+12
 102 0046 1B78     		ldrb	r3, [r3]
 103 0048 194A     		ldr	r2, .L6+16
 104 004a F91D     		add	r1, r7, #7
 105 004c 0978     		ldrb	r1, [r1]
 106 004e D154     		strb	r1, [r2, r3]
  63:../Generated_Code/RxBuf.c ****     RxBuf_inSize++;
 107              		.loc 1 63 0
 108 0050 154B     		ldr	r3, .L6+8
 109 0052 1B78     		ldrb	r3, [r3]
 110 0054 0133     		add	r3, r3, #1
 111 0056 DAB2     		uxtb	r2, r3
 112 0058 134B     		ldr	r3, .L6+8
 113 005a 1A70     		strb	r2, [r3]
  64:../Generated_Code/RxBuf.c ****     RxBuf_inIdx++;
 114              		.loc 1 64 0
 115 005c 134B     		ldr	r3, .L6+12
 116 005e 1B78     		ldrb	r3, [r3]
 117 0060 0133     		add	r3, r3, #1
 118 0062 DAB2     		uxtb	r2, r3
 119 0064 114B     		ldr	r3, .L6+12
 120 0066 1A70     		strb	r2, [r3]
  65:../Generated_Code/RxBuf.c ****     if (RxBuf_inIdx==RxBuf_BUF_SIZE) {
 121              		.loc 1 65 0
 122 0068 104B     		ldr	r3, .L6+12
 123 006a 1B78     		ldrb	r3, [r3]
 124 006c 402B     		cmp	r3, #64
 125 006e 02D1     		bne	.L4
  66:../Generated_Code/RxBuf.c ****       RxBuf_inIdx = 0;
 126              		.loc 1 66 0
 127 0070 0E4B     		ldr	r3, .L6+12
 128 0072 0022     		mov	r2, #0
 129 0074 1A70     		strb	r2, [r3]
 130              	.L4:
  67:../Generated_Code/RxBuf.c ****     }
  68:../Generated_Code/RxBuf.c ****   }
  69:../Generated_Code/RxBuf.c ****   ExitCritical();
 131              		.loc 1 69 0
 132 0076 0A4B     		ldr	r3, .L6
 133 0078 1B78     		ldrb	r3, [r3]
 134 007a DBB2     		uxtb	r3, r3
 135 007c 013B     		sub	r3, r3, #1
 136 007e DBB2     		uxtb	r3, r3
 137 0080 074A     		ldr	r2, .L6
 138 0082 191C     		add	r1, r3, #0
 139 0084 1170     		strb	r1, [r2]
 140 0086 002B     		cmp	r3, #0
 141 0088 03D1     		bne	.L5
 142              		.loc 1 69 0 is_stmt 0 discriminator 1
 143 008a 064B     		ldr	r3, .L6+4
 144              	@ 69 "../Generated_Code/RxBuf.c" 1
 145 008c 1878     		ldrb r0, [r3]
 146 008e 80F31088 		msr PRIMASK,r0;
 147              		
 148              	@ 0 "" 2
 149              		.code	16
 150              	.L5:
  70:../Generated_Code/RxBuf.c ****   return res;
 151              		.loc 1 70 0 is_stmt 1
 152 0092 3B1C     		mov	r3, r7
 153 0094 0F33     		add	r3, r3, #15
 154 0096 1B78     		ldrb	r3, [r3]
  71:../Generated_Code/RxBuf.c **** }
 155              		.loc 1 71 0
 156 0098 181C     		mov	r0, r3
 157 009a BD46     		mov	sp, r7
 158 009c 04B0     		add	sp, sp, #16
 159              		@ sp needed for prologue
 160 009e 80BD     		pop	{r7, pc}
 161              	.L7:
 162              		.align	2
 163              	.L6:
 164 00a0 00000000 		.word	SR_lock
 165 00a4 00000000 		.word	SR_reg
 166 00a8 00000000 		.word	RxBuf_inSize
 167 00ac 00000000 		.word	RxBuf_inIdx
 168 00b0 00000000 		.word	RxBuf_buffer
 169              		.cfi_endproc
 170              	.LFE0:
 172              		.section	.text.RxBuf_Get,"ax",%progbits
 173              		.align	2
 174              		.global	RxBuf_Get
 175              		.code	16
 176              		.thumb_func
 178              	RxBuf_Get:
 179              	.LFB1:
  72:../Generated_Code/RxBuf.c **** 
  73:../Generated_Code/RxBuf.c **** /*
  74:../Generated_Code/RxBuf.c **** ** ===================================================================
  75:../Generated_Code/RxBuf.c **** **     Method      :  RxBuf_Get (component RingBufferUInt8)
  76:../Generated_Code/RxBuf.c **** **
  77:../Generated_Code/RxBuf.c **** **     Description :
  78:../Generated_Code/RxBuf.c **** **         Removes an element from the buffer
  79:../Generated_Code/RxBuf.c **** **     Parameters  :
  80:../Generated_Code/RxBuf.c **** **         NAME            - DESCRIPTION
  81:../Generated_Code/RxBuf.c **** **       * elemP           - Pointer to where to store the received
  82:../Generated_Code/RxBuf.c **** **                           element
  83:../Generated_Code/RxBuf.c **** **     Returns     :
  84:../Generated_Code/RxBuf.c **** **         ---             - Error code
  85:../Generated_Code/RxBuf.c **** ** ===================================================================
  86:../Generated_Code/RxBuf.c **** */
  87:../Generated_Code/RxBuf.c **** byte RxBuf_Get(byte *elemP)
  88:../Generated_Code/RxBuf.c **** {
 180              		.loc 1 88 0
 181              		.cfi_startproc
 182 0000 80B5     		push	{r7, lr}
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 84B0     		sub	sp, sp, #16
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 24
 190 0004 00AF     		add	r7, sp, #0
 191              	.LCFI5:
 192              		.cfi_def_cfa_register 7
 193 0006 7860     		str	r0, [r7, #4]
  89:../Generated_Code/RxBuf.c ****   byte res = ERR_OK;
 194              		.loc 1 89 0
 195 0008 3B1C     		mov	r3, r7
 196 000a 0F33     		add	r3, r3, #15
 197 000c 0022     		mov	r2, #0
 198 000e 1A70     		strb	r2, [r3]
  90:../Generated_Code/RxBuf.c **** 
  91:../Generated_Code/RxBuf.c ****   EnterCritical();
 199              		.loc 1 91 0
 200 0010 224B     		ldr	r3, .L13
 201 0012 1B78     		ldrb	r3, [r3]
 202 0014 DBB2     		uxtb	r3, r3
 203 0016 0133     		add	r3, r3, #1
 204 0018 DBB2     		uxtb	r3, r3
 205 001a 204A     		ldr	r2, .L13
 206 001c 191C     		add	r1, r3, #0
 207 001e 1170     		strb	r1, [r2]
 208 0020 012B     		cmp	r3, #1
 209 0022 04D1     		bne	.L9
 210              		.loc 1 91 0 is_stmt 0 discriminator 1
 211 0024 1E4B     		ldr	r3, .L13+4
 212              	@ 91 "../Generated_Code/RxBuf.c" 1
 213 0026 EFF31080 		MRS R0, PRIMASK
 214 002a 72B6     		CPSID i
 215 002c 1870     		STRB R0, [r3]
 216              	@ 0 "" 2
 217              		.code	16
 218              	.L9:
  92:../Generated_Code/RxBuf.c ****   if (RxBuf_inSize==0) {
 219              		.loc 1 92 0 is_stmt 1
 220 002e 1D4B     		ldr	r3, .L13+8
 221 0030 1B78     		ldrb	r3, [r3]
 222 0032 002B     		cmp	r3, #0
 223 0034 04D1     		bne	.L10
  93:../Generated_Code/RxBuf.c ****     res = ERR_RXEMPTY;
 224              		.loc 1 93 0
 225 0036 3B1C     		mov	r3, r7
 226 0038 0F33     		add	r3, r3, #15
 227 003a 0A22     		mov	r2, #10
 228 003c 1A70     		strb	r2, [r3]
 229 003e 18E0     		b	.L11
 230              	.L10:
  94:../Generated_Code/RxBuf.c ****   } else {
  95:../Generated_Code/RxBuf.c ****     *elemP = RxBuf_buffer[RxBuf_outIdx];
 231              		.loc 1 95 0
 232 0040 194B     		ldr	r3, .L13+12
 233 0042 1B78     		ldrb	r3, [r3]
 234 0044 194A     		ldr	r2, .L13+16
 235 0046 D25C     		ldrb	r2, [r2, r3]
 236 0048 7B68     		ldr	r3, [r7, #4]
 237 004a 1A70     		strb	r2, [r3]
  96:../Generated_Code/RxBuf.c ****     RxBuf_inSize--;
 238              		.loc 1 96 0
 239 004c 154B     		ldr	r3, .L13+8
 240 004e 1B78     		ldrb	r3, [r3]
 241 0050 013B     		sub	r3, r3, #1
 242 0052 DAB2     		uxtb	r2, r3
 243 0054 134B     		ldr	r3, .L13+8
 244 0056 1A70     		strb	r2, [r3]
  97:../Generated_Code/RxBuf.c ****     RxBuf_outIdx++;
 245              		.loc 1 97 0
 246 0058 134B     		ldr	r3, .L13+12
 247 005a 1B78     		ldrb	r3, [r3]
 248 005c 0133     		add	r3, r3, #1
 249 005e DAB2     		uxtb	r2, r3
 250 0060 114B     		ldr	r3, .L13+12
 251 0062 1A70     		strb	r2, [r3]
  98:../Generated_Code/RxBuf.c ****     if (RxBuf_outIdx==RxBuf_BUF_SIZE) {
 252              		.loc 1 98 0
 253 0064 104B     		ldr	r3, .L13+12
 254 0066 1B78     		ldrb	r3, [r3]
 255 0068 402B     		cmp	r3, #64
 256 006a 02D1     		bne	.L11
  99:../Generated_Code/RxBuf.c ****       RxBuf_outIdx = 0;
 257              		.loc 1 99 0
 258 006c 0E4B     		ldr	r3, .L13+12
 259 006e 0022     		mov	r2, #0
 260 0070 1A70     		strb	r2, [r3]
 261              	.L11:
 100:../Generated_Code/RxBuf.c ****     }
 101:../Generated_Code/RxBuf.c ****   }
 102:../Generated_Code/RxBuf.c ****   ExitCritical();
 262              		.loc 1 102 0
 263 0072 0A4B     		ldr	r3, .L13
 264 0074 1B78     		ldrb	r3, [r3]
 265 0076 DBB2     		uxtb	r3, r3
 266 0078 013B     		sub	r3, r3, #1
 267 007a DBB2     		uxtb	r3, r3
 268 007c 074A     		ldr	r2, .L13
 269 007e 191C     		add	r1, r3, #0
 270 0080 1170     		strb	r1, [r2]
 271 0082 002B     		cmp	r3, #0
 272 0084 03D1     		bne	.L12
 273              		.loc 1 102 0 is_stmt 0 discriminator 1
 274 0086 064B     		ldr	r3, .L13+4
 275              	@ 102 "../Generated_Code/RxBuf.c" 1
 276 0088 1878     		ldrb r0, [r3]
 277 008a 80F31088 		msr PRIMASK,r0;
 278              		
 279              	@ 0 "" 2
 280              		.code	16
 281              	.L12:
 103:../Generated_Code/RxBuf.c ****   return res;
 282              		.loc 1 103 0 is_stmt 1
 283 008e 3B1C     		mov	r3, r7
 284 0090 0F33     		add	r3, r3, #15
 285 0092 1B78     		ldrb	r3, [r3]
 104:../Generated_Code/RxBuf.c **** }
 286              		.loc 1 104 0
 287 0094 181C     		mov	r0, r3
 288 0096 BD46     		mov	sp, r7
 289 0098 04B0     		add	sp, sp, #16
 290              		@ sp needed for prologue
 291 009a 80BD     		pop	{r7, pc}
 292              	.L14:
 293              		.align	2
 294              	.L13:
 295 009c 00000000 		.word	SR_lock
 296 00a0 00000000 		.word	SR_reg
 297 00a4 00000000 		.word	RxBuf_inSize
 298 00a8 00000000 		.word	RxBuf_outIdx
 299 00ac 00000000 		.word	RxBuf_buffer
 300              		.cfi_endproc
 301              	.LFE1:
 303              		.section	.text.RxBuf_NofElements,"ax",%progbits
 304              		.align	2
 305              		.global	RxBuf_NofElements
 306              		.code	16
 307              		.thumb_func
 309              	RxBuf_NofElements:
 310              	.LFB2:
 105:../Generated_Code/RxBuf.c **** 
 106:../Generated_Code/RxBuf.c **** /*
 107:../Generated_Code/RxBuf.c **** ** ===================================================================
 108:../Generated_Code/RxBuf.c **** **     Method      :  RxBuf_NofElements (component RingBufferUInt8)
 109:../Generated_Code/RxBuf.c **** **
 110:../Generated_Code/RxBuf.c **** **     Description :
 111:../Generated_Code/RxBuf.c **** **         Returns the actual number of elements in the buffer.
 112:../Generated_Code/RxBuf.c **** **     Parameters  : None
 113:../Generated_Code/RxBuf.c **** **     Returns     :
 114:../Generated_Code/RxBuf.c **** **         ---             - Number of elements in the buffer.
 115:../Generated_Code/RxBuf.c **** ** ===================================================================
 116:../Generated_Code/RxBuf.c **** */
 117:../Generated_Code/RxBuf.c **** byte RxBuf_NofElements(void)
 118:../Generated_Code/RxBuf.c **** {
 311              		.loc 1 118 0
 312              		.cfi_startproc
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI6:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 00AF     		add	r7, sp, #0
 319              	.LCFI7:
 320              		.cfi_def_cfa_register 7
 119:../Generated_Code/RxBuf.c ****   return RxBuf_inSize;
 321              		.loc 1 119 0
 322 0004 024B     		ldr	r3, .L16
 323 0006 1B78     		ldrb	r3, [r3]
 120:../Generated_Code/RxBuf.c **** }
 324              		.loc 1 120 0
 325 0008 181C     		mov	r0, r3
 326 000a BD46     		mov	sp, r7
 327              		@ sp needed for prologue
 328 000c 80BD     		pop	{r7, pc}
 329              	.L17:
 330 000e C046     		.align	2
 331              	.L16:
 332 0010 00000000 		.word	RxBuf_inSize
 333              		.cfi_endproc
 334              	.LFE2:
 336              		.section	.text.RxBuf_NofFreeElements,"ax",%progbits
 337              		.align	2
 338              		.global	RxBuf_NofFreeElements
 339              		.code	16
 340              		.thumb_func
 342              	RxBuf_NofFreeElements:
 343              	.LFB3:
 121:../Generated_Code/RxBuf.c **** 
 122:../Generated_Code/RxBuf.c **** /*
 123:../Generated_Code/RxBuf.c **** ** ===================================================================
 124:../Generated_Code/RxBuf.c **** **     Method      :  RxBuf_NofFreeElements (component RingBufferUInt8)
 125:../Generated_Code/RxBuf.c **** **
 126:../Generated_Code/RxBuf.c **** **     Description :
 127:../Generated_Code/RxBuf.c **** **         Returns the actual number of free elements/space in the
 128:../Generated_Code/RxBuf.c **** **         buffer.
 129:../Generated_Code/RxBuf.c **** **     Parameters  : None
 130:../Generated_Code/RxBuf.c **** **     Returns     :
 131:../Generated_Code/RxBuf.c **** **         ---             - Number of elements in the buffer.
 132:../Generated_Code/RxBuf.c **** ** ===================================================================
 133:../Generated_Code/RxBuf.c **** */
 134:../Generated_Code/RxBuf.c **** byte RxBuf_NofFreeElements(void)
 135:../Generated_Code/RxBuf.c **** {
 344              		.loc 1 135 0
 345              		.cfi_startproc
 346 0000 80B5     		push	{r7, lr}
 347              	.LCFI8:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 00AF     		add	r7, sp, #0
 352              	.LCFI9:
 353              		.cfi_def_cfa_register 7
 136:../Generated_Code/RxBuf.c ****   return (byte)(RxBuf_BUF_SIZE-RxBuf_inSize);
 354              		.loc 1 136 0
 355 0004 034B     		ldr	r3, .L19
 356 0006 1B78     		ldrb	r3, [r3]
 357 0008 4022     		mov	r2, #64
 358 000a D31A     		sub	r3, r2, r3
 359 000c DBB2     		uxtb	r3, r3
 137:../Generated_Code/RxBuf.c **** }
 360              		.loc 1 137 0
 361 000e 181C     		mov	r0, r3
 362 0010 BD46     		mov	sp, r7
 363              		@ sp needed for prologue
 364 0012 80BD     		pop	{r7, pc}
 365              	.L20:
 366              		.align	2
 367              	.L19:
 368 0014 00000000 		.word	RxBuf_inSize
 369              		.cfi_endproc
 370              	.LFE3:
 372              		.section	.text.RxBuf_Init,"ax",%progbits
 373              		.align	2
 374              		.global	RxBuf_Init
 375              		.code	16
 376              		.thumb_func
 378              	RxBuf_Init:
 379              	.LFB4:
 138:../Generated_Code/RxBuf.c **** 
 139:../Generated_Code/RxBuf.c **** /*
 140:../Generated_Code/RxBuf.c **** ** ===================================================================
 141:../Generated_Code/RxBuf.c **** **     Method      :  RxBuf_Init (component RingBufferUInt8)
 142:../Generated_Code/RxBuf.c **** **
 143:../Generated_Code/RxBuf.c **** **     Description :
 144:../Generated_Code/RxBuf.c **** **         Initializes the data structure
 145:../Generated_Code/RxBuf.c **** **     Parameters  : None
 146:../Generated_Code/RxBuf.c **** **     Returns     : Nothing
 147:../Generated_Code/RxBuf.c **** ** ===================================================================
 148:../Generated_Code/RxBuf.c **** */
 149:../Generated_Code/RxBuf.c **** void RxBuf_Init(void)
 150:../Generated_Code/RxBuf.c **** {
 380              		.loc 1 150 0
 381              		.cfi_startproc
 382 0000 80B5     		push	{r7, lr}
 383              	.LCFI10:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 00AF     		add	r7, sp, #0
 388              	.LCFI11:
 389              		.cfi_def_cfa_register 7
 151:../Generated_Code/RxBuf.c ****   RxBuf_inIdx = 0;
 390              		.loc 1 151 0
 391 0004 054B     		ldr	r3, .L22
 392 0006 0022     		mov	r2, #0
 393 0008 1A70     		strb	r2, [r3]
 152:../Generated_Code/RxBuf.c ****   RxBuf_outIdx = 0;
 394              		.loc 1 152 0
 395 000a 054B     		ldr	r3, .L22+4
 396 000c 0022     		mov	r2, #0
 397 000e 1A70     		strb	r2, [r3]
 153:../Generated_Code/RxBuf.c ****   RxBuf_inSize = 0;
 398              		.loc 1 153 0
 399 0010 044B     		ldr	r3, .L22+8
 400 0012 0022     		mov	r2, #0
 401 0014 1A70     		strb	r2, [r3]
 154:../Generated_Code/RxBuf.c **** }
 402              		.loc 1 154 0
 403 0016 BD46     		mov	sp, r7
 404              		@ sp needed for prologue
 405 0018 80BD     		pop	{r7, pc}
 406              	.L23:
 407 001a C046     		.align	2
 408              	.L22:
 409 001c 00000000 		.word	RxBuf_inIdx
 410 0020 00000000 		.word	RxBuf_outIdx
 411 0024 00000000 		.word	RxBuf_inSize
 412              		.cfi_endproc
 413              	.LFE4:
 415              		.section	.text.RxBuf_Clear,"ax",%progbits
 416              		.align	2
 417              		.global	RxBuf_Clear
 418              		.code	16
 419              		.thumb_func
 421              	RxBuf_Clear:
 422              	.LFB5:
 155:../Generated_Code/RxBuf.c **** 
 156:../Generated_Code/RxBuf.c **** /*
 157:../Generated_Code/RxBuf.c **** ** ===================================================================
 158:../Generated_Code/RxBuf.c **** **     Method      :  RxBuf_Clear (component RingBufferUInt8)
 159:../Generated_Code/RxBuf.c **** **
 160:../Generated_Code/RxBuf.c **** **     Description :
 161:../Generated_Code/RxBuf.c **** **         Clear (empty) the ring buffer.
 162:../Generated_Code/RxBuf.c **** **     Parameters  : None
 163:../Generated_Code/RxBuf.c **** **     Returns     : Nothing
 164:../Generated_Code/RxBuf.c **** ** ===================================================================
 165:../Generated_Code/RxBuf.c **** */
 166:../Generated_Code/RxBuf.c **** void RxBuf_Clear(void)
 167:../Generated_Code/RxBuf.c **** {
 423              		.loc 1 167 0
 424              		.cfi_startproc
 425 0000 80B5     		push	{r7, lr}
 426              	.LCFI12:
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 00AF     		add	r7, sp, #0
 431              	.LCFI13:
 432              		.cfi_def_cfa_register 7
 168:../Generated_Code/RxBuf.c ****   EnterCritical();
 433              		.loc 1 168 0
 434 0004 104B     		ldr	r3, .L27
 435 0006 1B78     		ldrb	r3, [r3]
 436 0008 DBB2     		uxtb	r3, r3
 437 000a 0133     		add	r3, r3, #1
 438 000c DBB2     		uxtb	r3, r3
 439 000e 0E4A     		ldr	r2, .L27
 440 0010 191C     		add	r1, r3, #0
 441 0012 1170     		strb	r1, [r2]
 442 0014 012B     		cmp	r3, #1
 443 0016 04D1     		bne	.L25
 444              		.loc 1 168 0 is_stmt 0 discriminator 1
 445 0018 0C4B     		ldr	r3, .L27+4
 446              	@ 168 "../Generated_Code/RxBuf.c" 1
 447 001a EFF31080 		MRS R0, PRIMASK
 448 001e 72B6     		CPSID i
 449 0020 1870     		STRB R0, [r3]
 450              	@ 0 "" 2
 451              		.code	16
 452              	.L25:
 169:../Generated_Code/RxBuf.c ****   RxBuf_Init();
 453              		.loc 1 169 0 is_stmt 1
 454 0022 FFF7FEFF 		bl	RxBuf_Init
 170:../Generated_Code/RxBuf.c ****   ExitCritical();
 455              		.loc 1 170 0
 456 0026 084B     		ldr	r3, .L27
 457 0028 1B78     		ldrb	r3, [r3]
 458 002a DBB2     		uxtb	r3, r3
 459 002c 013B     		sub	r3, r3, #1
 460 002e DBB2     		uxtb	r3, r3
 461 0030 054A     		ldr	r2, .L27
 462 0032 191C     		add	r1, r3, #0
 463 0034 1170     		strb	r1, [r2]
 464 0036 002B     		cmp	r3, #0
 465 0038 03D1     		bne	.L24
 466              		.loc 1 170 0 is_stmt 0 discriminator 1
 467 003a 044B     		ldr	r3, .L27+4
 468              	@ 170 "../Generated_Code/RxBuf.c" 1
 469 003c 1878     		ldrb r0, [r3]
 470 003e 80F31088 		msr PRIMASK,r0;
 471              		
 472              	@ 0 "" 2
 473              		.code	16
 474              	.L24:
 171:../Generated_Code/RxBuf.c **** }
 475              		.loc 1 171 0 is_stmt 1
 476 0042 BD46     		mov	sp, r7
 477              		@ sp needed for prologue
 478 0044 80BD     		pop	{r7, pc}
 479              	.L28:
 480 0046 C046     		.align	2
 481              	.L27:
 482 0048 00000000 		.word	SR_lock
 483 004c 00000000 		.word	SR_reg
 484              		.cfi_endproc
 485              	.LFE5:
 487              		.text
 488              	.Letext0:
 489              		.file 2 "C:/Freescale/CW MCU v10.3/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 490              		.file 3 "../Generated_Code/PE_Types.h"
 491              		.file 4 "../Generated_Code/Cpu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RxBuf.c
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:18     .bss.RxBuf_buffer:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:21     .bss.RxBuf_buffer:00000000 RxBuf_buffer
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:26     .bss.RxBuf_inIdx:00000000 RxBuf_inIdx
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:27     .bss.RxBuf_inIdx:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:31     .bss.RxBuf_outIdx:00000000 RxBuf_outIdx
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:32     .bss.RxBuf_outIdx:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:36     .bss.RxBuf_inSize:00000000 RxBuf_inSize
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:37     .bss.RxBuf_inSize:00000000 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:39     .text.RxBuf_Put:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:44     .text.RxBuf_Put:00000000 RxBuf_Put
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:164    .text.RxBuf_Put:000000a0 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:173    .text.RxBuf_Get:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:178    .text.RxBuf_Get:00000000 RxBuf_Get
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:295    .text.RxBuf_Get:0000009c $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:304    .text.RxBuf_NofElements:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:309    .text.RxBuf_NofElements:00000000 RxBuf_NofElements
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:332    .text.RxBuf_NofElements:00000010 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:337    .text.RxBuf_NofFreeElements:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:342    .text.RxBuf_NofFreeElements:00000000 RxBuf_NofFreeElements
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:368    .text.RxBuf_NofFreeElements:00000014 $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:373    .text.RxBuf_Init:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:378    .text.RxBuf_Init:00000000 RxBuf_Init
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:409    .text.RxBuf_Init:0000001c $d
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:416    .text.RxBuf_Clear:00000000 $t
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:421    .text.RxBuf_Clear:00000000 RxBuf_Clear
C:\Users\LARM\AppData\Local\Temp\ccNGNjF7.s:482    .text.RxBuf_Clear:00000048 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SR_lock
SR_reg
